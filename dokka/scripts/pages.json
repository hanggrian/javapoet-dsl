[{"name":"abstract fun append(code: CodeBlock)","description":"com.hendraanggrian.javapoet.collections.CodeBlockAppendable.append","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-appendable/append.html","searchKeys":["append","abstract fun append(code: CodeBlock)","com.hendraanggrian.javapoet.collections.CodeBlockAppendable.append"]},{"name":"abstract fun append(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.collections.CodeBlockAppendable.append","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-appendable/append.html","searchKeys":["append","abstract fun append(format: String, vararg args: Any)","com.hendraanggrian.javapoet.collections.CodeBlockAppendable.append"]},{"name":"abstract fun appendLine()","description":"com.hendraanggrian.javapoet.collections.CodeBlockAppendable.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-appendable/append-line.html","searchKeys":["appendLine","abstract fun appendLine()","com.hendraanggrian.javapoet.collections.CodeBlockAppendable.appendLine"]},{"name":"abstract fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.collections.CodeBlockAppendable.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-appendable/append-line.html","searchKeys":["appendLine","abstract fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.collections.CodeBlockAppendable.appendLine"]},{"name":"abstract fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.collections.CodeBlockAppendable.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-appendable/append-line.html","searchKeys":["appendLine","abstract fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.collections.CodeBlockAppendable.appendLine"]},{"name":"abstract fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendNamed","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/append-named.html","searchKeys":["appendNamed","abstract fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendNamed"]},{"name":"abstract fun beginControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.beginControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/begin-control-flow.html","searchKeys":["beginControlFlow","abstract fun beginControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.collections.CodeBlockContainer.beginControlFlow"]},{"name":"abstract fun endControlFlow()","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/end-control-flow.html","searchKeys":["endControlFlow","abstract fun endControlFlow()","com.hendraanggrian.javapoet.collections.CodeBlockContainer.endControlFlow"]},{"name":"abstract fun endControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/end-control-flow.html","searchKeys":["endControlFlow","abstract fun endControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.collections.CodeBlockContainer.endControlFlow"]},{"name":"abstract fun nextControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.nextControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/next-control-flow.html","searchKeys":["nextControlFlow","abstract fun nextControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.collections.CodeBlockContainer.nextControlFlow"]},{"name":"abstract operator fun provideDelegate(thisRef: Any?, property: KProperty<*>): ReadOnlyProperty<Any?, T>","description":"com.hendraanggrian.javapoet.SpecLoader.provideDelegate","location":"javapoet-dsl/com.hendraanggrian.javapoet/-spec-loader/provide-delegate.html","searchKeys":["provideDelegate","abstract operator fun provideDelegate(thisRef: Any?, property: KProperty<*>): ReadOnlyProperty<Any?, T>","com.hendraanggrian.javapoet.SpecLoader.provideDelegate"]},{"name":"annotation class JavapoetSpecDsl","description":"com.hendraanggrian.javapoet.JavapoetSpecDsl","location":"javapoet-dsl/com.hendraanggrian.javapoet/-javapoet-spec-dsl/index.html","searchKeys":["JavapoetSpecDsl","annotation class JavapoetSpecDsl","com.hendraanggrian.javapoet.JavapoetSpecDsl"]},{"name":"class AnnotationSpecBuilder(nativeBuilder: AnnotationSpec.Builder)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/index.html","searchKeys":["AnnotationSpecBuilder","class AnnotationSpecBuilder(nativeBuilder: AnnotationSpec.Builder)","com.hendraanggrian.javapoet.AnnotationSpecBuilder"]},{"name":"class AnnotationSpecListScope : AnnotationSpecList","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecListScope","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list-scope/index.html","searchKeys":["AnnotationSpecListScope","class AnnotationSpecListScope : AnnotationSpecList","com.hendraanggrian.javapoet.collections.AnnotationSpecListScope"]},{"name":"class CodeBlockBuilder(nativeBuilder: CodeBlock.Builder) : CodeBlockContainer","description":"com.hendraanggrian.javapoet.CodeBlockBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/index.html","searchKeys":["CodeBlockBuilder","class CodeBlockBuilder(nativeBuilder: CodeBlock.Builder) : CodeBlockContainer","com.hendraanggrian.javapoet.CodeBlockBuilder"]},{"name":"class EnumConstantMapScope : EnumConstantMap","description":"com.hendraanggrian.javapoet.collections.EnumConstantMapScope","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map-scope/index.html","searchKeys":["EnumConstantMapScope","class EnumConstantMapScope : EnumConstantMap","com.hendraanggrian.javapoet.collections.EnumConstantMapScope"]},{"name":"class FieldSpecBuilder(nativeBuilder: FieldSpec.Builder)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/index.html","searchKeys":["FieldSpecBuilder","class FieldSpecBuilder(nativeBuilder: FieldSpec.Builder)","com.hendraanggrian.javapoet.FieldSpecBuilder"]},{"name":"class FieldSpecListScope : FieldSpecList","description":"com.hendraanggrian.javapoet.collections.FieldSpecListScope","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list-scope/index.html","searchKeys":["FieldSpecListScope","class FieldSpecListScope : FieldSpecList","com.hendraanggrian.javapoet.collections.FieldSpecListScope"]},{"name":"class JavaFileBuilder(packageName: String) : TypeSpecList","description":"com.hendraanggrian.javapoet.JavaFileBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/index.html","searchKeys":["JavaFileBuilder","class JavaFileBuilder(packageName: String) : TypeSpecList","com.hendraanggrian.javapoet.JavaFileBuilder"]},{"name":"class JavadocContainerScope : JavadocContainer","description":"com.hendraanggrian.javapoet.collections.JavadocContainerScope","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-javadoc-container-scope/index.html","searchKeys":["JavadocContainerScope","class JavadocContainerScope : JavadocContainer","com.hendraanggrian.javapoet.collections.JavadocContainerScope"]},{"name":"class MethodSpecBuilder(nativeBuilder: MethodSpec.Builder) : CodeBlockContainer","description":"com.hendraanggrian.javapoet.MethodSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/index.html","searchKeys":["MethodSpecBuilder","class MethodSpecBuilder(nativeBuilder: MethodSpec.Builder) : CodeBlockContainer","com.hendraanggrian.javapoet.MethodSpecBuilder"]},{"name":"class MethodSpecListScope : MethodSpecList","description":"com.hendraanggrian.javapoet.collections.MethodSpecListScope","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list-scope/index.html","searchKeys":["MethodSpecListScope","class MethodSpecListScope : MethodSpecList","com.hendraanggrian.javapoet.collections.MethodSpecListScope"]},{"name":"class ParameterSpecBuilder(nativeBuilder: ParameterSpec.Builder)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/index.html","searchKeys":["ParameterSpecBuilder","class ParameterSpecBuilder(nativeBuilder: ParameterSpec.Builder)","com.hendraanggrian.javapoet.ParameterSpecBuilder"]},{"name":"class ParameterSpecListScope : ParameterSpecList","description":"com.hendraanggrian.javapoet.collections.ParameterSpecListScope","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list-scope/index.html","searchKeys":["ParameterSpecListScope","class ParameterSpecListScope : ParameterSpecList","com.hendraanggrian.javapoet.collections.ParameterSpecListScope"]},{"name":"class TypeNameList : MutableList<TypeName> ","description":"com.hendraanggrian.javapoet.collections.TypeNameList","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-name-list/index.html","searchKeys":["TypeNameList","class TypeNameList : MutableList<TypeName> ","com.hendraanggrian.javapoet.collections.TypeNameList"]},{"name":"class TypeSpecBuilder(nativeBuilder: TypeSpec.Builder)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/index.html","searchKeys":["TypeSpecBuilder","class TypeSpecBuilder(nativeBuilder: TypeSpec.Builder)","com.hendraanggrian.javapoet.TypeSpecBuilder"]},{"name":"class TypeSpecListScope : TypeSpecList","description":"com.hendraanggrian.javapoet.collections.TypeSpecListScope","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list-scope/index.html","searchKeys":["TypeSpecListScope","class TypeSpecListScope : TypeSpecList","com.hendraanggrian.javapoet.collections.TypeSpecListScope"]},{"name":"class TypeVariableNameList : MutableList<TypeVariableName> ","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/index.html","searchKeys":["TypeVariableNameList","class TypeVariableNameList : MutableList<TypeVariableName> ","com.hendraanggrian.javapoet.collections.TypeVariableNameList"]},{"name":"fun AnnotationSpecBuilder(nativeBuilder: AnnotationSpec.Builder)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.AnnotationSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/-annotation-spec-builder.html","searchKeys":["AnnotationSpecBuilder","fun AnnotationSpecBuilder(nativeBuilder: AnnotationSpec.Builder)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.AnnotationSpecBuilder"]},{"name":"fun Class<*>.parameterizedBy(typeArguments: Iterable<Type>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun Class<*>.parameterizedBy(typeArguments: Iterable<Type>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun ClassName.parameterizedBy(typeArguments: List<TypeName>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun ClassName.parameterizedBy(typeArguments: List<TypeName>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun CodeBlockBuilder(nativeBuilder: CodeBlock.Builder)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.CodeBlockBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/-code-block-builder.html","searchKeys":["CodeBlockBuilder","fun CodeBlockBuilder(nativeBuilder: CodeBlock.Builder)","com.hendraanggrian.javapoet.CodeBlockBuilder.CodeBlockBuilder"]},{"name":"fun FieldSpecBuilder(nativeBuilder: FieldSpec.Builder)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.FieldSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/-field-spec-builder.html","searchKeys":["FieldSpecBuilder","fun FieldSpecBuilder(nativeBuilder: FieldSpec.Builder)","com.hendraanggrian.javapoet.FieldSpecBuilder.FieldSpecBuilder"]},{"name":"fun JavaFileBuilder(packageName: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.JavaFileBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/-java-file-builder.html","searchKeys":["JavaFileBuilder","fun JavaFileBuilder(packageName: String)","com.hendraanggrian.javapoet.JavaFileBuilder.JavaFileBuilder"]},{"name":"fun JavapoetSpecDsl()","description":"com.hendraanggrian.javapoet.JavapoetSpecDsl.JavapoetSpecDsl","location":"javapoet-dsl/com.hendraanggrian.javapoet/-javapoet-spec-dsl/-javapoet-spec-dsl.html","searchKeys":["JavapoetSpecDsl","fun JavapoetSpecDsl()","com.hendraanggrian.javapoet.JavapoetSpecDsl.JavapoetSpecDsl"]},{"name":"fun KClass<*>.parameterizedBy(typeArguments: Iterable<KClass<*>>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun KClass<*>.parameterizedBy(typeArguments: Iterable<KClass<*>>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun KClass<*>.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun KClass<*>.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun MethodSpecBuilder(nativeBuilder: MethodSpec.Builder)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.MethodSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/-method-spec-builder.html","searchKeys":["MethodSpecBuilder","fun MethodSpecBuilder(nativeBuilder: MethodSpec.Builder)","com.hendraanggrian.javapoet.MethodSpecBuilder.MethodSpecBuilder"]},{"name":"fun ParameterSpecBuilder(nativeBuilder: ParameterSpec.Builder)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.ParameterSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/-parameter-spec-builder.html","searchKeys":["ParameterSpecBuilder","fun ParameterSpecBuilder(nativeBuilder: ParameterSpec.Builder)","com.hendraanggrian.javapoet.ParameterSpecBuilder.ParameterSpecBuilder"]},{"name":"fun String.genericsBy(bounds: Iterable<KClass<*>>): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","fun String.genericsBy(bounds: Iterable<KClass<*>>): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"fun String.genericsBy(bounds: Iterable<Type>): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","fun String.genericsBy(bounds: Iterable<Type>): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"fun String.genericsBy(bounds: List<TypeName>): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","fun String.genericsBy(bounds: List<TypeName>): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"fun String.genericsBy(vararg bounds: KClass<*>): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","fun String.genericsBy(vararg bounds: KClass<*>): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"fun TypeSpecBuilder(nativeBuilder: TypeSpec.Builder)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.TypeSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/-type-spec-builder.html","searchKeys":["TypeSpecBuilder","fun TypeSpecBuilder(nativeBuilder: TypeSpec.Builder)","com.hendraanggrian.javapoet.TypeSpecBuilder.TypeSpecBuilder"]},{"name":"fun add(name: String): MethodSpec","description":"com.hendraanggrian.javapoet.collections.MethodSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/add.html","searchKeys":["add","fun add(name: String): MethodSpec","com.hendraanggrian.javapoet.collections.MethodSpecList.add"]},{"name":"fun add(name: String): TypeVariableName","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/add.html","searchKeys":["add","fun add(name: String): TypeVariableName","com.hendraanggrian.javapoet.collections.TypeVariableNameList.add"]},{"name":"fun add(name: String, bounds: Iterable<KClass<*>>): TypeVariableName","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/add.html","searchKeys":["add","fun add(name: String, bounds: Iterable<KClass<*>>): TypeVariableName","com.hendraanggrian.javapoet.collections.TypeVariableNameList.add"]},{"name":"fun add(name: String, bounds: Iterable<Type>): TypeVariableName","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/add.html","searchKeys":["add","fun add(name: String, bounds: Iterable<Type>): TypeVariableName","com.hendraanggrian.javapoet.collections.TypeVariableNameList.add"]},{"name":"fun add(name: String, bounds: List<TypeName>): TypeVariableName","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/add.html","searchKeys":["add","fun add(name: String, bounds: List<TypeName>): TypeVariableName","com.hendraanggrian.javapoet.collections.TypeVariableNameList.add"]},{"name":"fun add(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.collections.MethodSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/add.html","searchKeys":["add","fun add(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.collections.MethodSpecList.add"]},{"name":"fun add(name: String, vararg bounds: KClass<*>): TypeVariableName","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/add.html","searchKeys":["add","fun add(name: String, vararg bounds: KClass<*>): TypeVariableName","com.hendraanggrian.javapoet.collections.TypeVariableNameList.add"]},{"name":"fun add(name: String, vararg bounds: Type): TypeVariableName","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/add.html","searchKeys":["add","fun add(name: String, vararg bounds: Type): TypeVariableName","com.hendraanggrian.javapoet.collections.TypeVariableNameList.add"]},{"name":"fun add(name: String, vararg bounds: TypeName): TypeVariableName","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/add.html","searchKeys":["add","fun add(name: String, vararg bounds: TypeName): TypeVariableName","com.hendraanggrian.javapoet.collections.TypeVariableNameList.add"]},{"name":"fun add(type: Class<*>): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","fun add(type: Class<*>): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"fun add(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","fun add(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"fun add(type: ClassName): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","fun add(type: ClassName): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"fun add(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","fun add(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"fun add(type: KClass<*>): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","fun add(type: KClass<*>): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"fun add(type: KClass<*>): TypeName","description":"com.hendraanggrian.javapoet.collections.TypeNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-name-list/add.html","searchKeys":["add","fun add(type: KClass<*>): TypeName","com.hendraanggrian.javapoet.collections.TypeNameList.add"]},{"name":"fun add(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","fun add(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"fun add(type: Type): TypeName","description":"com.hendraanggrian.javapoet.collections.TypeNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-name-list/add.html","searchKeys":["add","fun add(type: Type): TypeName","com.hendraanggrian.javapoet.collections.TypeNameList.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"fun addAnnotation(type: ClassName): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: ClassName): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation"]},{"name":"fun addAnnotation(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation"]},{"name":"fun addAnnotation(type: String): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: String): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation"]},{"name":"fun addAnnotation(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnnotation"]},{"name":"fun addAnonymous(code: CodeBlock): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(code: CodeBlock): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous"]},{"name":"fun addAnonymous(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous"]},{"name":"fun addAnonymous(format: String, vararg args: Any): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(format: String, vararg args: Any): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous"]},{"name":"fun addAnonymous(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addAnonymous"]},{"name":"fun addClass(type: ClassName): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addClass","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-class.html","searchKeys":["addClass","fun addClass(type: ClassName): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addClass"]},{"name":"fun addClass(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addClass","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-class.html","searchKeys":["addClass","fun addClass(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addClass"]},{"name":"fun addClass(type: String): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addClass","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-class.html","searchKeys":["addClass","fun addClass(type: String): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addClass"]},{"name":"fun addClass(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addClass","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-class.html","searchKeys":["addClass","fun addClass(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addClass"]},{"name":"fun addComment(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addComment","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/add-comment.html","searchKeys":["addComment","fun addComment(format: String, vararg args: Any)","com.hendraanggrian.javapoet.JavaFileBuilder.addComment"]},{"name":"fun addComment(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addComment","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/add-comment.html","searchKeys":["addComment","fun addComment(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.addComment"]},{"name":"fun addConstructor(): MethodSpec","description":"com.hendraanggrian.javapoet.collections.MethodSpecList.addConstructor","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/add-constructor.html","searchKeys":["addConstructor","fun addConstructor(): MethodSpec","com.hendraanggrian.javapoet.collections.MethodSpecList.addConstructor"]},{"name":"fun addConstructor(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.collections.MethodSpecList.addConstructor","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/add-constructor.html","searchKeys":["addConstructor","fun addConstructor(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.collections.MethodSpecList.addConstructor"]},{"name":"fun addEnum(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addEnum","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-enum.html","searchKeys":["addEnum","fun addEnum(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addEnum"]},{"name":"fun addEnum(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addEnum","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-enum.html","searchKeys":["addEnum","fun addEnum(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addEnum"]},{"name":"fun addInitializerBlock(code: CodeBlock)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/add-initializer-block.html","searchKeys":["addInitializerBlock","fun addInitializerBlock(code: CodeBlock)","com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock"]},{"name":"fun addInitializerBlock(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/add-initializer-block.html","searchKeys":["addInitializerBlock","fun addInitializerBlock(format: String, vararg args: Any)","com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock"]},{"name":"fun addInterface(type: ClassName): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-interface.html","searchKeys":["addInterface","fun addInterface(type: ClassName): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface"]},{"name":"fun addInterface(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-interface.html","searchKeys":["addInterface","fun addInterface(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface"]},{"name":"fun addInterface(type: String): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-interface.html","searchKeys":["addInterface","fun addInterface(type: String): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface"]},{"name":"fun addInterface(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/add-interface.html","searchKeys":["addInterface","fun addInterface(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.collections.TypeSpecList.addInterface"]},{"name":"fun addMember(name: String, code: CodeBlock)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/add-member.html","searchKeys":["addMember","fun addMember(name: String, code: CodeBlock)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember"]},{"name":"fun addMember(name: String, format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/add-member.html","searchKeys":["addMember","fun addMember(name: String, format: String, vararg args: Any)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.addModifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.FieldSpecBuilder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addModifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.MethodSpecBuilder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.addModifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.ParameterSpecBuilder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addModifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.TypeSpecBuilder.addModifiers"]},{"name":"fun addStaticBlock(code: CodeBlock)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/add-static-block.html","searchKeys":["addStaticBlock","fun addStaticBlock(code: CodeBlock)","com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock"]},{"name":"fun addStaticBlock(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/add-static-block.html","searchKeys":["addStaticBlock","fun addStaticBlock(format: String, vararg args: Any)","com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock"]},{"name":"fun addStaticImport(constant: Enum<*>)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(constant: Enum<*>)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun addStaticImport(type: Class<*>, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(type: Class<*>, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun addStaticImport(type: ClassName, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(type: ClassName, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun addStaticImport(type: KClass<*>, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(type: KClass<*>, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun adding(bounds: Iterable<KClass<*>>): SpecLoader<TypeVariableName>","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/adding.html","searchKeys":["adding","fun adding(bounds: Iterable<KClass<*>>): SpecLoader<TypeVariableName>","com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding"]},{"name":"fun adding(bounds: Iterable<Type>): SpecLoader<TypeVariableName>","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/adding.html","searchKeys":["adding","fun adding(bounds: Iterable<Type>): SpecLoader<TypeVariableName>","com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding"]},{"name":"fun adding(bounds: List<TypeName>): SpecLoader<TypeVariableName>","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/adding.html","searchKeys":["adding","fun adding(bounds: List<TypeName>): SpecLoader<TypeVariableName>","com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding"]},{"name":"fun adding(configuration: MethodSpecBuilder.() -> Unit): SpecLoader<MethodSpec>","description":"com.hendraanggrian.javapoet.collections.MethodSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/adding.html","searchKeys":["adding","fun adding(configuration: MethodSpecBuilder.() -> Unit): SpecLoader<MethodSpec>","com.hendraanggrian.javapoet.collections.MethodSpecList.adding"]},{"name":"fun adding(type: KClass<*>, vararg modifiers: Modifier): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/adding.html","searchKeys":["adding","fun adding(type: KClass<*>, vararg modifiers: Modifier): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.collections.FieldSpecList.adding"]},{"name":"fun adding(type: KClass<*>, vararg modifiers: Modifier): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/adding.html","searchKeys":["adding","fun adding(type: KClass<*>, vararg modifiers: Modifier): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.collections.ParameterSpecList.adding"]},{"name":"fun adding(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/adding.html","searchKeys":["adding","fun adding(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.collections.FieldSpecList.adding"]},{"name":"fun adding(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/adding.html","searchKeys":["adding","fun adding(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.collections.ParameterSpecList.adding"]},{"name":"fun adding(type: Type, vararg modifiers: Modifier): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/adding.html","searchKeys":["adding","fun adding(type: Type, vararg modifiers: Modifier): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.collections.FieldSpecList.adding"]},{"name":"fun adding(type: Type, vararg modifiers: Modifier): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/adding.html","searchKeys":["adding","fun adding(type: Type, vararg modifiers: Modifier): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.collections.ParameterSpecList.adding"]},{"name":"fun adding(type: Type, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/adding.html","searchKeys":["adding","fun adding(type: Type, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.collections.FieldSpecList.adding"]},{"name":"fun adding(type: Type, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/adding.html","searchKeys":["adding","fun adding(type: Type, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.collections.ParameterSpecList.adding"]},{"name":"fun adding(type: TypeName, vararg modifiers: Modifier): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/adding.html","searchKeys":["adding","fun adding(type: TypeName, vararg modifiers: Modifier): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.collections.FieldSpecList.adding"]},{"name":"fun adding(type: TypeName, vararg modifiers: Modifier): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/adding.html","searchKeys":["adding","fun adding(type: TypeName, vararg modifiers: Modifier): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.collections.ParameterSpecList.adding"]},{"name":"fun adding(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/adding.html","searchKeys":["adding","fun adding(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.collections.FieldSpecList.adding"]},{"name":"fun adding(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/adding.html","searchKeys":["adding","fun adding(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.collections.ParameterSpecList.adding"]},{"name":"fun adding(vararg bounds: KClass<*>): SpecLoader<TypeVariableName>","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/adding.html","searchKeys":["adding","fun adding(vararg bounds: KClass<*>): SpecLoader<TypeVariableName>","com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding"]},{"name":"fun adding(vararg bounds: Type): SpecLoader<TypeVariableName>","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/adding.html","searchKeys":["adding","fun adding(vararg bounds: Type): SpecLoader<TypeVariableName>","com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding"]},{"name":"fun adding(vararg bounds: TypeName): SpecLoader<TypeVariableName>","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/adding.html","searchKeys":["adding","fun adding(vararg bounds: TypeName): SpecLoader<TypeVariableName>","com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding"]},{"name":"fun addingAnnotation(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnnotation","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-annotation.html","searchKeys":["addingAnnotation","fun addingAnnotation(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnnotation"]},{"name":"fun addingAnonymous(vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnonymous","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-anonymous.html","searchKeys":["addingAnonymous","fun addingAnonymous(vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnonymous"]},{"name":"fun addingClass(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingClass","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-class.html","searchKeys":["addingClass","fun addingClass(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingClass"]},{"name":"fun addingEnum(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingEnum","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-enum.html","searchKeys":["addingEnum","fun addingEnum(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingEnum"]},{"name":"fun addingInterface(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingInterface","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-interface.html","searchKeys":["addingInterface","fun addingInterface(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingInterface"]},{"name":"fun alwaysQualify(vararg simpleNames: String)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualify","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/always-qualify.html","searchKeys":["alwaysQualify","fun alwaysQualify(vararg simpleNames: String)","com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualify"]},{"name":"fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.FieldSpecBuilder.annotations"]},{"name":"fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.annotations"]},{"name":"fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations"]},{"name":"fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.annotations"]},{"name":"fun avoidClashesWithNestedClasses(type: Class<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(type: Class<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun avoidClashesWithNestedClasses(type: KClass<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(type: KClass<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun avoidClashesWithNestedClasses(typeElement: TypeElement)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(typeElement: TypeElement)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun beginControlFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/begin-control-flow.html","searchKeys":["beginControlFlow","fun beginControlFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow"]},{"name":"fun build(): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/build.html","searchKeys":["build","fun build(): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecBuilder.build"]},{"name":"fun build(): CodeBlock","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/build.html","searchKeys":["build","fun build(): CodeBlock","com.hendraanggrian.javapoet.CodeBlockBuilder.build"]},{"name":"fun build(): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/build.html","searchKeys":["build","fun build(): FieldSpec","com.hendraanggrian.javapoet.FieldSpecBuilder.build"]},{"name":"fun build(): JavaFile","description":"com.hendraanggrian.javapoet.JavaFileBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/build.html","searchKeys":["build","fun build(): JavaFile","com.hendraanggrian.javapoet.JavaFileBuilder.build"]},{"name":"fun build(): MethodSpec","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/build.html","searchKeys":["build","fun build(): MethodSpec","com.hendraanggrian.javapoet.MethodSpecBuilder.build"]},{"name":"fun build(): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/build.html","searchKeys":["build","fun build(): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecBuilder.build"]},{"name":"fun build(): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/build.html","searchKeys":["build","fun build(): TypeSpec","com.hendraanggrian.javapoet.TypeSpecBuilder.build"]},{"name":"fun buildAnonymousTypeSpec(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnonymousTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-anonymous-type-spec.html","searchKeys":["buildAnonymousTypeSpec","fun buildAnonymousTypeSpec(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnonymousTypeSpec"]},{"name":"fun buildingAnnotationTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.buildingAnnotationTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-annotation-type-spec.html","searchKeys":["buildingAnnotationTypeSpec","fun buildingAnnotationTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.buildingAnnotationTypeSpec"]},{"name":"fun buildingAnonymousTypeSpec(vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.buildingAnonymousTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-anonymous-type-spec.html","searchKeys":["buildingAnonymousTypeSpec","fun buildingAnonymousTypeSpec(vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.buildingAnonymousTypeSpec"]},{"name":"fun buildingClassTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.buildingClassTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-class-type-spec.html","searchKeys":["buildingClassTypeSpec","fun buildingClassTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.buildingClassTypeSpec"]},{"name":"fun buildingEnumTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.buildingEnumTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-enum-type-spec.html","searchKeys":["buildingEnumTypeSpec","fun buildingEnumTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.buildingEnumTypeSpec"]},{"name":"fun buildingFieldSpec(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.buildingFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-field-spec.html","searchKeys":["buildingFieldSpec","fun buildingFieldSpec(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.buildingFieldSpec"]},{"name":"fun buildingFieldSpec(type: Type, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.buildingFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-field-spec.html","searchKeys":["buildingFieldSpec","fun buildingFieldSpec(type: Type, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.buildingFieldSpec"]},{"name":"fun buildingFieldSpec(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","description":"com.hendraanggrian.javapoet.buildingFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-field-spec.html","searchKeys":["buildingFieldSpec","fun buildingFieldSpec(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecLoader<FieldSpec>","com.hendraanggrian.javapoet.buildingFieldSpec"]},{"name":"fun buildingInterfaceTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.buildingInterfaceTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-interface-type-spec.html","searchKeys":["buildingInterfaceTypeSpec","fun buildingInterfaceTypeSpec(configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.buildingInterfaceTypeSpec"]},{"name":"fun buildingMethodSpec(configuration: MethodSpecBuilder.() -> Unit): SpecLoader<MethodSpec>","description":"com.hendraanggrian.javapoet.buildingMethodSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-method-spec.html","searchKeys":["buildingMethodSpec","fun buildingMethodSpec(configuration: MethodSpecBuilder.() -> Unit): SpecLoader<MethodSpec>","com.hendraanggrian.javapoet.buildingMethodSpec"]},{"name":"fun buildingParameterSpec(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.buildingParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-parameter-spec.html","searchKeys":["buildingParameterSpec","fun buildingParameterSpec(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.buildingParameterSpec"]},{"name":"fun buildingParameterSpec(type: Type, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.buildingParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-parameter-spec.html","searchKeys":["buildingParameterSpec","fun buildingParameterSpec(type: Type, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.buildingParameterSpec"]},{"name":"fun buildingParameterSpec(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","description":"com.hendraanggrian.javapoet.buildingParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/building-parameter-spec.html","searchKeys":["buildingParameterSpec","fun buildingParameterSpec(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecLoader<ParameterSpec>","com.hendraanggrian.javapoet.buildingParameterSpec"]},{"name":"fun clear()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.clear","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/clear.html","searchKeys":["clear","fun clear()","com.hendraanggrian.javapoet.CodeBlockBuilder.clear"]},{"name":"fun codeBlockOf(format: String, vararg args: Any?): CodeBlock","description":"com.hendraanggrian.javapoet.codeBlockOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/code-block-of.html","searchKeys":["codeBlockOf","fun codeBlockOf(format: String, vararg args: Any?): CodeBlock","com.hendraanggrian.javapoet.codeBlockOf"]},{"name":"fun defaultValue(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/default-value.html","searchKeys":["defaultValue","fun defaultValue(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue"]},{"name":"fun endControlFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow"]},{"name":"fun enumConstants(configuration: EnumConstantMapScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/enum-constants.html","searchKeys":["enumConstants","fun enumConstants(configuration: EnumConstantMapScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants"]},{"name":"fun exceptions(configuration: TypeNameList.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.exceptions","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/exceptions.html","searchKeys":["exceptions","fun exceptions(configuration: TypeNameList.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.exceptions"]},{"name":"fun fields(configuration: FieldSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.fields","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/fields.html","searchKeys":["fields","fun fields(configuration: FieldSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.fields"]},{"name":"fun indent()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.indent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/indent.html","searchKeys":["indent","fun indent()","com.hendraanggrian.javapoet.CodeBlockBuilder.indent"]},{"name":"fun indent(configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.indent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/indent.html","searchKeys":["indent","fun indent(configuration: () -> Unit)","com.hendraanggrian.javapoet.CodeBlockBuilder.indent"]},{"name":"fun indent(level: Int, configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.indent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/indent.html","searchKeys":["indent","fun indent(level: Int, configuration: () -> Unit)","com.hendraanggrian.javapoet.CodeBlockBuilder.indent"]},{"name":"fun initializer(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.initializer","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/initializer.html","searchKeys":["initializer","fun initializer(format: String, vararg args: Any)","com.hendraanggrian.javapoet.FieldSpecBuilder.initializer"]},{"name":"fun isEmpty(): Boolean","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.isEmpty","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.hendraanggrian.javapoet.CodeBlockBuilder.isEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.isNotEmpty","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","com.hendraanggrian.javapoet.CodeBlockBuilder.isNotEmpty"]},{"name":"fun javadoc(configuration: JavadocContainerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocContainerScope.() -> Unit)","com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc"]},{"name":"fun javadoc(configuration: JavadocContainerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocContainerScope.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc"]},{"name":"fun javadoc(configuration: JavadocContainerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocContainerScope.() -> Unit)","com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc"]},{"name":"fun javadoc(configuration: JavadocContainerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocContainerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc"]},{"name":"fun methods(configuration: MethodSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.methods","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/methods.html","searchKeys":["methods","fun methods(configuration: MethodSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.methods"]},{"name":"fun nextControlFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/next-control-flow.html","searchKeys":["nextControlFlow","fun nextControlFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow"]},{"name":"fun parameters(configuration: ParameterSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.parameters","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/parameters.html","searchKeys":["parameters","fun parameters(configuration: ParameterSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.parameters"]},{"name":"fun put(name: String): TypeSpec?","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.put","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/put.html","searchKeys":["put","fun put(name: String): TypeSpec?","com.hendraanggrian.javapoet.collections.EnumConstantMap.put"]},{"name":"fun put(name: String, constructorParameterCode: CodeBlock): TypeSpec?","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.put","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/put.html","searchKeys":["put","fun put(name: String, constructorParameterCode: CodeBlock): TypeSpec?","com.hendraanggrian.javapoet.collections.EnumConstantMap.put"]},{"name":"fun put(name: String, constructorParameterCode: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.put","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/put.html","searchKeys":["put","fun put(name: String, constructorParameterCode: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","com.hendraanggrian.javapoet.collections.EnumConstantMap.put"]},{"name":"fun put(name: String, constructorParameterFormat: String, vararg constructorParameterArgs: Any): TypeSpec?","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.put","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/put.html","searchKeys":["put","fun put(name: String, constructorParameterFormat: String, vararg constructorParameterArgs: Any): TypeSpec?","com.hendraanggrian.javapoet.collections.EnumConstantMap.put"]},{"name":"fun put(name: String, constructorParameterFormat: String, vararg constructorParameterArgs: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.put","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/put.html","searchKeys":["put","fun put(name: String, constructorParameterFormat: String, vararg constructorParameterArgs: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","com.hendraanggrian.javapoet.collections.EnumConstantMap.put"]},{"name":"fun putting(constructorParameterCode: CodeBlock): SpecLoader<TypeSpec?>","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.putting","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/putting.html","searchKeys":["putting","fun putting(constructorParameterCode: CodeBlock): SpecLoader<TypeSpec?>","com.hendraanggrian.javapoet.collections.EnumConstantMap.putting"]},{"name":"fun putting(constructorParameterCode: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec?>","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.putting","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/putting.html","searchKeys":["putting","fun putting(constructorParameterCode: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec?>","com.hendraanggrian.javapoet.collections.EnumConstantMap.putting"]},{"name":"fun putting(constructorParameterFormat: String, vararg constructorParameterArgs: Any): SpecLoader<TypeSpec?>","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.putting","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/putting.html","searchKeys":["putting","fun putting(constructorParameterFormat: String, vararg constructorParameterArgs: Any): SpecLoader<TypeSpec?>","com.hendraanggrian.javapoet.collections.EnumConstantMap.putting"]},{"name":"fun putting(constructorParameterFormat: String, vararg constructorParameterArgs: Any, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec?>","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.putting","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/putting.html","searchKeys":["putting","fun putting(constructorParameterFormat: String, vararg constructorParameterArgs: Any, configuration: TypeSpecBuilder.() -> Unit): SpecLoader<TypeSpec?>","com.hendraanggrian.javapoet.collections.EnumConstantMap.putting"]},{"name":"fun returns(type: KClass<*>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","fun returns(type: KClass<*>)","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"fun returns(type: Type)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","fun returns(type: Type)","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"fun superclass(type: KClass<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","fun superclass(type: KClass<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"fun superclass(type: Type)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","fun superclass(type: Type)","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"fun superinterfaces(configuration: TypeNameList.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterfaces.html","searchKeys":["superinterfaces","fun superinterfaces(configuration: TypeNameList.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces"]},{"name":"fun typeVariables(configuration: TypeVariableNameList.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/type-variables.html","searchKeys":["typeVariables","fun typeVariables(configuration: TypeVariableNameList.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables"]},{"name":"fun typeVariables(configuration: TypeVariableNameList.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/type-variables.html","searchKeys":["typeVariables","fun typeVariables(configuration: TypeVariableNameList.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables"]},{"name":"fun types(configuration: TypeSpecListScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.types","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/types.html","searchKeys":["types","fun types(configuration: TypeSpecListScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.types"]},{"name":"fun unindent()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.unindent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/unindent.html","searchKeys":["unindent","fun unindent()","com.hendraanggrian.javapoet.CodeBlockBuilder.unindent"]},{"name":"inline fun <T> Class<*>.plusParameter(): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.plusParameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/plus-parameter.html","searchKeys":["plusParameter","inline fun <T> Class<*>.plusParameter(): ParameterizedTypeName","com.hendraanggrian.javapoet.plusParameter"]},{"name":"inline fun <T> ClassName.plusParameter(): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.plusParameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/plus-parameter.html","searchKeys":["plusParameter","inline fun <T> ClassName.plusParameter(): ParameterizedTypeName","com.hendraanggrian.javapoet.plusParameter"]},{"name":"inline fun <T> KClass<*>.plusParameter(): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.plusParameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/plus-parameter.html","searchKeys":["plusParameter","inline fun <T> KClass<*>.plusParameter(): ParameterizedTypeName","com.hendraanggrian.javapoet.plusParameter"]},{"name":"inline fun <T> add(): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","inline fun <T> add(): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"inline fun <T> add(): TypeName","description":"com.hendraanggrian.javapoet.collections.TypeNameList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-name-list/add.html","searchKeys":["add","inline fun <T> add(): TypeName","com.hendraanggrian.javapoet.collections.TypeNameList.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecList.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecList.add"]},{"name":"inline fun <T> add(noinline configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.add","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/add.html","searchKeys":["add","inline fun <T> add(noinline configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.collections.AnnotationSpecList.add"]},{"name":"inline fun <T> addStaticImport(vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","inline fun <T> addStaticImport(vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"inline fun <T> arrayTypeNameOf(): ArrayTypeName","description":"com.hendraanggrian.javapoet.arrayTypeNameOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/array-type-name-of.html","searchKeys":["arrayTypeNameOf","inline fun <T> arrayTypeNameOf(): ArrayTypeName","com.hendraanggrian.javapoet.arrayTypeNameOf"]},{"name":"inline fun <T> avoidClashesWithNestedClasses()","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","inline fun <T> avoidClashesWithNestedClasses()","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"inline fun <T> buildAnnotationSpec(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","inline fun <T> buildAnnotationSpec(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"inline fun <T> buildFieldSpec(name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","inline fun <T> buildFieldSpec(name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"inline fun <T> buildParameterSpec(name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","inline fun <T> buildParameterSpec(name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"inline fun <T> classNameOf(): ClassName","description":"com.hendraanggrian.javapoet.classNameOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/class-name-of.html","searchKeys":["classNameOf","inline fun <T> classNameOf(): ClassName","com.hendraanggrian.javapoet.classNameOf"]},{"name":"inline fun <T> returns()","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","inline fun <T> returns()","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"inline fun <T> superclass()","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","inline fun <T> superclass()","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"inline fun <T> typeNameOf(): TypeName","description":"com.hendraanggrian.javapoet.typeNameOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/type-name-of.html","searchKeys":["typeNameOf","inline fun <T> typeNameOf(): TypeName","com.hendraanggrian.javapoet.typeNameOf"]},{"name":"inline fun <T> wildcardTypeNameLowerOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardTypeNameLowerOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/wildcard-type-name-lower-of.html","searchKeys":["wildcardTypeNameLowerOf","inline fun <T> wildcardTypeNameLowerOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardTypeNameLowerOf"]},{"name":"inline fun <T> wildcardTypeNameUpperOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardTypeNameUpperOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/wildcard-type-name-upper-of.html","searchKeys":["wildcardTypeNameUpperOf","inline fun <T> wildcardTypeNameUpperOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardTypeNameUpperOf"]},{"name":"inline fun Annotation.asAnnotationSpec(includeDefaultValues: Boolean = false): AnnotationSpec","description":"com.hendraanggrian.javapoet.asAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-annotation-spec.html","searchKeys":["asAnnotationSpec","inline fun Annotation.asAnnotationSpec(includeDefaultValues: Boolean = false): AnnotationSpec","com.hendraanggrian.javapoet.asAnnotationSpec"]},{"name":"inline fun AnnotationMirror.asAnnotationSpec(): AnnotationSpec","description":"com.hendraanggrian.javapoet.asAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-annotation-spec.html","searchKeys":["asAnnotationSpec","inline fun AnnotationMirror.asAnnotationSpec(): AnnotationSpec","com.hendraanggrian.javapoet.asAnnotationSpec"]},{"name":"inline fun ArrayType.asArrayTypeName(): ArrayTypeName","description":"com.hendraanggrian.javapoet.asArrayTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-array-type-name.html","searchKeys":["asArrayTypeName","inline fun ArrayType.asArrayTypeName(): ArrayTypeName","com.hendraanggrian.javapoet.asArrayTypeName"]},{"name":"inline fun Class<*>.asClassName(): ClassName","description":"com.hendraanggrian.javapoet.asClassName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-class-name.html","searchKeys":["asClassName","inline fun Class<*>.asClassName(): ClassName","com.hendraanggrian.javapoet.asClassName"]},{"name":"inline fun Class<*>.parameterizedBy(vararg typeArguments: Type): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","inline fun Class<*>.parameterizedBy(vararg typeArguments: Type): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"inline fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","inline fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"inline fun GenericArrayType.asArrayTypeName(): ArrayTypeName","description":"com.hendraanggrian.javapoet.asArrayTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-array-type-name.html","searchKeys":["asArrayTypeName","inline fun GenericArrayType.asArrayTypeName(): ArrayTypeName","com.hendraanggrian.javapoet.asArrayTypeName"]},{"name":"inline fun KClass<*>.asClassName(): ClassName","description":"com.hendraanggrian.javapoet.asClassName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-class-name.html","searchKeys":["asClassName","inline fun KClass<*>.asClassName(): ClassName","com.hendraanggrian.javapoet.asClassName"]},{"name":"inline fun KClass<*>.asTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-type-name.html","searchKeys":["asTypeName","inline fun KClass<*>.asTypeName(): TypeName","com.hendraanggrian.javapoet.asTypeName"]},{"name":"inline fun KClass<*>.toArrayTypeName(): ArrayTypeName","description":"com.hendraanggrian.javapoet.toArrayTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-array-type-name.html","searchKeys":["toArrayTypeName","inline fun KClass<*>.toArrayTypeName(): ArrayTypeName","com.hendraanggrian.javapoet.toArrayTypeName"]},{"name":"inline fun KClass<*>.toLowerWildcardTypeName(): WildcardTypeName","description":"com.hendraanggrian.javapoet.toLowerWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-lower-wildcard-type-name.html","searchKeys":["toLowerWildcardTypeName","inline fun KClass<*>.toLowerWildcardTypeName(): WildcardTypeName","com.hendraanggrian.javapoet.toLowerWildcardTypeName"]},{"name":"inline fun KClass<*>.toUpperWildcardTypeName(): WildcardTypeName","description":"com.hendraanggrian.javapoet.toUpperWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-upper-wildcard-type-name.html","searchKeys":["toUpperWildcardTypeName","inline fun KClass<*>.toUpperWildcardTypeName(): WildcardTypeName","com.hendraanggrian.javapoet.toUpperWildcardTypeName"]},{"name":"inline fun ParameterizedType.asParameterizedTypeName(): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.asParameterizedTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-parameterized-type-name.html","searchKeys":["asParameterizedTypeName","inline fun ParameterizedType.asParameterizedTypeName(): ParameterizedTypeName","com.hendraanggrian.javapoet.asParameterizedTypeName"]},{"name":"inline fun String.genericsBy(): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","inline fun String.genericsBy(): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"inline fun String.genericsBy(vararg bounds: Type): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","inline fun String.genericsBy(vararg bounds: Type): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"inline fun String.genericsBy(vararg bounds: TypeName): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","inline fun String.genericsBy(vararg bounds: TypeName): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"inline fun Type.asTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-type-name.html","searchKeys":["asTypeName","inline fun Type.asTypeName(): TypeName","com.hendraanggrian.javapoet.asTypeName"]},{"name":"inline fun Type.toArrayTypeName(): ArrayTypeName","description":"com.hendraanggrian.javapoet.toArrayTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-array-type-name.html","searchKeys":["toArrayTypeName","inline fun Type.toArrayTypeName(): ArrayTypeName","com.hendraanggrian.javapoet.toArrayTypeName"]},{"name":"inline fun Type.toLowerWildcardTypeName(): WildcardTypeName","description":"com.hendraanggrian.javapoet.toLowerWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-lower-wildcard-type-name.html","searchKeys":["toLowerWildcardTypeName","inline fun Type.toLowerWildcardTypeName(): WildcardTypeName","com.hendraanggrian.javapoet.toLowerWildcardTypeName"]},{"name":"inline fun Type.toUpperWildcardTypeName(): WildcardTypeName","description":"com.hendraanggrian.javapoet.toUpperWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-upper-wildcard-type-name.html","searchKeys":["toUpperWildcardTypeName","inline fun Type.toUpperWildcardTypeName(): WildcardTypeName","com.hendraanggrian.javapoet.toUpperWildcardTypeName"]},{"name":"inline fun TypeElement.asClassName(): ClassName","description":"com.hendraanggrian.javapoet.asClassName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-class-name.html","searchKeys":["asClassName","inline fun TypeElement.asClassName(): ClassName","com.hendraanggrian.javapoet.asClassName"]},{"name":"inline fun TypeMirror.asTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-type-name.html","searchKeys":["asTypeName","inline fun TypeMirror.asTypeName(): TypeName","com.hendraanggrian.javapoet.asTypeName"]},{"name":"inline fun TypeName.toArrayTypeName(): ArrayTypeName","description":"com.hendraanggrian.javapoet.toArrayTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-array-type-name.html","searchKeys":["toArrayTypeName","inline fun TypeName.toArrayTypeName(): ArrayTypeName","com.hendraanggrian.javapoet.toArrayTypeName"]},{"name":"inline fun TypeName.toLowerWildcardTypeName(): WildcardTypeName","description":"com.hendraanggrian.javapoet.toLowerWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-lower-wildcard-type-name.html","searchKeys":["toLowerWildcardTypeName","inline fun TypeName.toLowerWildcardTypeName(): WildcardTypeName","com.hendraanggrian.javapoet.toLowerWildcardTypeName"]},{"name":"inline fun TypeName.toUpperWildcardTypeName(): WildcardTypeName","description":"com.hendraanggrian.javapoet.toUpperWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/to-upper-wildcard-type-name.html","searchKeys":["toUpperWildcardTypeName","inline fun TypeName.toUpperWildcardTypeName(): WildcardTypeName","com.hendraanggrian.javapoet.toUpperWildcardTypeName"]},{"name":"inline fun TypeParameterElement.asTypeVariableName(): TypeVariableName","description":"com.hendraanggrian.javapoet.asTypeVariableName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","inline fun TypeParameterElement.asTypeVariableName(): TypeVariableName","com.hendraanggrian.javapoet.asTypeVariableName"]},{"name":"inline fun TypeVariable.asTypeVariableName(): TypeVariableName","description":"com.hendraanggrian.javapoet.asTypeVariableName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","inline fun TypeVariable.asTypeVariableName(): TypeVariableName","com.hendraanggrian.javapoet.asTypeVariableName"]},{"name":"inline fun TypeVariable<*>.asTypeVariableName(): TypeVariableName","description":"com.hendraanggrian.javapoet.asTypeVariableName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","inline fun TypeVariable<*>.asTypeVariableName(): TypeVariableName","com.hendraanggrian.javapoet.asTypeVariableName"]},{"name":"inline fun VariableElement.asParameterSpec(): ParameterSpec","description":"com.hendraanggrian.javapoet.asParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-parameter-spec.html","searchKeys":["asParameterSpec","inline fun VariableElement.asParameterSpec(): ParameterSpec","com.hendraanggrian.javapoet.asParameterSpec"]},{"name":"inline fun WildcardType.asWildcardTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-wildcard-type-name.html","searchKeys":["asWildcardTypeName","inline fun WildcardType.asWildcardTypeName(): TypeName","com.hendraanggrian.javapoet.asWildcardTypeName"]},{"name":"inline fun WildcardType.asWildcardTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asWildcardTypeName","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-wildcard-type-name.html","searchKeys":["asWildcardTypeName","inline fun WildcardType.asWildcardTypeName(): TypeName","com.hendraanggrian.javapoet.asWildcardTypeName"]},{"name":"inline fun buildAnnotationSpec(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","inline fun buildAnnotationSpec(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"inline fun buildAnnotationSpec(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","inline fun buildAnnotationSpec(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"inline fun buildAnnotationSpec(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","inline fun buildAnnotationSpec(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"inline fun buildAnnotationTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnnotationTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-type-spec.html","searchKeys":["buildAnnotationTypeSpec","inline fun buildAnnotationTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnnotationTypeSpec"]},{"name":"inline fun buildAnnotationTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnnotationTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-type-spec.html","searchKeys":["buildAnnotationTypeSpec","inline fun buildAnnotationTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnnotationTypeSpec"]},{"name":"inline fun buildAnonymousTypeSpec(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnonymousTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-anonymous-type-spec.html","searchKeys":["buildAnonymousTypeSpec","inline fun buildAnonymousTypeSpec(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnonymousTypeSpec"]},{"name":"inline fun buildClassTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildClassTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-class-type-spec.html","searchKeys":["buildClassTypeSpec","inline fun buildClassTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildClassTypeSpec"]},{"name":"inline fun buildClassTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildClassTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-class-type-spec.html","searchKeys":["buildClassTypeSpec","inline fun buildClassTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildClassTypeSpec"]},{"name":"inline fun buildCodeBlock(configuration: CodeBlockBuilder.() -> Unit): CodeBlock","description":"com.hendraanggrian.javapoet.buildCodeBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-code-block.html","searchKeys":["buildCodeBlock","inline fun buildCodeBlock(configuration: CodeBlockBuilder.() -> Unit): CodeBlock","com.hendraanggrian.javapoet.buildCodeBlock"]},{"name":"inline fun buildConstructorMethodSpec(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.buildConstructorMethodSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-constructor-method-spec.html","searchKeys":["buildConstructorMethodSpec","inline fun buildConstructorMethodSpec(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.buildConstructorMethodSpec"]},{"name":"inline fun buildEnumTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildEnumTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-enum-type-spec.html","searchKeys":["buildEnumTypeSpec","inline fun buildEnumTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildEnumTypeSpec"]},{"name":"inline fun buildEnumTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildEnumTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-enum-type-spec.html","searchKeys":["buildEnumTypeSpec","inline fun buildEnumTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildEnumTypeSpec"]},{"name":"inline fun buildFieldSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","inline fun buildFieldSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"inline fun buildFieldSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","inline fun buildFieldSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"inline fun buildFieldSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","inline fun buildFieldSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"inline fun buildInterfaceTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildInterfaceTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-interface-type-spec.html","searchKeys":["buildInterfaceTypeSpec","inline fun buildInterfaceTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildInterfaceTypeSpec"]},{"name":"inline fun buildInterfaceTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildInterfaceTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-interface-type-spec.html","searchKeys":["buildInterfaceTypeSpec","inline fun buildInterfaceTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildInterfaceTypeSpec"]},{"name":"inline fun buildJavaFile(packageName: String, configuration: JavaFileBuilder.() -> Unit): JavaFile","description":"com.hendraanggrian.javapoet.buildJavaFile","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-java-file.html","searchKeys":["buildJavaFile","inline fun buildJavaFile(packageName: String, configuration: JavaFileBuilder.() -> Unit): JavaFile","com.hendraanggrian.javapoet.buildJavaFile"]},{"name":"inline fun buildMethodSpec(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.buildMethodSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-method-spec.html","searchKeys":["buildMethodSpec","inline fun buildMethodSpec(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.buildMethodSpec"]},{"name":"inline fun buildParameterSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","inline fun buildParameterSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"inline fun buildParameterSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","inline fun buildParameterSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"inline fun buildParameterSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","inline fun buildParameterSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"inline fun classNameOf(fullName: String): ClassName","description":"com.hendraanggrian.javapoet.classNameOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/class-name-of.html","searchKeys":["classNameOf","inline fun classNameOf(fullName: String): ClassName","com.hendraanggrian.javapoet.classNameOf"]},{"name":"inline fun classNameOf(packageName: String, simpleName: String, vararg simpleNames: String): ClassName","description":"com.hendraanggrian.javapoet.classNameOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/class-name-of.html","searchKeys":["classNameOf","inline fun classNameOf(packageName: String, simpleName: String, vararg simpleNames: String): ClassName","com.hendraanggrian.javapoet.classNameOf"]},{"name":"inline operator fun String.invoke(anonymousTypeCode: CodeBlock, noinline configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","description":"com.hendraanggrian.javapoet.collections.EnumConstantMapScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(anonymousTypeCode: CodeBlock, noinline configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","com.hendraanggrian.javapoet.collections.EnumConstantMapScope.invoke"]},{"name":"inline operator fun String.invoke(anonymousTypeFormat: String, vararg anonymousTypeArgs: Any, noinline configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","description":"com.hendraanggrian.javapoet.collections.EnumConstantMapScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(anonymousTypeFormat: String, vararg anonymousTypeArgs: Any, noinline configuration: TypeSpecBuilder.() -> Unit): TypeSpec?","com.hendraanggrian.javapoet.collections.EnumConstantMapScope.invoke"]},{"name":"inline operator fun String.invoke(noinline configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.collections.MethodSpecListScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(noinline configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.collections.MethodSpecListScope.invoke"]},{"name":"inline operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecListScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecListScope.invoke"]},{"name":"inline operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecListScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecListScope.invoke"]},{"name":"inline operator fun String.invoke(type: Type, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecListScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(type: Type, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecListScope.invoke"]},{"name":"inline operator fun String.invoke(type: Type, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecListScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(type: Type, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecListScope.invoke"]},{"name":"inline operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.collections.FieldSpecListScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.collections.FieldSpecListScope.invoke"]},{"name":"inline operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.collections.ParameterSpecListScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list-scope/invoke.html","searchKeys":["invoke","inline operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.collections.ParameterSpecListScope.invoke"]},{"name":"inline operator fun plusAssign(name: String)","description":"com.hendraanggrian.javapoet.collections.MethodSpecList.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(name: String)","com.hendraanggrian.javapoet.collections.MethodSpecList.plusAssign"]},{"name":"inline operator fun plusAssign(name: String)","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(name: String)","com.hendraanggrian.javapoet.collections.TypeVariableNameList.plusAssign"]},{"name":"inline operator fun plusAssign(type: Class<*>)","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: Class<*>)","com.hendraanggrian.javapoet.collections.AnnotationSpecList.plusAssign"]},{"name":"inline operator fun plusAssign(type: ClassName)","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: ClassName)","com.hendraanggrian.javapoet.collections.AnnotationSpecList.plusAssign"]},{"name":"inline operator fun plusAssign(type: KClass<*>)","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: KClass<*>)","com.hendraanggrian.javapoet.collections.AnnotationSpecList.plusAssign"]},{"name":"inline operator fun plusAssign(type: KClass<*>)","description":"com.hendraanggrian.javapoet.collections.TypeNameList.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-name-list/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: KClass<*>)","com.hendraanggrian.javapoet.collections.TypeNameList.plusAssign"]},{"name":"inline operator fun plusAssign(type: Type)","description":"com.hendraanggrian.javapoet.collections.TypeNameList.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-name-list/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: Type)","com.hendraanggrian.javapoet.collections.TypeNameList.plusAssign"]},{"name":"inline operator fun set(name: String, constructorParameterCode: CodeBlock)","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/set.html","searchKeys":["set","inline operator fun set(name: String, constructorParameterCode: CodeBlock)","com.hendraanggrian.javapoet.collections.EnumConstantMap.set"]},{"name":"inline operator fun set(name: String, constructorParameterFormat: String)","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/set.html","searchKeys":["set","inline operator fun set(name: String, constructorParameterFormat: String)","com.hendraanggrian.javapoet.collections.EnumConstantMap.set"]},{"name":"inline operator fun set(name: String, type: KClass<*>)","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/set.html","searchKeys":["set","inline operator fun set(name: String, type: KClass<*>)","com.hendraanggrian.javapoet.collections.FieldSpecList.set"]},{"name":"inline operator fun set(name: String, type: KClass<*>)","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/set.html","searchKeys":["set","inline operator fun set(name: String, type: KClass<*>)","com.hendraanggrian.javapoet.collections.ParameterSpecList.set"]},{"name":"inline operator fun set(name: String, type: Type)","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/set.html","searchKeys":["set","inline operator fun set(name: String, type: Type)","com.hendraanggrian.javapoet.collections.FieldSpecList.set"]},{"name":"inline operator fun set(name: String, type: Type)","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/set.html","searchKeys":["set","inline operator fun set(name: String, type: Type)","com.hendraanggrian.javapoet.collections.ParameterSpecList.set"]},{"name":"inline operator fun set(name: String, type: TypeName)","description":"com.hendraanggrian.javapoet.collections.FieldSpecList.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/set.html","searchKeys":["set","inline operator fun set(name: String, type: TypeName)","com.hendraanggrian.javapoet.collections.FieldSpecList.set"]},{"name":"inline operator fun set(name: String, type: TypeName)","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList.set","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/set.html","searchKeys":["set","inline operator fun set(name: String, type: TypeName)","com.hendraanggrian.javapoet.collections.ParameterSpecList.set"]},{"name":"interface CodeBlockAppendable","description":"com.hendraanggrian.javapoet.collections.CodeBlockAppendable","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-appendable/index.html","searchKeys":["CodeBlockAppendable","interface CodeBlockAppendable","com.hendraanggrian.javapoet.collections.CodeBlockAppendable"]},{"name":"interface CodeBlockContainer : CodeBlockAppendable","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/index.html","searchKeys":["CodeBlockContainer","interface CodeBlockContainer : CodeBlockAppendable","com.hendraanggrian.javapoet.collections.CodeBlockContainer"]},{"name":"interface JavadocContainer : CodeBlockAppendable","description":"com.hendraanggrian.javapoet.collections.JavadocContainer","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-javadoc-container/index.html","searchKeys":["JavadocContainer","interface JavadocContainer : CodeBlockAppendable","com.hendraanggrian.javapoet.collections.JavadocContainer"]},{"name":"interface SpecLoader<T>","description":"com.hendraanggrian.javapoet.SpecLoader","location":"javapoet-dsl/com.hendraanggrian.javapoet/-spec-loader/index.html","searchKeys":["SpecLoader","interface SpecLoader<T>","com.hendraanggrian.javapoet.SpecLoader"]},{"name":"open class AnnotationSpecList : MutableList<AnnotationSpec> ","description":"com.hendraanggrian.javapoet.collections.AnnotationSpecList","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-annotation-spec-list/index.html","searchKeys":["AnnotationSpecList","open class AnnotationSpecList : MutableList<AnnotationSpec> ","com.hendraanggrian.javapoet.collections.AnnotationSpecList"]},{"name":"open class EnumConstantMap : MutableMap<String, TypeSpec> ","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/index.html","searchKeys":["EnumConstantMap","open class EnumConstantMap : MutableMap<String, TypeSpec> ","com.hendraanggrian.javapoet.collections.EnumConstantMap"]},{"name":"open class FieldSpecList : MutableList<FieldSpec> ","description":"com.hendraanggrian.javapoet.collections.FieldSpecList","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-field-spec-list/index.html","searchKeys":["FieldSpecList","open class FieldSpecList : MutableList<FieldSpec> ","com.hendraanggrian.javapoet.collections.FieldSpecList"]},{"name":"open class MethodSpecList : MutableList<MethodSpec> ","description":"com.hendraanggrian.javapoet.collections.MethodSpecList","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/index.html","searchKeys":["MethodSpecList","open class MethodSpecList : MutableList<MethodSpec> ","com.hendraanggrian.javapoet.collections.MethodSpecList"]},{"name":"open class ParameterSpecList : MutableList<ParameterSpec> ","description":"com.hendraanggrian.javapoet.collections.ParameterSpecList","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-parameter-spec-list/index.html","searchKeys":["ParameterSpecList","open class ParameterSpecList : MutableList<ParameterSpec> ","com.hendraanggrian.javapoet.collections.ParameterSpecList"]},{"name":"open class TypeSpecList : MutableList<TypeSpec> ","description":"com.hendraanggrian.javapoet.collections.TypeSpecList","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/index.html","searchKeys":["TypeSpecList","open class TypeSpecList : MutableList<TypeSpec> ","com.hendraanggrian.javapoet.collections.TypeSpecList"]},{"name":"open fun appendControlFlow(format: String, vararg args: Any, configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/append-control-flow.html","searchKeys":["appendControlFlow","open fun appendControlFlow(format: String, vararg args: Any, configuration: () -> Unit)","com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendControlFlow"]},{"name":"open fun appendControlFlow(startFormat: String, startArgs: Array<Any>, endFlow: String, endFormat: Array<Any>, configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/append-control-flow.html","searchKeys":["appendControlFlow","open fun appendControlFlow(startFormat: String, startArgs: Array<Any>, endFlow: String, endFormat: Array<Any>, configuration: () -> Unit)","com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendControlFlow"]},{"name":"open operator fun plusAssign(code: CodeBlock)","description":"com.hendraanggrian.javapoet.collections.JavadocContainer.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-javadoc-container/plus-assign.html","searchKeys":["plusAssign","open operator fun plusAssign(code: CodeBlock)","com.hendraanggrian.javapoet.collections.JavadocContainer.plusAssign"]},{"name":"open operator fun plusAssign(value: String)","description":"com.hendraanggrian.javapoet.collections.JavadocContainer.plusAssign","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-javadoc-container/plus-assign.html","searchKeys":["plusAssign","open operator fun plusAssign(value: String)","com.hendraanggrian.javapoet.collections.JavadocContainer.plusAssign"]},{"name":"open override fun append(code: CodeBlock)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append.html","searchKeys":["append","open override fun append(code: CodeBlock)","com.hendraanggrian.javapoet.CodeBlockBuilder.append"]},{"name":"open override fun append(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append.html","searchKeys":["append","open override fun append(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.append"]},{"name":"open override fun append(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append.html","searchKeys":["append","open override fun append(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.append"]},{"name":"open override fun append(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append.html","searchKeys":["append","open override fun append(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.append"]},{"name":"open override fun appendLine()","description":"com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-code-block-container/append-line.html","searchKeys":["appendLine","open override fun appendLine()","com.hendraanggrian.javapoet.collections.CodeBlockContainer.appendLine"]},{"name":"open override fun appendLine()","description":"com.hendraanggrian.javapoet.collections.JavadocContainer.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-javadoc-container/append-line.html","searchKeys":["appendLine","open override fun appendLine()","com.hendraanggrian.javapoet.collections.JavadocContainer.appendLine"]},{"name":"open override fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine"]},{"name":"open override fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine"]},{"name":"open override fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.collections.JavadocContainer.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-javadoc-container/append-line.html","searchKeys":["appendLine","open override fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.collections.JavadocContainer.appendLine"]},{"name":"open override fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine"]},{"name":"open override fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine"]},{"name":"open override fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.collections.JavadocContainer.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-javadoc-container/append-line.html","searchKeys":["appendLine","open override fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.collections.JavadocContainer.appendLine"]},{"name":"open override fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendNamed","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append-named.html","searchKeys":["appendNamed","open override fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendNamed"]},{"name":"open override fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendNamed","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append-named.html","searchKeys":["appendNamed","open override fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendNamed"]},{"name":"open override fun beginControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.beginControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/begin-control-flow.html","searchKeys":["beginControlFlow","open override fun beginControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.beginControlFlow"]},{"name":"open override fun beginControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/begin-control-flow.html","searchKeys":["beginControlFlow","open override fun beginControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow"]},{"name":"open override fun endControlFlow()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/end-control-flow.html","searchKeys":["endControlFlow","open override fun endControlFlow()","com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow"]},{"name":"open override fun endControlFlow()","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/end-control-flow.html","searchKeys":["endControlFlow","open override fun endControlFlow()","com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow"]},{"name":"open override fun endControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/end-control-flow.html","searchKeys":["endControlFlow","open override fun endControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow"]},{"name":"open override fun endControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/end-control-flow.html","searchKeys":["endControlFlow","open override fun endControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow"]},{"name":"open override fun nextControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.nextControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/next-control-flow.html","searchKeys":["nextControlFlow","open override fun nextControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.nextControlFlow"]},{"name":"open override fun nextControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/next-control-flow.html","searchKeys":["nextControlFlow","open override fun nextControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow"]},{"name":"val ABSTRACT: Modifier","description":"com.hendraanggrian.javapoet.ABSTRACT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-a-b-s-t-r-a-c-t.html","searchKeys":["ABSTRACT","val ABSTRACT: Modifier","com.hendraanggrian.javapoet.ABSTRACT"]},{"name":"val BOOLEAN: TypeName","description":"com.hendraanggrian.javapoet.BOOLEAN","location":"javapoet-dsl/com.hendraanggrian.javapoet/-b-o-o-l-e-a-n.html","searchKeys":["BOOLEAN","val BOOLEAN: TypeName","com.hendraanggrian.javapoet.BOOLEAN"]},{"name":"val BYTE: TypeName","description":"com.hendraanggrian.javapoet.BYTE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-b-y-t-e.html","searchKeys":["BYTE","val BYTE: TypeName","com.hendraanggrian.javapoet.BYTE"]},{"name":"val CHAR: TypeName","description":"com.hendraanggrian.javapoet.CHAR","location":"javapoet-dsl/com.hendraanggrian.javapoet/-c-h-a-r.html","searchKeys":["CHAR","val CHAR: TypeName","com.hendraanggrian.javapoet.CHAR"]},{"name":"val DEFAULT: Modifier","description":"com.hendraanggrian.javapoet.DEFAULT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: Modifier","com.hendraanggrian.javapoet.DEFAULT"]},{"name":"val DOUBLE: TypeName","description":"com.hendraanggrian.javapoet.DOUBLE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-d-o-u-b-l-e.html","searchKeys":["DOUBLE","val DOUBLE: TypeName","com.hendraanggrian.javapoet.DOUBLE"]},{"name":"val FINAL: Modifier","description":"com.hendraanggrian.javapoet.FINAL","location":"javapoet-dsl/com.hendraanggrian.javapoet/-f-i-n-a-l.html","searchKeys":["FINAL","val FINAL: Modifier","com.hendraanggrian.javapoet.FINAL"]},{"name":"val FLOAT: TypeName","description":"com.hendraanggrian.javapoet.FLOAT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-f-l-o-a-t.html","searchKeys":["FLOAT","val FLOAT: TypeName","com.hendraanggrian.javapoet.FLOAT"]},{"name":"val INT: TypeName","description":"com.hendraanggrian.javapoet.INT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-i-n-t.html","searchKeys":["INT","val INT: TypeName","com.hendraanggrian.javapoet.INT"]},{"name":"val LONG: TypeName","description":"com.hendraanggrian.javapoet.LONG","location":"javapoet-dsl/com.hendraanggrian.javapoet/-l-o-n-g.html","searchKeys":["LONG","val LONG: TypeName","com.hendraanggrian.javapoet.LONG"]},{"name":"val NATIVE: Modifier","description":"com.hendraanggrian.javapoet.NATIVE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-n-a-t-i-v-e.html","searchKeys":["NATIVE","val NATIVE: Modifier","com.hendraanggrian.javapoet.NATIVE"]},{"name":"val OBJECT: TypeName","description":"com.hendraanggrian.javapoet.OBJECT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-o-b-j-e-c-t.html","searchKeys":["OBJECT","val OBJECT: TypeName","com.hendraanggrian.javapoet.OBJECT"]},{"name":"val PRIVATE: Modifier","description":"com.hendraanggrian.javapoet.PRIVATE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-p-r-i-v-a-t-e.html","searchKeys":["PRIVATE","val PRIVATE: Modifier","com.hendraanggrian.javapoet.PRIVATE"]},{"name":"val PROTECTED: Modifier","description":"com.hendraanggrian.javapoet.PROTECTED","location":"javapoet-dsl/com.hendraanggrian.javapoet/-p-r-o-t-e-c-t-e-d.html","searchKeys":["PROTECTED","val PROTECTED: Modifier","com.hendraanggrian.javapoet.PROTECTED"]},{"name":"val PUBLIC: Modifier","description":"com.hendraanggrian.javapoet.PUBLIC","location":"javapoet-dsl/com.hendraanggrian.javapoet/-p-u-b-l-i-c.html","searchKeys":["PUBLIC","val PUBLIC: Modifier","com.hendraanggrian.javapoet.PUBLIC"]},{"name":"val SHORT: TypeName","description":"com.hendraanggrian.javapoet.SHORT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-h-o-r-t.html","searchKeys":["SHORT","val SHORT: TypeName","com.hendraanggrian.javapoet.SHORT"]},{"name":"val STATIC: Modifier","description":"com.hendraanggrian.javapoet.STATIC","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-t-a-t-i-c.html","searchKeys":["STATIC","val STATIC: Modifier","com.hendraanggrian.javapoet.STATIC"]},{"name":"val STRICTFP: Modifier","description":"com.hendraanggrian.javapoet.STRICTFP","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-t-r-i-c-t-f-p.html","searchKeys":["STRICTFP","val STRICTFP: Modifier","com.hendraanggrian.javapoet.STRICTFP"]},{"name":"val SYNCHRONIZED: Modifier","description":"com.hendraanggrian.javapoet.SYNCHRONIZED","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-y-n-c-h-r-o-n-i-z-e-d.html","searchKeys":["SYNCHRONIZED","val SYNCHRONIZED: Modifier","com.hendraanggrian.javapoet.SYNCHRONIZED"]},{"name":"val TRANSIENT: Modifier","description":"com.hendraanggrian.javapoet.TRANSIENT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-t-r-a-n-s-i-e-n-t.html","searchKeys":["TRANSIENT","val TRANSIENT: Modifier","com.hendraanggrian.javapoet.TRANSIENT"]},{"name":"val VOID: TypeName","description":"com.hendraanggrian.javapoet.VOID","location":"javapoet-dsl/com.hendraanggrian.javapoet/-v-o-i-d.html","searchKeys":["VOID","val VOID: TypeName","com.hendraanggrian.javapoet.VOID"]},{"name":"val VOLATILE: Modifier","description":"com.hendraanggrian.javapoet.VOLATILE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-v-o-l-a-t-i-l-e.html","searchKeys":["VOLATILE","val VOLATILE: Modifier","com.hendraanggrian.javapoet.VOLATILE"]},{"name":"val adding: SpecLoader<MethodSpec>","description":"com.hendraanggrian.javapoet.collections.MethodSpecList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-method-spec-list/adding.html","searchKeys":["adding","val adding: SpecLoader<MethodSpec>","com.hendraanggrian.javapoet.collections.MethodSpecList.adding"]},{"name":"val adding: SpecLoader<TypeVariableName>","description":"com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-variable-name-list/adding.html","searchKeys":["adding","val adding: SpecLoader<TypeVariableName>","com.hendraanggrian.javapoet.collections.TypeVariableNameList.adding"]},{"name":"val addingAnnotation: SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnnotation","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-annotation.html","searchKeys":["addingAnnotation","val addingAnnotation: SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnnotation"]},{"name":"val addingAnonymous: SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnonymous","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-anonymous.html","searchKeys":["addingAnonymous","val addingAnonymous: SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingAnonymous"]},{"name":"val addingClass: SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingClass","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-class.html","searchKeys":["addingClass","val addingClass: SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingClass"]},{"name":"val addingInterface: SpecLoader<TypeSpec>","description":"com.hendraanggrian.javapoet.collections.TypeSpecList.addingInterface","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-type-spec-list/adding-interface.html","searchKeys":["addingInterface","val addingInterface: SpecLoader<TypeSpec>","com.hendraanggrian.javapoet.collections.TypeSpecList.addingInterface"]},{"name":"val alwaysQualifiedNames: MutableSet<String>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualifiedNames","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/always-qualified-names.html","searchKeys":["alwaysQualifiedNames","val alwaysQualifiedNames: MutableSet<String>","com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualifiedNames"]},{"name":"val annotations: AnnotationSpecList","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecList","com.hendraanggrian.javapoet.FieldSpecBuilder.annotations"]},{"name":"val annotations: AnnotationSpecList","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecList","com.hendraanggrian.javapoet.MethodSpecBuilder.annotations"]},{"name":"val annotations: AnnotationSpecList","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecList","com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations"]},{"name":"val annotations: AnnotationSpecList","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecList","com.hendraanggrian.javapoet.TypeSpecBuilder.annotations"]},{"name":"val enumConstants: EnumConstantMap","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/enum-constants.html","searchKeys":["enumConstants","val enumConstants: EnumConstantMap","com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants"]},{"name":"val exceptions: TypeNameList","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.exceptions","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/exceptions.html","searchKeys":["exceptions","val exceptions: TypeNameList","com.hendraanggrian.javapoet.MethodSpecBuilder.exceptions"]},{"name":"val fields: FieldSpecList","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.fields","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/fields.html","searchKeys":["fields","val fields: FieldSpecList","com.hendraanggrian.javapoet.TypeSpecBuilder.fields"]},{"name":"val javadoc: JavadocContainer","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocContainer","com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc"]},{"name":"val javadoc: JavadocContainer","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocContainer","com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc"]},{"name":"val javadoc: JavadocContainer","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocContainer","com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc"]},{"name":"val javadoc: JavadocContainer","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocContainer","com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc"]},{"name":"val members: Map<String, List<CodeBlock>>","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.members","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/members.html","searchKeys":["members","val members: Map<String, List<CodeBlock>>","com.hendraanggrian.javapoet.AnnotationSpecBuilder.members"]},{"name":"val methods: MethodSpecList","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.methods","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/methods.html","searchKeys":["methods","val methods: MethodSpecList","com.hendraanggrian.javapoet.TypeSpecBuilder.methods"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers"]},{"name":"val originatingElements: MutableList<Element>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElements","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/originating-elements.html","searchKeys":["originatingElements","val originatingElements: MutableList<Element>","com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElements"]},{"name":"val parameters: ParameterSpecList","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.parameters","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/parameters.html","searchKeys":["parameters","val parameters: ParameterSpecList","com.hendraanggrian.javapoet.MethodSpecBuilder.parameters"]},{"name":"val putting: SpecLoader<TypeSpec?>","description":"com.hendraanggrian.javapoet.collections.EnumConstantMap.putting","location":"javapoet-dsl/com.hendraanggrian.javapoet.collections/-enum-constant-map/putting.html","searchKeys":["putting","val putting: SpecLoader<TypeSpec?>","com.hendraanggrian.javapoet.collections.EnumConstantMap.putting"]},{"name":"val superinterfaces: TypeNameList","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterfaces.html","searchKeys":["superinterfaces","val superinterfaces: TypeNameList","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces"]},{"name":"val typeVariables: TypeVariableNameList","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: TypeVariableNameList","com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables"]},{"name":"val typeVariables: TypeVariableNameList","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: TypeVariableNameList","com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables"]},{"name":"val types: TypeSpecList","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.types","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/types.html","searchKeys":["types","val types: TypeSpecList","com.hendraanggrian.javapoet.TypeSpecBuilder.types"]},{"name":"var comment: String","description":"com.hendraanggrian.javapoet.JavaFileBuilder.comment","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/comment.html","searchKeys":["comment","var comment: String","com.hendraanggrian.javapoet.JavaFileBuilder.comment"]},{"name":"var defaultValue: CodeBlock","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/default-value.html","searchKeys":["defaultValue","var defaultValue: CodeBlock","com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue"]},{"name":"var indent: String","description":"com.hendraanggrian.javapoet.JavaFileBuilder.indent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/indent.html","searchKeys":["indent","var indent: String","com.hendraanggrian.javapoet.JavaFileBuilder.indent"]},{"name":"var indentSize: Int","description":"com.hendraanggrian.javapoet.JavaFileBuilder.indentSize","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/indent-size.html","searchKeys":["indentSize","var indentSize: Int","com.hendraanggrian.javapoet.JavaFileBuilder.indentSize"]},{"name":"var initializer: CodeBlock","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.initializer","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/initializer.html","searchKeys":["initializer","var initializer: CodeBlock","com.hendraanggrian.javapoet.FieldSpecBuilder.initializer"]},{"name":"var isVarargs: Boolean","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.isVarargs","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/is-varargs.html","searchKeys":["isVarargs","var isVarargs: Boolean","com.hendraanggrian.javapoet.MethodSpecBuilder.isVarargs"]},{"name":"var name: String","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.name","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/name.html","searchKeys":["name","var name: String","com.hendraanggrian.javapoet.MethodSpecBuilder.name"]},{"name":"var skipJavaLangImports: Boolean","description":"com.hendraanggrian.javapoet.JavaFileBuilder.skipJavaLangImports","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/skip-java-lang-imports.html","searchKeys":["skipJavaLangImports","var skipJavaLangImports: Boolean","com.hendraanggrian.javapoet.JavaFileBuilder.skipJavaLangImports"]}]
