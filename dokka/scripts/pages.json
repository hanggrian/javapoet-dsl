[{"name":"abstract fun annotation(annotation: AnnotationSpec)","description":"com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler/annotation.html","searchKeys":["annotation","abstract fun annotation(annotation: AnnotationSpec)","com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation"]},{"name":"abstract fun field(field: FieldSpec)","description":"com.hendraanggrian.javapoet.FieldSpecHandler.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/field.html","searchKeys":["field","abstract fun field(field: FieldSpec)","com.hendraanggrian.javapoet.FieldSpecHandler.field"]},{"name":"abstract fun method(method: MethodSpec)","description":"com.hendraanggrian.javapoet.MethodSpecHandler.method","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler/method.html","searchKeys":["method","abstract fun method(method: MethodSpec)","com.hendraanggrian.javapoet.MethodSpecHandler.method"]},{"name":"abstract fun parameter(parameter: ParameterSpec)","description":"com.hendraanggrian.javapoet.ParameterSpecHandler.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/parameter.html","searchKeys":["parameter","abstract fun parameter(parameter: ParameterSpec)","com.hendraanggrian.javapoet.ParameterSpecHandler.parameter"]},{"name":"abstract fun type(type: TypeSpec)","description":"com.hendraanggrian.javapoet.TypeSpecHandler.type","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/type.html","searchKeys":["type","abstract fun type(type: TypeSpec)","com.hendraanggrian.javapoet.TypeSpecHandler.type"]},{"name":"annotation class JavapoetDsl","description":"com.hendraanggrian.javapoet.JavapoetDsl","location":"javapoet-dsl/com.hendraanggrian.javapoet/-javapoet-dsl/index.html","searchKeys":["JavapoetDsl","annotation class JavapoetDsl","com.hendraanggrian.javapoet.JavapoetDsl"]},{"name":"class AnnotationSpecBuilder(nativeBuilder: AnnotationSpec.Builder)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/index.html","searchKeys":["AnnotationSpecBuilder","class AnnotationSpecBuilder(nativeBuilder: AnnotationSpec.Builder)","com.hendraanggrian.javapoet.AnnotationSpecBuilder"]},{"name":"class CodeBlockBuilder(nativeBuilder: CodeBlock.Builder)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/index.html","searchKeys":["CodeBlockBuilder","class CodeBlockBuilder(nativeBuilder: CodeBlock.Builder)","com.hendraanggrian.javapoet.CodeBlockBuilder"]},{"name":"class FieldSpecBuilder(nativeBuilder: FieldSpec.Builder) : AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.FieldSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/index.html","searchKeys":["FieldSpecBuilder","class FieldSpecBuilder(nativeBuilder: FieldSpec.Builder) : AnnotationSpecHandler","com.hendraanggrian.javapoet.FieldSpecBuilder"]},{"name":"class JavaFileBuilder(packageName: String) : TypeSpecHandler","description":"com.hendraanggrian.javapoet.JavaFileBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/index.html","searchKeys":["JavaFileBuilder","class JavaFileBuilder(packageName: String) : TypeSpecHandler","com.hendraanggrian.javapoet.JavaFileBuilder"]},{"name":"class MethodSpecBuilder(nativeBuilder: MethodSpec.Builder) : AnnotationSpecHandler, ParameterSpecHandler","description":"com.hendraanggrian.javapoet.MethodSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/index.html","searchKeys":["MethodSpecBuilder","class MethodSpecBuilder(nativeBuilder: MethodSpec.Builder) : AnnotationSpecHandler, ParameterSpecHandler","com.hendraanggrian.javapoet.MethodSpecBuilder"]},{"name":"class ParameterSpecBuilder(nativeBuilder: ParameterSpec.Builder) : AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/index.html","searchKeys":["ParameterSpecBuilder","class ParameterSpecBuilder(nativeBuilder: ParameterSpec.Builder) : AnnotationSpecHandler","com.hendraanggrian.javapoet.ParameterSpecBuilder"]},{"name":"class SpecDelegateProvider<T>(getSpec: (String) -> T)","description":"com.hendraanggrian.javapoet.SpecDelegateProvider","location":"javapoet-dsl/com.hendraanggrian.javapoet/-spec-delegate-provider/index.html","searchKeys":["SpecDelegateProvider","class SpecDelegateProvider<T>(getSpec: (String) -> T)","com.hendraanggrian.javapoet.SpecDelegateProvider"]},{"name":"class TypeSpecBuilder(nativeBuilder: TypeSpec.Builder) : AnnotationSpecHandler, FieldSpecHandler, MethodSpecHandler, TypeSpecHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/index.html","searchKeys":["TypeSpecBuilder","class TypeSpecBuilder(nativeBuilder: TypeSpec.Builder) : AnnotationSpecHandler, FieldSpecHandler, MethodSpecHandler, TypeSpecHandler","com.hendraanggrian.javapoet.TypeSpecBuilder"]},{"name":"constructor(getSpec: (String) -> T)","description":"com.hendraanggrian.javapoet.SpecDelegateProvider.SpecDelegateProvider","location":"javapoet-dsl/com.hendraanggrian.javapoet/-spec-delegate-provider/-spec-delegate-provider.html","searchKeys":["SpecDelegateProvider","constructor(getSpec: (String) -> T)","com.hendraanggrian.javapoet.SpecDelegateProvider.SpecDelegateProvider"]},{"name":"constructor(nativeBuilder: AnnotationSpec.Builder)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.AnnotationSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/-annotation-spec-builder.html","searchKeys":["AnnotationSpecBuilder","constructor(nativeBuilder: AnnotationSpec.Builder)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.AnnotationSpecBuilder"]},{"name":"constructor(nativeBuilder: CodeBlock.Builder)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.CodeBlockBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/-code-block-builder.html","searchKeys":["CodeBlockBuilder","constructor(nativeBuilder: CodeBlock.Builder)","com.hendraanggrian.javapoet.CodeBlockBuilder.CodeBlockBuilder"]},{"name":"constructor(nativeBuilder: FieldSpec.Builder)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.FieldSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/-field-spec-builder.html","searchKeys":["FieldSpecBuilder","constructor(nativeBuilder: FieldSpec.Builder)","com.hendraanggrian.javapoet.FieldSpecBuilder.FieldSpecBuilder"]},{"name":"constructor(nativeBuilder: MethodSpec.Builder)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.MethodSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/-method-spec-builder.html","searchKeys":["MethodSpecBuilder","constructor(nativeBuilder: MethodSpec.Builder)","com.hendraanggrian.javapoet.MethodSpecBuilder.MethodSpecBuilder"]},{"name":"constructor(nativeBuilder: ParameterSpec.Builder)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.ParameterSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/-parameter-spec-builder.html","searchKeys":["ParameterSpecBuilder","constructor(nativeBuilder: ParameterSpec.Builder)","com.hendraanggrian.javapoet.ParameterSpecBuilder.ParameterSpecBuilder"]},{"name":"constructor(nativeBuilder: TypeSpec.Builder)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.TypeSpecBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/-type-spec-builder.html","searchKeys":["TypeSpecBuilder","constructor(nativeBuilder: TypeSpec.Builder)","com.hendraanggrian.javapoet.TypeSpecBuilder.TypeSpecBuilder"]},{"name":"constructor(packageName: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.JavaFileBuilder","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/-java-file-builder.html","searchKeys":["JavaFileBuilder","constructor(packageName: String)","com.hendraanggrian.javapoet.JavaFileBuilder.JavaFileBuilder"]},{"name":"fun AnnotationSpecHandler.annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/annotations.html","searchKeys":["annotations","fun AnnotationSpecHandler.annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.annotations"]},{"name":"fun ClassName.asAnnotationSpec(): AnnotationSpec","description":"com.hendraanggrian.javapoet.asAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-annotation-spec.html","searchKeys":["asAnnotationSpec","fun ClassName.asAnnotationSpec(): AnnotationSpec","com.hendraanggrian.javapoet.asAnnotationSpec"]},{"name":"fun ClassName.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun ClassName.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun FieldSpecHandler.fielding(type: Class<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecDelegateProvider<FieldSpec>","description":"com.hendraanggrian.javapoet.fielding","location":"javapoet-dsl/com.hendraanggrian.javapoet/fielding.html","searchKeys":["fielding","fun FieldSpecHandler.fielding(type: Class<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecDelegateProvider<FieldSpec>","com.hendraanggrian.javapoet.fielding"]},{"name":"fun FieldSpecHandler.fielding(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecDelegateProvider<FieldSpec>","description":"com.hendraanggrian.javapoet.fielding","location":"javapoet-dsl/com.hendraanggrian.javapoet/fielding.html","searchKeys":["fielding","fun FieldSpecHandler.fielding(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecDelegateProvider<FieldSpec>","com.hendraanggrian.javapoet.fielding"]},{"name":"fun FieldSpecHandler.fielding(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecDelegateProvider<FieldSpec>","description":"com.hendraanggrian.javapoet.fielding","location":"javapoet-dsl/com.hendraanggrian.javapoet/fielding.html","searchKeys":["fielding","fun FieldSpecHandler.fielding(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): SpecDelegateProvider<FieldSpec>","com.hendraanggrian.javapoet.fielding"]},{"name":"fun FieldSpecHandler.fields(configuration: FieldSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.fields","location":"javapoet-dsl/com.hendraanggrian.javapoet/fields.html","searchKeys":["fields","fun FieldSpecHandler.fields(configuration: FieldSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.fields"]},{"name":"fun MethodSpecHandler.methoding(configuration: MethodSpecBuilder.() -> Unit): SpecDelegateProvider<MethodSpec>","description":"com.hendraanggrian.javapoet.methoding","location":"javapoet-dsl/com.hendraanggrian.javapoet/methoding.html","searchKeys":["methoding","fun MethodSpecHandler.methoding(configuration: MethodSpecBuilder.() -> Unit): SpecDelegateProvider<MethodSpec>","com.hendraanggrian.javapoet.methoding"]},{"name":"fun MethodSpecHandler.methods(configuration: MethodSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.methods","location":"javapoet-dsl/com.hendraanggrian.javapoet/methods.html","searchKeys":["methods","fun MethodSpecHandler.methods(configuration: MethodSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.methods"]},{"name":"fun ParameterSpecHandler.parametering(type: Class<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecDelegateProvider<ParameterSpec>","description":"com.hendraanggrian.javapoet.parametering","location":"javapoet-dsl/com.hendraanggrian.javapoet/parametering.html","searchKeys":["parametering","fun ParameterSpecHandler.parametering(type: Class<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecDelegateProvider<ParameterSpec>","com.hendraanggrian.javapoet.parametering"]},{"name":"fun ParameterSpecHandler.parametering(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecDelegateProvider<ParameterSpec>","description":"com.hendraanggrian.javapoet.parametering","location":"javapoet-dsl/com.hendraanggrian.javapoet/parametering.html","searchKeys":["parametering","fun ParameterSpecHandler.parametering(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecDelegateProvider<ParameterSpec>","com.hendraanggrian.javapoet.parametering"]},{"name":"fun ParameterSpecHandler.parametering(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecDelegateProvider<ParameterSpec>","description":"com.hendraanggrian.javapoet.parametering","location":"javapoet-dsl/com.hendraanggrian.javapoet/parametering.html","searchKeys":["parametering","fun ParameterSpecHandler.parametering(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): SpecDelegateProvider<ParameterSpec>","com.hendraanggrian.javapoet.parametering"]},{"name":"fun ParameterSpecHandler.parameters(configuration: ParameterSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.parameters","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameters.html","searchKeys":["parameters","fun ParameterSpecHandler.parameters(configuration: ParameterSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.parameters"]},{"name":"fun String.genericsBy(vararg bounds: KClass<*>): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","fun String.genericsBy(vararg bounds: KClass<*>): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"fun TypeName.asFieldSpec(name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.asFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-field-spec.html","searchKeys":["asFieldSpec","fun TypeName.asFieldSpec(name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.asFieldSpec"]},{"name":"fun TypeName.asParameterSpec(name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.asParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/as-parameter-spec.html","searchKeys":["asParameterSpec","fun TypeName.asParameterSpec(name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.asParameterSpec"]},{"name":"fun TypeSpecHandler.annotationTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.annotationTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/annotation-typing.html","searchKeys":["annotationTyping","fun TypeSpecHandler.annotationTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.annotationTyping"]},{"name":"fun TypeSpecHandler.anonymousType(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.anonymousType","location":"javapoet-dsl/com.hendraanggrian.javapoet/anonymous-type.html","searchKeys":["anonymousType","fun TypeSpecHandler.anonymousType(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.anonymousType"]},{"name":"fun TypeSpecHandler.anonymousTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.anonymousTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/anonymous-typing.html","searchKeys":["anonymousTyping","fun TypeSpecHandler.anonymousTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.anonymousTyping"]},{"name":"fun TypeSpecHandler.classTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.classTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/class-typing.html","searchKeys":["classTyping","fun TypeSpecHandler.classTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.classTyping"]},{"name":"fun TypeSpecHandler.enumTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.enumTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/enum-typing.html","searchKeys":["enumTyping","fun TypeSpecHandler.enumTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.enumTyping"]},{"name":"fun TypeSpecHandler.interfaceTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.interfaceTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/interface-typing.html","searchKeys":["interfaceTyping","fun TypeSpecHandler.interfaceTyping(configuration: TypeSpecBuilder.() -> Unit): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.interfaceTyping"]},{"name":"fun TypeSpecHandler.types(configuration: TypeSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.types","location":"javapoet-dsl/com.hendraanggrian.javapoet/types.html","searchKeys":["types","fun TypeSpecHandler.types(configuration: TypeSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.types"]},{"name":"fun alwaysQualify(vararg simpleNames: String)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualify","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/always-qualify.html","searchKeys":["alwaysQualify","fun alwaysQualify(vararg simpleNames: String)","com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualify"]},{"name":"fun append(code: CodeBlock)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append.html","searchKeys":["append","fun append(code: CodeBlock)","com.hendraanggrian.javapoet.CodeBlockBuilder.append"]},{"name":"fun append(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append.html","searchKeys":["append","fun append(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.append"]},{"name":"fun append(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append.html","searchKeys":["append","fun append(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.append"]},{"name":"fun append(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.append","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append.html","searchKeys":["append","fun append(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.append"]},{"name":"fun appendLine()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append-line.html","searchKeys":["appendLine","fun appendLine()","com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine"]},{"name":"fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append-line.html","searchKeys":["appendLine","fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine"]},{"name":"fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append-line.html","searchKeys":["appendLine","fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine"]},{"name":"fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append-line.html","searchKeys":["appendLine","fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine"]},{"name":"fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append-line.html","searchKeys":["appendLine","fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine"]},{"name":"fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendNamed","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/append-named.html","searchKeys":["appendNamed","fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendNamed"]},{"name":"fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendNamed","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/append-named.html","searchKeys":["appendNamed","fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendNamed"]},{"name":"fun avoidClashesWithNestedClasses(type: Class<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(type: Class<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun avoidClashesWithNestedClasses(type: KClass<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(type: KClass<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun avoidClashesWithNestedClasses(typeElement: TypeElement)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(typeElement: TypeElement)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun beginControlFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/begin-control-flow.html","searchKeys":["beginControlFlow","fun beginControlFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow"]},{"name":"fun beginControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.beginControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/begin-control-flow.html","searchKeys":["beginControlFlow","fun beginControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.beginControlFlow"]},{"name":"fun beginControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/begin-control-flow.html","searchKeys":["beginControlFlow","fun beginControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.beginControlFlow"]},{"name":"fun build(): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/build.html","searchKeys":["build","fun build(): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecBuilder.build"]},{"name":"fun build(): CodeBlock","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/build.html","searchKeys":["build","fun build(): CodeBlock","com.hendraanggrian.javapoet.CodeBlockBuilder.build"]},{"name":"fun build(): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/build.html","searchKeys":["build","fun build(): FieldSpec","com.hendraanggrian.javapoet.FieldSpecBuilder.build"]},{"name":"fun build(): JavaFile","description":"com.hendraanggrian.javapoet.JavaFileBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/build.html","searchKeys":["build","fun build(): JavaFile","com.hendraanggrian.javapoet.JavaFileBuilder.build"]},{"name":"fun build(): MethodSpec","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/build.html","searchKeys":["build","fun build(): MethodSpec","com.hendraanggrian.javapoet.MethodSpecBuilder.build"]},{"name":"fun build(): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/build.html","searchKeys":["build","fun build(): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecBuilder.build"]},{"name":"fun build(): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.build","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/build.html","searchKeys":["build","fun build(): TypeSpec","com.hendraanggrian.javapoet.TypeSpecBuilder.build"]},{"name":"fun buildAnonymousTypeSpec(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnonymousTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-anonymous-type-spec.html","searchKeys":["buildAnonymousTypeSpec","fun buildAnonymousTypeSpec(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnonymousTypeSpec"]},{"name":"fun clear()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.clear","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/clear.html","searchKeys":["clear","fun clear()","com.hendraanggrian.javapoet.CodeBlockBuilder.clear"]},{"name":"fun codeBlockOf(format: String, vararg args: Any?): CodeBlock","description":"com.hendraanggrian.javapoet.codeBlockOf","location":"javapoet-dsl/com.hendraanggrian.javapoet/code-block-of.html","searchKeys":["codeBlockOf","fun codeBlockOf(format: String, vararg args: Any?): CodeBlock","com.hendraanggrian.javapoet.codeBlockOf"]},{"name":"fun comment(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.comment","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/comment.html","searchKeys":["comment","fun comment(format: String, vararg args: Any)","com.hendraanggrian.javapoet.JavaFileBuilder.comment"]},{"name":"fun comment(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.comment","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/comment.html","searchKeys":["comment","fun comment(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.comment"]},{"name":"fun defaultValue(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/default-value.html","searchKeys":["defaultValue","fun defaultValue(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue"]},{"name":"fun endControlFlow()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow()","com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow"]},{"name":"fun endControlFlow()","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow()","com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow"]},{"name":"fun endControlFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow"]},{"name":"fun endControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.endControlFlow"]},{"name":"fun endControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/end-control-flow.html","searchKeys":["endControlFlow","fun endControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.endControlFlow"]},{"name":"fun enumConstant(name: String, spec: TypeSpec = TypeSpec.anonymousClassBuilder(\"\").build())","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstant","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/enum-constant.html","searchKeys":["enumConstant","fun enumConstant(name: String, spec: TypeSpec = TypeSpec.anonymousClassBuilder(\"\").build())","com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstant"]},{"name":"fun exception(exception: Class<*>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.exception","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/exception.html","searchKeys":["exception","fun exception(exception: Class<*>)","com.hendraanggrian.javapoet.MethodSpecBuilder.exception"]},{"name":"fun exception(exception: KClass<*>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.exception","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/exception.html","searchKeys":["exception","fun exception(exception: KClass<*>)","com.hendraanggrian.javapoet.MethodSpecBuilder.exception"]},{"name":"fun exception(exception: TypeName)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.exception","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/exception.html","searchKeys":["exception","fun exception(exception: TypeName)","com.hendraanggrian.javapoet.MethodSpecBuilder.exception"]},{"name":"fun exceptions(exceptions: Iterable<TypeName>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.exceptions","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/exceptions.html","searchKeys":["exceptions","fun exceptions(exceptions: Iterable<TypeName>)","com.hendraanggrian.javapoet.MethodSpecBuilder.exceptions"]},{"name":"fun indent()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.indent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/indent.html","searchKeys":["indent","fun indent()","com.hendraanggrian.javapoet.CodeBlockBuilder.indent"]},{"name":"fun initializer(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.initializer","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/initializer.html","searchKeys":["initializer","fun initializer(format: String, vararg args: Any)","com.hendraanggrian.javapoet.FieldSpecBuilder.initializer"]},{"name":"fun initializerBlock(code: CodeBlock)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.initializerBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/initializer-block.html","searchKeys":["initializerBlock","fun initializerBlock(code: CodeBlock)","com.hendraanggrian.javapoet.TypeSpecBuilder.initializerBlock"]},{"name":"fun initializerBlock(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.initializerBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/initializer-block.html","searchKeys":["initializerBlock","fun initializerBlock(format: String, vararg args: Any)","com.hendraanggrian.javapoet.TypeSpecBuilder.initializerBlock"]},{"name":"fun isEmpty(): Boolean","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.isEmpty","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.hendraanggrian.javapoet.CodeBlockBuilder.isEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.isNotEmpty","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","com.hendraanggrian.javapoet.CodeBlockBuilder.isNotEmpty"]},{"name":"fun javadoc(block: CodeBlock)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(block: CodeBlock)","com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc"]},{"name":"fun javadoc(block: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(block: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc"]},{"name":"fun javadoc(block: CodeBlock)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(block: CodeBlock)","com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc"]},{"name":"fun javadoc(block: CodeBlock)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(block: CodeBlock)","com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc"]},{"name":"fun javadoc(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(format: String, vararg args: Any)","com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc"]},{"name":"fun javadoc(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc"]},{"name":"fun javadoc(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(format: String, vararg args: Any)","com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc"]},{"name":"fun javadoc(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(format: String, vararg args: Any)","com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc"]},{"name":"fun member(name: String, code: CodeBlock)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.member","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/member.html","searchKeys":["member","fun member(name: String, code: CodeBlock)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.member"]},{"name":"fun member(name: String, format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.member","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/member.html","searchKeys":["member","fun member(name: String, format: String, vararg args: Any)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.member"]},{"name":"fun modifiers(modifiers: Iterable<Modifier>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/modifiers.html","searchKeys":["modifiers","fun modifiers(modifiers: Iterable<Modifier>)","com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers"]},{"name":"fun modifiers(modifiers: Iterable<Modifier>)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/modifiers.html","searchKeys":["modifiers","fun modifiers(modifiers: Iterable<Modifier>)","com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers"]},{"name":"fun modifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/modifiers.html","searchKeys":["modifiers","fun modifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers"]},{"name":"fun modifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/modifiers.html","searchKeys":["modifiers","fun modifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers"]},{"name":"fun modifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/modifiers.html","searchKeys":["modifiers","fun modifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers"]},{"name":"fun modifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/modifiers.html","searchKeys":["modifiers","fun modifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers"]},{"name":"fun nextControlFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/next-control-flow.html","searchKeys":["nextControlFlow","fun nextControlFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow"]},{"name":"fun nextControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.nextControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/next-control-flow.html","searchKeys":["nextControlFlow","fun nextControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.nextControlFlow"]},{"name":"fun nextControlFlow(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/next-control-flow.html","searchKeys":["nextControlFlow","fun nextControlFlow(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.nextControlFlow"]},{"name":"fun of(handler: AnnotationSpecHandler): AnnotationSpecHandlerScope","description":"com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.Companion.of","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler-scope/-companion/of.html","searchKeys":["of","fun of(handler: AnnotationSpecHandler): AnnotationSpecHandlerScope","com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.Companion.of"]},{"name":"fun of(handler: FieldSpecHandler): FieldSpecHandlerScope","description":"com.hendraanggrian.javapoet.FieldSpecHandlerScope.Companion.of","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler-scope/-companion/of.html","searchKeys":["of","fun of(handler: FieldSpecHandler): FieldSpecHandlerScope","com.hendraanggrian.javapoet.FieldSpecHandlerScope.Companion.of"]},{"name":"fun of(handler: MethodSpecHandler): MethodSpecHandlerScope","description":"com.hendraanggrian.javapoet.MethodSpecHandlerScope.Companion.of","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler-scope/-companion/of.html","searchKeys":["of","fun of(handler: MethodSpecHandler): MethodSpecHandlerScope","com.hendraanggrian.javapoet.MethodSpecHandlerScope.Companion.of"]},{"name":"fun of(handler: ParameterSpecHandler): ParameterSpecHandlerScope","description":"com.hendraanggrian.javapoet.ParameterSpecHandlerScope.Companion.of","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler-scope/-companion/of.html","searchKeys":["of","fun of(handler: ParameterSpecHandler): ParameterSpecHandlerScope","com.hendraanggrian.javapoet.ParameterSpecHandlerScope.Companion.of"]},{"name":"fun of(handler: TypeSpecHandler): TypeSpecHandlerScope","description":"com.hendraanggrian.javapoet.TypeSpecHandlerScope.Companion.of","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler-scope/-companion/of.html","searchKeys":["of","fun of(handler: TypeSpecHandler): TypeSpecHandlerScope","com.hendraanggrian.javapoet.TypeSpecHandlerScope.Companion.of"]},{"name":"fun originatingElement(originatingElement: Element)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElement","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/originating-element.html","searchKeys":["originatingElement","fun originatingElement(originatingElement: Element)","com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElement"]},{"name":"fun returns(type: Class<*>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","fun returns(type: Class<*>)","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"fun returns(type: KClass<*>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","fun returns(type: KClass<*>)","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"fun staticBlock(code: CodeBlock)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.staticBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/static-block.html","searchKeys":["staticBlock","fun staticBlock(code: CodeBlock)","com.hendraanggrian.javapoet.TypeSpecBuilder.staticBlock"]},{"name":"fun staticBlock(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.staticBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/static-block.html","searchKeys":["staticBlock","fun staticBlock(format: String, vararg args: Any)","com.hendraanggrian.javapoet.TypeSpecBuilder.staticBlock"]},{"name":"fun staticImport(constant: Enum<*>)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.staticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/static-import.html","searchKeys":["staticImport","fun staticImport(constant: Enum<*>)","com.hendraanggrian.javapoet.JavaFileBuilder.staticImport"]},{"name":"fun staticImport(type: ClassName, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.staticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/static-import.html","searchKeys":["staticImport","fun staticImport(type: ClassName, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.staticImport"]},{"name":"fun staticImport(type: KClass<*>, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.staticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/static-import.html","searchKeys":["staticImport","fun staticImport(type: KClass<*>, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.staticImport"]},{"name":"fun superclass(type: Class<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","fun superclass(type: Class<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"fun superclass(type: KClass<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","fun superclass(type: KClass<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"fun superinterface(superinterface: Class<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterface.html","searchKeys":["superinterface","fun superinterface(superinterface: Class<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface"]},{"name":"fun superinterface(superinterface: KClass<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterface.html","searchKeys":["superinterface","fun superinterface(superinterface: KClass<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface"]},{"name":"fun superinterface(superinterface: TypeMirror, avoidNestedTypeNameClashes: Boolean = true)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterface.html","searchKeys":["superinterface","fun superinterface(superinterface: TypeMirror, avoidNestedTypeNameClashes: Boolean = true)","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface"]},{"name":"fun superinterface(superinterface: TypeName)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterface.html","searchKeys":["superinterface","fun superinterface(superinterface: TypeName)","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface"]},{"name":"fun superinterfaces(superinterfaces: Iterable<TypeName>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterfaces.html","searchKeys":["superinterfaces","fun superinterfaces(superinterfaces: Iterable<TypeName>)","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces"]},{"name":"fun typeVariable(typeVariable: TypeVariableName)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariable","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/type-variable.html","searchKeys":["typeVariable","fun typeVariable(typeVariable: TypeVariableName)","com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariable"]},{"name":"fun typeVariable(typeVariable: TypeVariableName)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariable","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/type-variable.html","searchKeys":["typeVariable","fun typeVariable(typeVariable: TypeVariableName)","com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariable"]},{"name":"fun typeVariables(typeVariables: Iterable<TypeVariableName>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/type-variables.html","searchKeys":["typeVariables","fun typeVariables(typeVariables: Iterable<TypeVariableName>)","com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables"]},{"name":"fun typeVariables(typeVariables: Iterable<TypeVariableName>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/type-variables.html","searchKeys":["typeVariables","fun typeVariables(typeVariables: Iterable<TypeVariableName>)","com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables"]},{"name":"fun unindent()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.unindent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-code-block-builder/unindent.html","searchKeys":["unindent","fun unindent()","com.hendraanggrian.javapoet.CodeBlockBuilder.unindent"]},{"name":"inline fun <T> AnnotationSpecHandler.annotation(): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/annotation.html","searchKeys":["annotation","inline fun <T> AnnotationSpecHandler.annotation(): AnnotationSpec","com.hendraanggrian.javapoet.annotation"]},{"name":"inline fun <T> ClassName.parameterizedBy(): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","inline fun <T> ClassName.parameterizedBy(): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"inline fun <T> FieldSpecHandler.field(name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/field.html","searchKeys":["field","inline fun <T> FieldSpecHandler.field(name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.field"]},{"name":"inline fun <T> ParameterSpecHandler.parameter(name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameter.html","searchKeys":["parameter","inline fun <T> ParameterSpecHandler.parameter(name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.parameter"]},{"name":"inline fun <T> avoidClashesWithNestedClasses()","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","inline fun <T> avoidClashesWithNestedClasses()","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"inline fun <T> exception()","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.exception","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/exception.html","searchKeys":["exception","inline fun <T> exception()","com.hendraanggrian.javapoet.MethodSpecBuilder.exception"]},{"name":"inline fun <T> returns()","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","inline fun <T> returns()","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"inline fun <T> staticImport(vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.staticImport","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/static-import.html","searchKeys":["staticImport","inline fun <T> staticImport(vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.staticImport"]},{"name":"inline fun <T> superclass()","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","inline fun <T> superclass()","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"inline fun <T> superinterface()","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterface.html","searchKeys":["superinterface","inline fun <T> superinterface()","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterface"]},{"name":"inline fun AnnotationSpecHandler.annotation(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/annotation.html","searchKeys":["annotation","inline fun AnnotationSpecHandler.annotation(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.annotation"]},{"name":"inline fun AnnotationSpecHandler.annotation(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/annotation.html","searchKeys":["annotation","inline fun AnnotationSpecHandler.annotation(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.annotation"]},{"name":"inline fun AnnotationSpecHandler.annotation(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/annotation.html","searchKeys":["annotation","inline fun AnnotationSpecHandler.annotation(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.annotation"]},{"name":"inline fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","inline fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"inline fun FieldSpecHandler.field(type: Class<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/field.html","searchKeys":["field","inline fun FieldSpecHandler.field(type: Class<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.field"]},{"name":"inline fun FieldSpecHandler.field(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/field.html","searchKeys":["field","inline fun FieldSpecHandler.field(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.field"]},{"name":"inline fun FieldSpecHandler.field(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/field.html","searchKeys":["field","inline fun FieldSpecHandler.field(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.field"]},{"name":"inline fun MethodSpecHandler.constructorMethod(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.constructorMethod","location":"javapoet-dsl/com.hendraanggrian.javapoet/constructor-method.html","searchKeys":["constructorMethod","inline fun MethodSpecHandler.constructorMethod(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.constructorMethod"]},{"name":"inline fun MethodSpecHandler.method(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.method","location":"javapoet-dsl/com.hendraanggrian.javapoet/method.html","searchKeys":["method","inline fun MethodSpecHandler.method(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.method"]},{"name":"inline fun ParameterSpecHandler.parameter(type: Class<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameter.html","searchKeys":["parameter","inline fun ParameterSpecHandler.parameter(type: Class<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.parameter"]},{"name":"inline fun ParameterSpecHandler.parameter(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameter.html","searchKeys":["parameter","inline fun ParameterSpecHandler.parameter(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.parameter"]},{"name":"inline fun ParameterSpecHandler.parameter(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/parameter.html","searchKeys":["parameter","inline fun ParameterSpecHandler.parameter(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.parameter"]},{"name":"inline fun String.genericsBy(vararg bounds: TypeName): TypeVariableName","description":"com.hendraanggrian.javapoet.genericsBy","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics-by.html","searchKeys":["genericsBy","inline fun String.genericsBy(vararg bounds: TypeName): TypeVariableName","com.hendraanggrian.javapoet.genericsBy"]},{"name":"inline fun TypeSpecHandler.annotationType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.annotationType","location":"javapoet-dsl/com.hendraanggrian.javapoet/annotation-type.html","searchKeys":["annotationType","inline fun TypeSpecHandler.annotationType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.annotationType"]},{"name":"inline fun TypeSpecHandler.classType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.classType","location":"javapoet-dsl/com.hendraanggrian.javapoet/class-type.html","searchKeys":["classType","inline fun TypeSpecHandler.classType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.classType"]},{"name":"inline fun TypeSpecHandler.enumType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.enumType","location":"javapoet-dsl/com.hendraanggrian.javapoet/enum-type.html","searchKeys":["enumType","inline fun TypeSpecHandler.enumType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.enumType"]},{"name":"inline fun TypeSpecHandler.interfaceType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.interfaceType","location":"javapoet-dsl/com.hendraanggrian.javapoet/interface-type.html","searchKeys":["interfaceType","inline fun TypeSpecHandler.interfaceType(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.interfaceType"]},{"name":"inline fun buildAnnotationSpec(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","inline fun buildAnnotationSpec(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"inline fun buildAnnotationTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnnotationTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-annotation-type-spec.html","searchKeys":["buildAnnotationTypeSpec","inline fun buildAnnotationTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnnotationTypeSpec"]},{"name":"inline fun buildClassTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildClassTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-class-type-spec.html","searchKeys":["buildClassTypeSpec","inline fun buildClassTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildClassTypeSpec"]},{"name":"inline fun buildCodeBlock(configuration: CodeBlockBuilder.() -> Unit): CodeBlock","description":"com.hendraanggrian.javapoet.buildCodeBlock","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-code-block.html","searchKeys":["buildCodeBlock","inline fun buildCodeBlock(configuration: CodeBlockBuilder.() -> Unit): CodeBlock","com.hendraanggrian.javapoet.buildCodeBlock"]},{"name":"inline fun buildEnumTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildEnumTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-enum-type-spec.html","searchKeys":["buildEnumTypeSpec","inline fun buildEnumTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildEnumTypeSpec"]},{"name":"inline fun buildFieldSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","inline fun buildFieldSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"inline fun buildInterfaceTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildInterfaceTypeSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-interface-type-spec.html","searchKeys":["buildInterfaceTypeSpec","inline fun buildInterfaceTypeSpec(name: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildInterfaceTypeSpec"]},{"name":"inline fun buildJavaFile(packageName: String, configuration: JavaFileBuilder.() -> Unit): JavaFile","description":"com.hendraanggrian.javapoet.buildJavaFile","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-java-file.html","searchKeys":["buildJavaFile","inline fun buildJavaFile(packageName: String, configuration: JavaFileBuilder.() -> Unit): JavaFile","com.hendraanggrian.javapoet.buildJavaFile"]},{"name":"inline fun buildMethodSpec(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.buildMethodSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-method-spec.html","searchKeys":["buildMethodSpec","inline fun buildMethodSpec(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.buildMethodSpec"]},{"name":"inline fun buildParameterSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-dsl/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","inline fun buildParameterSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"inline fun classNamed(fullName: String): ClassName","description":"com.hendraanggrian.javapoet.classNamed","location":"javapoet-dsl/com.hendraanggrian.javapoet/class-named.html","searchKeys":["classNamed","inline fun classNamed(fullName: String): ClassName","com.hendraanggrian.javapoet.classNamed"]},{"name":"inline fun classNamed(packageName: String, simpleName: String, vararg simpleNames: String): ClassName","description":"com.hendraanggrian.javapoet.classNamed","location":"javapoet-dsl/com.hendraanggrian.javapoet/class-named.html","searchKeys":["classNamed","inline fun classNamed(packageName: String, simpleName: String, vararg simpleNames: String): ClassName","com.hendraanggrian.javapoet.classNamed"]},{"name":"interface AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.AnnotationSpecHandler","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler/index.html","searchKeys":["AnnotationSpecHandler","interface AnnotationSpecHandler","com.hendraanggrian.javapoet.AnnotationSpecHandler"]},{"name":"interface FieldSpecHandler","description":"com.hendraanggrian.javapoet.FieldSpecHandler","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/index.html","searchKeys":["FieldSpecHandler","interface FieldSpecHandler","com.hendraanggrian.javapoet.FieldSpecHandler"]},{"name":"interface MethodSpecHandler","description":"com.hendraanggrian.javapoet.MethodSpecHandler","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler/index.html","searchKeys":["MethodSpecHandler","interface MethodSpecHandler","com.hendraanggrian.javapoet.MethodSpecHandler"]},{"name":"interface ParameterSpecHandler","description":"com.hendraanggrian.javapoet.ParameterSpecHandler","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/index.html","searchKeys":["ParameterSpecHandler","interface ParameterSpecHandler","com.hendraanggrian.javapoet.ParameterSpecHandler"]},{"name":"interface TypeSpecHandler","description":"com.hendraanggrian.javapoet.TypeSpecHandler","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/index.html","searchKeys":["TypeSpecHandler","interface TypeSpecHandler","com.hendraanggrian.javapoet.TypeSpecHandler"]},{"name":"object Companion","description":"com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.Companion","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler-scope/-companion/index.html","searchKeys":["Companion","object Companion","com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.Companion"]},{"name":"object Companion","description":"com.hendraanggrian.javapoet.FieldSpecHandlerScope.Companion","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler-scope/-companion/index.html","searchKeys":["Companion","object Companion","com.hendraanggrian.javapoet.FieldSpecHandlerScope.Companion"]},{"name":"object Companion","description":"com.hendraanggrian.javapoet.MethodSpecHandlerScope.Companion","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler-scope/-companion/index.html","searchKeys":["Companion","object Companion","com.hendraanggrian.javapoet.MethodSpecHandlerScope.Companion"]},{"name":"object Companion","description":"com.hendraanggrian.javapoet.ParameterSpecHandlerScope.Companion","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler-scope/-companion/index.html","searchKeys":["Companion","object Companion","com.hendraanggrian.javapoet.ParameterSpecHandlerScope.Companion"]},{"name":"object Companion","description":"com.hendraanggrian.javapoet.TypeSpecHandlerScope.Companion","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler-scope/-companion/index.html","searchKeys":["Companion","object Companion","com.hendraanggrian.javapoet.TypeSpecHandlerScope.Companion"]},{"name":"open class AnnotationSpecHandlerScope : AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.AnnotationSpecHandlerScope","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler-scope/index.html","searchKeys":["AnnotationSpecHandlerScope","open class AnnotationSpecHandlerScope : AnnotationSpecHandler","com.hendraanggrian.javapoet.AnnotationSpecHandlerScope"]},{"name":"open class FieldSpecHandlerScope : FieldSpecHandler","description":"com.hendraanggrian.javapoet.FieldSpecHandlerScope","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler-scope/index.html","searchKeys":["FieldSpecHandlerScope","open class FieldSpecHandlerScope : FieldSpecHandler","com.hendraanggrian.javapoet.FieldSpecHandlerScope"]},{"name":"open class MethodSpecHandlerScope : MethodSpecHandler","description":"com.hendraanggrian.javapoet.MethodSpecHandlerScope","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler-scope/index.html","searchKeys":["MethodSpecHandlerScope","open class MethodSpecHandlerScope : MethodSpecHandler","com.hendraanggrian.javapoet.MethodSpecHandlerScope"]},{"name":"open class ParameterSpecHandlerScope : ParameterSpecHandler","description":"com.hendraanggrian.javapoet.ParameterSpecHandlerScope","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler-scope/index.html","searchKeys":["ParameterSpecHandlerScope","open class ParameterSpecHandlerScope : ParameterSpecHandler","com.hendraanggrian.javapoet.ParameterSpecHandlerScope"]},{"name":"open class TypeSpecHandlerScope : TypeSpecHandler","description":"com.hendraanggrian.javapoet.TypeSpecHandlerScope","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler-scope/index.html","searchKeys":["TypeSpecHandlerScope","open class TypeSpecHandlerScope : TypeSpecHandler","com.hendraanggrian.javapoet.TypeSpecHandlerScope"]},{"name":"open fun annotation(type: Class<*>): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler/annotation.html","searchKeys":["annotation","open fun annotation(type: Class<*>): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation"]},{"name":"open fun annotation(type: ClassName): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler/annotation.html","searchKeys":["annotation","open fun annotation(type: ClassName): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation"]},{"name":"open fun annotation(type: KClass<*>): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler/annotation.html","searchKeys":["annotation","open fun annotation(type: KClass<*>): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecHandler.annotation"]},{"name":"open fun annotationType(name: String): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecHandler.annotationType","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/annotation-type.html","searchKeys":["annotationType","open fun annotationType(name: String): TypeSpec","com.hendraanggrian.javapoet.TypeSpecHandler.annotationType"]},{"name":"open fun annotationTyping(): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecHandler.annotationTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/annotation-typing.html","searchKeys":["annotationTyping","open fun annotationTyping(): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.TypeSpecHandler.annotationTyping"]},{"name":"open fun anonymousType(format: String, vararg args: Any): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecHandler.anonymousType","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/anonymous-type.html","searchKeys":["anonymousType","open fun anonymousType(format: String, vararg args: Any): TypeSpec","com.hendraanggrian.javapoet.TypeSpecHandler.anonymousType"]},{"name":"open fun anonymousTyping(): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecHandler.anonymousTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/anonymous-typing.html","searchKeys":["anonymousTyping","open fun anonymousTyping(): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.TypeSpecHandler.anonymousTyping"]},{"name":"open fun classType(name: String): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecHandler.classType","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/class-type.html","searchKeys":["classType","open fun classType(name: String): TypeSpec","com.hendraanggrian.javapoet.TypeSpecHandler.classType"]},{"name":"open fun classTyping(): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecHandler.classTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/class-typing.html","searchKeys":["classTyping","open fun classTyping(): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.TypeSpecHandler.classTyping"]},{"name":"open fun constructorMethod(): MethodSpec","description":"com.hendraanggrian.javapoet.MethodSpecHandler.constructorMethod","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler/constructor-method.html","searchKeys":["constructorMethod","open fun constructorMethod(): MethodSpec","com.hendraanggrian.javapoet.MethodSpecHandler.constructorMethod"]},{"name":"open fun enumType(name: String): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecHandler.enumType","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/enum-type.html","searchKeys":["enumType","open fun enumType(name: String): TypeSpec","com.hendraanggrian.javapoet.TypeSpecHandler.enumType"]},{"name":"open fun enumTyping(): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecHandler.enumTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/enum-typing.html","searchKeys":["enumTyping","open fun enumTyping(): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.TypeSpecHandler.enumTyping"]},{"name":"open fun field(type: Class<*>, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecHandler.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/field.html","searchKeys":["field","open fun field(type: Class<*>, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.FieldSpecHandler.field"]},{"name":"open fun field(type: KClass<*>, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecHandler.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/field.html","searchKeys":["field","open fun field(type: KClass<*>, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.FieldSpecHandler.field"]},{"name":"open fun field(type: TypeName, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecHandler.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/field.html","searchKeys":["field","open fun field(type: TypeName, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.FieldSpecHandler.field"]},{"name":"open fun fielding(type: Class<*>, vararg modifiers: Modifier): SpecDelegateProvider<FieldSpec>","description":"com.hendraanggrian.javapoet.FieldSpecHandler.fielding","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/fielding.html","searchKeys":["fielding","open fun fielding(type: Class<*>, vararg modifiers: Modifier): SpecDelegateProvider<FieldSpec>","com.hendraanggrian.javapoet.FieldSpecHandler.fielding"]},{"name":"open fun fielding(type: KClass<*>, vararg modifiers: Modifier): SpecDelegateProvider<FieldSpec>","description":"com.hendraanggrian.javapoet.FieldSpecHandler.fielding","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/fielding.html","searchKeys":["fielding","open fun fielding(type: KClass<*>, vararg modifiers: Modifier): SpecDelegateProvider<FieldSpec>","com.hendraanggrian.javapoet.FieldSpecHandler.fielding"]},{"name":"open fun fielding(type: TypeName, vararg modifiers: Modifier): SpecDelegateProvider<FieldSpec>","description":"com.hendraanggrian.javapoet.FieldSpecHandler.fielding","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler/fielding.html","searchKeys":["fielding","open fun fielding(type: TypeName, vararg modifiers: Modifier): SpecDelegateProvider<FieldSpec>","com.hendraanggrian.javapoet.FieldSpecHandler.fielding"]},{"name":"open fun interfaceType(name: String): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecHandler.interfaceType","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/interface-type.html","searchKeys":["interfaceType","open fun interfaceType(name: String): TypeSpec","com.hendraanggrian.javapoet.TypeSpecHandler.interfaceType"]},{"name":"open fun interfaceTyping(): SpecDelegateProvider<TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecHandler.interfaceTyping","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler/interface-typing.html","searchKeys":["interfaceTyping","open fun interfaceTyping(): SpecDelegateProvider<TypeSpec>","com.hendraanggrian.javapoet.TypeSpecHandler.interfaceTyping"]},{"name":"open fun method(name: String): MethodSpec","description":"com.hendraanggrian.javapoet.MethodSpecHandler.method","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler/method.html","searchKeys":["method","open fun method(name: String): MethodSpec","com.hendraanggrian.javapoet.MethodSpecHandler.method"]},{"name":"open fun methoding(): SpecDelegateProvider<MethodSpec>","description":"com.hendraanggrian.javapoet.MethodSpecHandler.methoding","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler/methoding.html","searchKeys":["methoding","open fun methoding(): SpecDelegateProvider<MethodSpec>","com.hendraanggrian.javapoet.MethodSpecHandler.methoding"]},{"name":"open fun parameter(type: Class<*>, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecHandler.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/parameter.html","searchKeys":["parameter","open fun parameter(type: Class<*>, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecHandler.parameter"]},{"name":"open fun parameter(type: KClass<*>, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecHandler.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/parameter.html","searchKeys":["parameter","open fun parameter(type: KClass<*>, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecHandler.parameter"]},{"name":"open fun parameter(type: TypeName, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecHandler.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/parameter.html","searchKeys":["parameter","open fun parameter(type: TypeName, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecHandler.parameter"]},{"name":"open fun parametering(type: Class<*>, vararg modifiers: Modifier): SpecDelegateProvider<ParameterSpec>","description":"com.hendraanggrian.javapoet.ParameterSpecHandler.parametering","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/parametering.html","searchKeys":["parametering","open fun parametering(type: Class<*>, vararg modifiers: Modifier): SpecDelegateProvider<ParameterSpec>","com.hendraanggrian.javapoet.ParameterSpecHandler.parametering"]},{"name":"open fun parametering(type: KClass<*>, vararg modifiers: Modifier): SpecDelegateProvider<ParameterSpec>","description":"com.hendraanggrian.javapoet.ParameterSpecHandler.parametering","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/parametering.html","searchKeys":["parametering","open fun parametering(type: KClass<*>, vararg modifiers: Modifier): SpecDelegateProvider<ParameterSpec>","com.hendraanggrian.javapoet.ParameterSpecHandler.parametering"]},{"name":"open fun parametering(type: TypeName, vararg modifiers: Modifier): SpecDelegateProvider<ParameterSpec>","description":"com.hendraanggrian.javapoet.ParameterSpecHandler.parametering","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler/parametering.html","searchKeys":["parametering","open fun parametering(type: TypeName, vararg modifiers: Modifier): SpecDelegateProvider<ParameterSpec>","com.hendraanggrian.javapoet.ParameterSpecHandler.parametering"]},{"name":"open override fun annotation(annotation: AnnotationSpec)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/annotation.html","searchKeys":["annotation","open override fun annotation(annotation: AnnotationSpec)","com.hendraanggrian.javapoet.FieldSpecBuilder.annotation"]},{"name":"open override fun annotation(annotation: AnnotationSpec)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/annotation.html","searchKeys":["annotation","open override fun annotation(annotation: AnnotationSpec)","com.hendraanggrian.javapoet.MethodSpecBuilder.annotation"]},{"name":"open override fun annotation(annotation: AnnotationSpec)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/annotation.html","searchKeys":["annotation","open override fun annotation(annotation: AnnotationSpec)","com.hendraanggrian.javapoet.ParameterSpecBuilder.annotation"]},{"name":"open override fun annotation(annotation: AnnotationSpec)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.annotation","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/annotation.html","searchKeys":["annotation","open override fun annotation(annotation: AnnotationSpec)","com.hendraanggrian.javapoet.TypeSpecBuilder.annotation"]},{"name":"open override fun field(field: FieldSpec)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.field","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/field.html","searchKeys":["field","open override fun field(field: FieldSpec)","com.hendraanggrian.javapoet.TypeSpecBuilder.field"]},{"name":"open override fun method(method: MethodSpec)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.method","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/method.html","searchKeys":["method","open override fun method(method: MethodSpec)","com.hendraanggrian.javapoet.TypeSpecBuilder.method"]},{"name":"open override fun parameter(parameter: ParameterSpec)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.parameter","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/parameter.html","searchKeys":["parameter","open override fun parameter(parameter: ParameterSpec)","com.hendraanggrian.javapoet.MethodSpecBuilder.parameter"]},{"name":"open override fun type(type: TypeSpec)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.type","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/type.html","searchKeys":["type","open override fun type(type: TypeSpec)","com.hendraanggrian.javapoet.JavaFileBuilder.type"]},{"name":"open override fun type(type: TypeSpec)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.type","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/type.html","searchKeys":["type","open override fun type(type: TypeSpec)","com.hendraanggrian.javapoet.TypeSpecBuilder.type"]},{"name":"operator fun Class<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun Class<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.invoke"]},{"name":"operator fun ClassName.invoke(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun ClassName.invoke(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.invoke"]},{"name":"operator fun KClass<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun KClass<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.MethodSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.MethodSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.TypeSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: Class<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: Class<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: Class<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: Class<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecHandlerScope.invoke","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun provideDelegate(thisRef: Any?, property: KProperty<*>): ReadOnlyProperty<Any?, T>","description":"com.hendraanggrian.javapoet.SpecDelegateProvider.provideDelegate","location":"javapoet-dsl/com.hendraanggrian.javapoet/-spec-delegate-provider/provide-delegate.html","searchKeys":["provideDelegate","operator fun provideDelegate(thisRef: Any?, property: KProperty<*>): ReadOnlyProperty<Any?, T>","com.hendraanggrian.javapoet.SpecDelegateProvider.provideDelegate"]},{"name":"val ABSTRACT: Modifier","description":"com.hendraanggrian.javapoet.ABSTRACT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-a-b-s-t-r-a-c-t.html","searchKeys":["ABSTRACT","val ABSTRACT: Modifier","com.hendraanggrian.javapoet.ABSTRACT"]},{"name":"val ANNOTATION: ClassName","description":"com.hendraanggrian.javapoet.ANNOTATION","location":"javapoet-dsl/com.hendraanggrian.javapoet/-a-n-n-o-t-a-t-i-o-n.html","searchKeys":["ANNOTATION","val ANNOTATION: ClassName","com.hendraanggrian.javapoet.ANNOTATION"]},{"name":"val BOOLEAN: TypeName","description":"com.hendraanggrian.javapoet.BOOLEAN","location":"javapoet-dsl/com.hendraanggrian.javapoet/-b-o-o-l-e-a-n.html","searchKeys":["BOOLEAN","val BOOLEAN: TypeName","com.hendraanggrian.javapoet.BOOLEAN"]},{"name":"val BYTE: TypeName","description":"com.hendraanggrian.javapoet.BYTE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-b-y-t-e.html","searchKeys":["BYTE","val BYTE: TypeName","com.hendraanggrian.javapoet.BYTE"]},{"name":"val CHAR: TypeName","description":"com.hendraanggrian.javapoet.CHAR","location":"javapoet-dsl/com.hendraanggrian.javapoet/-c-h-a-r.html","searchKeys":["CHAR","val CHAR: TypeName","com.hendraanggrian.javapoet.CHAR"]},{"name":"val CHAR_SEQUENCE: ClassName","description":"com.hendraanggrian.javapoet.CHAR_SEQUENCE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-c-h-a-r_-s-e-q-u-e-n-c-e.html","searchKeys":["CHAR_SEQUENCE","val CHAR_SEQUENCE: ClassName","com.hendraanggrian.javapoet.CHAR_SEQUENCE"]},{"name":"val COLLECTION: ClassName","description":"com.hendraanggrian.javapoet.COLLECTION","location":"javapoet-dsl/com.hendraanggrian.javapoet/-c-o-l-l-e-c-t-i-o-n.html","searchKeys":["COLLECTION","val COLLECTION: ClassName","com.hendraanggrian.javapoet.COLLECTION"]},{"name":"val COMPARABLE: ClassName","description":"com.hendraanggrian.javapoet.COMPARABLE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-c-o-m-p-a-r-a-b-l-e.html","searchKeys":["COMPARABLE","val COMPARABLE: ClassName","com.hendraanggrian.javapoet.COMPARABLE"]},{"name":"val Class<*>.name2: ClassName","description":"com.hendraanggrian.javapoet.name2","location":"javapoet-dsl/com.hendraanggrian.javapoet/name2.html","searchKeys":["name2","val Class<*>.name2: ClassName","com.hendraanggrian.javapoet.name2"]},{"name":"val DEFAULT: Modifier","description":"com.hendraanggrian.javapoet.DEFAULT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: Modifier","com.hendraanggrian.javapoet.DEFAULT"]},{"name":"val DOUBLE: TypeName","description":"com.hendraanggrian.javapoet.DOUBLE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-d-o-u-b-l-e.html","searchKeys":["DOUBLE","val DOUBLE: TypeName","com.hendraanggrian.javapoet.DOUBLE"]},{"name":"val FINAL: Modifier","description":"com.hendraanggrian.javapoet.FINAL","location":"javapoet-dsl/com.hendraanggrian.javapoet/-f-i-n-a-l.html","searchKeys":["FINAL","val FINAL: Modifier","com.hendraanggrian.javapoet.FINAL"]},{"name":"val FLOAT: TypeName","description":"com.hendraanggrian.javapoet.FLOAT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-f-l-o-a-t.html","searchKeys":["FLOAT","val FLOAT: TypeName","com.hendraanggrian.javapoet.FLOAT"]},{"name":"val INT: TypeName","description":"com.hendraanggrian.javapoet.INT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-i-n-t.html","searchKeys":["INT","val INT: TypeName","com.hendraanggrian.javapoet.INT"]},{"name":"val ITERABLE: ClassName","description":"com.hendraanggrian.javapoet.ITERABLE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-i-t-e-r-a-b-l-e.html","searchKeys":["ITERABLE","val ITERABLE: ClassName","com.hendraanggrian.javapoet.ITERABLE"]},{"name":"val KClass<*>.name: ClassName","description":"com.hendraanggrian.javapoet.name","location":"javapoet-dsl/com.hendraanggrian.javapoet/name.html","searchKeys":["name","val KClass<*>.name: ClassName","com.hendraanggrian.javapoet.name"]},{"name":"val LIST: ClassName","description":"com.hendraanggrian.javapoet.LIST","location":"javapoet-dsl/com.hendraanggrian.javapoet/-l-i-s-t.html","searchKeys":["LIST","val LIST: ClassName","com.hendraanggrian.javapoet.LIST"]},{"name":"val LONG: TypeName","description":"com.hendraanggrian.javapoet.LONG","location":"javapoet-dsl/com.hendraanggrian.javapoet/-l-o-n-g.html","searchKeys":["LONG","val LONG: TypeName","com.hendraanggrian.javapoet.LONG"]},{"name":"val MAP: ClassName","description":"com.hendraanggrian.javapoet.MAP","location":"javapoet-dsl/com.hendraanggrian.javapoet/-m-a-p.html","searchKeys":["MAP","val MAP: ClassName","com.hendraanggrian.javapoet.MAP"]},{"name":"val NATIVE: Modifier","description":"com.hendraanggrian.javapoet.NATIVE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-n-a-t-i-v-e.html","searchKeys":["NATIVE","val NATIVE: Modifier","com.hendraanggrian.javapoet.NATIVE"]},{"name":"val OBJECT: ClassName","description":"com.hendraanggrian.javapoet.OBJECT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-o-b-j-e-c-t.html","searchKeys":["OBJECT","val OBJECT: ClassName","com.hendraanggrian.javapoet.OBJECT"]},{"name":"val PRIVATE: Modifier","description":"com.hendraanggrian.javapoet.PRIVATE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-p-r-i-v-a-t-e.html","searchKeys":["PRIVATE","val PRIVATE: Modifier","com.hendraanggrian.javapoet.PRIVATE"]},{"name":"val PROTECTED: Modifier","description":"com.hendraanggrian.javapoet.PROTECTED","location":"javapoet-dsl/com.hendraanggrian.javapoet/-p-r-o-t-e-c-t-e-d.html","searchKeys":["PROTECTED","val PROTECTED: Modifier","com.hendraanggrian.javapoet.PROTECTED"]},{"name":"val PUBLIC: Modifier","description":"com.hendraanggrian.javapoet.PUBLIC","location":"javapoet-dsl/com.hendraanggrian.javapoet/-p-u-b-l-i-c.html","searchKeys":["PUBLIC","val PUBLIC: Modifier","com.hendraanggrian.javapoet.PUBLIC"]},{"name":"val SET: ClassName","description":"com.hendraanggrian.javapoet.SET","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-e-t.html","searchKeys":["SET","val SET: ClassName","com.hendraanggrian.javapoet.SET"]},{"name":"val SHORT: TypeName","description":"com.hendraanggrian.javapoet.SHORT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-h-o-r-t.html","searchKeys":["SHORT","val SHORT: TypeName","com.hendraanggrian.javapoet.SHORT"]},{"name":"val STATIC: Modifier","description":"com.hendraanggrian.javapoet.STATIC","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-t-a-t-i-c.html","searchKeys":["STATIC","val STATIC: Modifier","com.hendraanggrian.javapoet.STATIC"]},{"name":"val STRICTFP: Modifier","description":"com.hendraanggrian.javapoet.STRICTFP","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-t-r-i-c-t-f-p.html","searchKeys":["STRICTFP","val STRICTFP: Modifier","com.hendraanggrian.javapoet.STRICTFP"]},{"name":"val STRING: ClassName","description":"com.hendraanggrian.javapoet.STRING","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-t-r-i-n-g.html","searchKeys":["STRING","val STRING: ClassName","com.hendraanggrian.javapoet.STRING"]},{"name":"val SYNCHRONIZED: Modifier","description":"com.hendraanggrian.javapoet.SYNCHRONIZED","location":"javapoet-dsl/com.hendraanggrian.javapoet/-s-y-n-c-h-r-o-n-i-z-e-d.html","searchKeys":["SYNCHRONIZED","val SYNCHRONIZED: Modifier","com.hendraanggrian.javapoet.SYNCHRONIZED"]},{"name":"val String.generics: TypeVariableName","description":"com.hendraanggrian.javapoet.generics","location":"javapoet-dsl/com.hendraanggrian.javapoet/generics.html","searchKeys":["generics","val String.generics: TypeVariableName","com.hendraanggrian.javapoet.generics"]},{"name":"val THROWABLE: ClassName","description":"com.hendraanggrian.javapoet.THROWABLE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-t-h-r-o-w-a-b-l-e.html","searchKeys":["THROWABLE","val THROWABLE: ClassName","com.hendraanggrian.javapoet.THROWABLE"]},{"name":"val TRANSIENT: Modifier","description":"com.hendraanggrian.javapoet.TRANSIENT","location":"javapoet-dsl/com.hendraanggrian.javapoet/-t-r-a-n-s-i-e-n-t.html","searchKeys":["TRANSIENT","val TRANSIENT: Modifier","com.hendraanggrian.javapoet.TRANSIENT"]},{"name":"val TypeName.array: ArrayTypeName","description":"com.hendraanggrian.javapoet.array","location":"javapoet-dsl/com.hendraanggrian.javapoet/array.html","searchKeys":["array","val TypeName.array: ArrayTypeName","com.hendraanggrian.javapoet.array"]},{"name":"val TypeName.subtype: WildcardTypeName","description":"com.hendraanggrian.javapoet.subtype","location":"javapoet-dsl/com.hendraanggrian.javapoet/subtype.html","searchKeys":["subtype","val TypeName.subtype: WildcardTypeName","com.hendraanggrian.javapoet.subtype"]},{"name":"val TypeName.supertype: WildcardTypeName","description":"com.hendraanggrian.javapoet.supertype","location":"javapoet-dsl/com.hendraanggrian.javapoet/supertype.html","searchKeys":["supertype","val TypeName.supertype: WildcardTypeName","com.hendraanggrian.javapoet.supertype"]},{"name":"val VOID: TypeName","description":"com.hendraanggrian.javapoet.VOID","location":"javapoet-dsl/com.hendraanggrian.javapoet/-v-o-i-d.html","searchKeys":["VOID","val VOID: TypeName","com.hendraanggrian.javapoet.VOID"]},{"name":"val VOLATILE: Modifier","description":"com.hendraanggrian.javapoet.VOLATILE","location":"javapoet-dsl/com.hendraanggrian.javapoet/-v-o-l-a-t-i-l-e.html","searchKeys":["VOLATILE","val VOLATILE: Modifier","com.hendraanggrian.javapoet.VOLATILE"]},{"name":"val alwaysQualifiedNames: MutableSet<String>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualifiedNames","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/always-qualified-names.html","searchKeys":["alwaysQualifiedNames","val alwaysQualifiedNames: MutableSet<String>","com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualifiedNames"]},{"name":"val annotations: MutableList<AnnotationSpec>","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/annotations.html","searchKeys":["annotations","val annotations: MutableList<AnnotationSpec>","com.hendraanggrian.javapoet.FieldSpecBuilder.annotations"]},{"name":"val annotations: MutableList<AnnotationSpec>","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/annotations.html","searchKeys":["annotations","val annotations: MutableList<AnnotationSpec>","com.hendraanggrian.javapoet.MethodSpecBuilder.annotations"]},{"name":"val annotations: MutableList<AnnotationSpec>","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/annotations.html","searchKeys":["annotations","val annotations: MutableList<AnnotationSpec>","com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations"]},{"name":"val annotations: MutableList<AnnotationSpec>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.annotations","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/annotations.html","searchKeys":["annotations","val annotations: MutableList<AnnotationSpec>","com.hendraanggrian.javapoet.TypeSpecBuilder.annotations"]},{"name":"val enumConstants: MutableMap<String, TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/enum-constants.html","searchKeys":["enumConstants","val enumConstants: MutableMap<String, TypeSpec>","com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants"]},{"name":"val fields: MutableList<FieldSpec>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.fields","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/fields.html","searchKeys":["fields","val fields: MutableList<FieldSpec>","com.hendraanggrian.javapoet.TypeSpecBuilder.fields"]},{"name":"val members: Map<String, List<CodeBlock>>","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.members","location":"javapoet-dsl/com.hendraanggrian.javapoet/-annotation-spec-builder/members.html","searchKeys":["members","val members: Map<String, List<CodeBlock>>","com.hendraanggrian.javapoet.AnnotationSpecBuilder.members"]},{"name":"val methods: MutableList<MethodSpec>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.methods","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/methods.html","searchKeys":["methods","val methods: MutableList<MethodSpec>","com.hendraanggrian.javapoet.TypeSpecBuilder.methods"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-parameter-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers"]},{"name":"val originatingElements: MutableList<Element>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElements","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/originating-elements.html","searchKeys":["originatingElements","val originatingElements: MutableList<Element>","com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElements"]},{"name":"val parameters: MutableList<ParameterSpec>","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.parameters","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/parameters.html","searchKeys":["parameters","val parameters: MutableList<ParameterSpec>","com.hendraanggrian.javapoet.MethodSpecBuilder.parameters"]},{"name":"val superinterfaces: MutableList<TypeName>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/superinterfaces.html","searchKeys":["superinterfaces","val superinterfaces: MutableList<TypeName>","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces"]},{"name":"val typeVariables: MutableList<TypeVariableName>","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: MutableList<TypeVariableName>","com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables"]},{"name":"val typeVariables: MutableList<TypeVariableName>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: MutableList<TypeVariableName>","com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables"]},{"name":"val types: MutableList<TypeSpec>","description":"com.hendraanggrian.javapoet.JavaFileBuilder.types","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/types.html","searchKeys":["types","val types: MutableList<TypeSpec>","com.hendraanggrian.javapoet.JavaFileBuilder.types"]},{"name":"val types: MutableList<TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.types","location":"javapoet-dsl/com.hendraanggrian.javapoet/-type-spec-builder/types.html","searchKeys":["types","val types: MutableList<TypeSpec>","com.hendraanggrian.javapoet.TypeSpecBuilder.types"]},{"name":"var defaultValue: CodeBlock","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/default-value.html","searchKeys":["defaultValue","var defaultValue: CodeBlock","com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue"]},{"name":"var indent: String","description":"com.hendraanggrian.javapoet.JavaFileBuilder.indent","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/indent.html","searchKeys":["indent","var indent: String","com.hendraanggrian.javapoet.JavaFileBuilder.indent"]},{"name":"var indentSize: Int","description":"com.hendraanggrian.javapoet.JavaFileBuilder.indentSize","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/indent-size.html","searchKeys":["indentSize","var indentSize: Int","com.hendraanggrian.javapoet.JavaFileBuilder.indentSize"]},{"name":"var initializer: CodeBlock","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.initializer","location":"javapoet-dsl/com.hendraanggrian.javapoet/-field-spec-builder/initializer.html","searchKeys":["initializer","var initializer: CodeBlock","com.hendraanggrian.javapoet.FieldSpecBuilder.initializer"]},{"name":"var isVarargs: Boolean","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.isVarargs","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/is-varargs.html","searchKeys":["isVarargs","var isVarargs: Boolean","com.hendraanggrian.javapoet.MethodSpecBuilder.isVarargs"]},{"name":"var name: String","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.name","location":"javapoet-dsl/com.hendraanggrian.javapoet/-method-spec-builder/name.html","searchKeys":["name","var name: String","com.hendraanggrian.javapoet.MethodSpecBuilder.name"]},{"name":"var skipJavaLangImports: Boolean","description":"com.hendraanggrian.javapoet.JavaFileBuilder.skipJavaLangImports","location":"javapoet-dsl/com.hendraanggrian.javapoet/-java-file-builder/skip-java-lang-imports.html","searchKeys":["skipJavaLangImports","var skipJavaLangImports: Boolean","com.hendraanggrian.javapoet.JavaFileBuilder.skipJavaLangImports"]}]
