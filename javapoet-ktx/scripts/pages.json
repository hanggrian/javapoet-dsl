[{"name":"abstract class CodeBlockHandler : CodeBlockAppendable","description":"com.hendraanggrian.javapoet.dsl.CodeBlockHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-code-block-handler/index.html","searchKeys":["CodeBlockHandler","abstract class CodeBlockHandler : CodeBlockAppendable","com.hendraanggrian.javapoet.dsl.CodeBlockHandler"]},{"name":"abstract class JavadocHandler : CodeBlockAppendable","description":"com.hendraanggrian.javapoet.dsl.JavadocHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler/index.html","searchKeys":["JavadocHandler","abstract class JavadocHandler : CodeBlockAppendable","com.hendraanggrian.javapoet.dsl.JavadocHandler"]},{"name":"abstract fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendNamed","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-code-block-handler/append-named.html","searchKeys":["appendNamed","abstract fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendNamed"]},{"name":"abstract fun nextFlow(flow: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.dsl.CodeBlockHandler.nextFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-code-block-handler/next-flow.html","searchKeys":["nextFlow","abstract fun nextFlow(flow: String, vararg args: Any)","com.hendraanggrian.javapoet.dsl.CodeBlockHandler.nextFlow"]},{"name":"annotation class SpecDslMarker","description":"com.hendraanggrian.javapoet.SpecDslMarker","location":"javapoet-ktx/com.hendraanggrian.javapoet/-spec-dsl-marker/index.html","searchKeys":["SpecDslMarker","annotation class SpecDslMarker","com.hendraanggrian.javapoet.SpecDslMarker"]},{"name":"class AnnotationSpecBuilder","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/index.html","searchKeys":["AnnotationSpecBuilder","class AnnotationSpecBuilder","com.hendraanggrian.javapoet.AnnotationSpecBuilder"]},{"name":"class AnnotationSpecHandlerScope(actualList: MutableList<AnnotationSpec>) : AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler-scope/index.html","searchKeys":["AnnotationSpecHandlerScope","class AnnotationSpecHandlerScope(actualList: MutableList<AnnotationSpec>) : AnnotationSpecHandler","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope"]},{"name":"class CodeBlockBuilder : CodeBlockHandler","description":"com.hendraanggrian.javapoet.CodeBlockBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/index.html","searchKeys":["CodeBlockBuilder","class CodeBlockBuilder : CodeBlockHandler","com.hendraanggrian.javapoet.CodeBlockBuilder"]},{"name":"class FieldSpecBuilder","description":"com.hendraanggrian.javapoet.FieldSpecBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/index.html","searchKeys":["FieldSpecBuilder","class FieldSpecBuilder","com.hendraanggrian.javapoet.FieldSpecBuilder"]},{"name":"class FieldSpecHandlerScope(actualList: MutableList<FieldSpec>) : FieldSpecHandler","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/index.html","searchKeys":["FieldSpecHandlerScope","class FieldSpecHandlerScope(actualList: MutableList<FieldSpec>) : FieldSpecHandler","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope"]},{"name":"class JavaFileBuilder : TypeSpecHandler","description":"com.hendraanggrian.javapoet.JavaFileBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/index.html","searchKeys":["JavaFileBuilder","class JavaFileBuilder : TypeSpecHandler","com.hendraanggrian.javapoet.JavaFileBuilder"]},{"name":"class JavadocHandlerScope(handler: JavadocHandler) : JavadocHandler, CodeBlockAppendable","description":"com.hendraanggrian.javapoet.dsl.JavadocHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler-scope/index.html","searchKeys":["JavadocHandlerScope","class JavadocHandlerScope(handler: JavadocHandler) : JavadocHandler, CodeBlockAppendable","com.hendraanggrian.javapoet.dsl.JavadocHandlerScope"]},{"name":"class MethodSpecBuilder : CodeBlockHandler","description":"com.hendraanggrian.javapoet.MethodSpecBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/index.html","searchKeys":["MethodSpecBuilder","class MethodSpecBuilder : CodeBlockHandler","com.hendraanggrian.javapoet.MethodSpecBuilder"]},{"name":"class MethodSpecHandlerScope(actualList: MutableList<MethodSpec>) : MethodSpecHandler","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler-scope/index.html","searchKeys":["MethodSpecHandlerScope","class MethodSpecHandlerScope(actualList: MutableList<MethodSpec>) : MethodSpecHandler","com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope"]},{"name":"class ParameterSpecBuilder","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/index.html","searchKeys":["ParameterSpecBuilder","class ParameterSpecBuilder","com.hendraanggrian.javapoet.ParameterSpecBuilder"]},{"name":"class ParameterSpecHandlerScope(actualList: MutableList<ParameterSpec>) : ParameterSpecHandler","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/index.html","searchKeys":["ParameterSpecHandlerScope","class ParameterSpecHandlerScope(actualList: MutableList<ParameterSpec>) : ParameterSpecHandler","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope"]},{"name":"class TypeNameHandlerScope(actualList: MutableList<TypeName>) : TypeNameHandler","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler-scope/index.html","searchKeys":["TypeNameHandlerScope","class TypeNameHandlerScope(actualList: MutableList<TypeName>) : TypeNameHandler","com.hendraanggrian.javapoet.dsl.TypeNameHandlerScope"]},{"name":"class TypeSpecBuilder","description":"com.hendraanggrian.javapoet.TypeSpecBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/index.html","searchKeys":["TypeSpecBuilder","class TypeSpecBuilder","com.hendraanggrian.javapoet.TypeSpecBuilder"]},{"name":"class TypeSpecHandlerScope(actualList: TypeSpecHandler) : TypeSpecHandler","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/index.html","searchKeys":["TypeSpecHandlerScope","class TypeSpecHandlerScope(actualList: TypeSpecHandler) : TypeSpecHandler","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope"]},{"name":"class TypeVariableNameHandlerScope(actualList: MutableList<TypeVariableName>) : TypeVariableNameHandler","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler-scope/index.html","searchKeys":["TypeVariableNameHandlerScope","class TypeVariableNameHandlerScope(actualList: MutableList<TypeVariableName>) : TypeVariableNameHandler","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope"]},{"name":"fun Annotation.asAnnotationSpec(includeDefaultValues: Boolean = false): AnnotationSpec","description":"com.hendraanggrian.javapoet.asAnnotationSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-annotation-spec.html","searchKeys":["asAnnotationSpec","fun Annotation.asAnnotationSpec(includeDefaultValues: Boolean = false): AnnotationSpec","com.hendraanggrian.javapoet.asAnnotationSpec"]},{"name":"fun AnnotationMirror.asAnnotationSpec(): AnnotationSpec","description":"com.hendraanggrian.javapoet.asAnnotationSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-annotation-spec.html","searchKeys":["asAnnotationSpec","fun AnnotationMirror.asAnnotationSpec(): AnnotationSpec","com.hendraanggrian.javapoet.asAnnotationSpec"]},{"name":"fun AnnotationSpec.Builder.edit(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec.Builder","description":"com.hendraanggrian.javapoet.edit","location":"javapoet-ktx/com.hendraanggrian.javapoet/edit.html","searchKeys":["edit","fun AnnotationSpec.Builder.edit(configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec.Builder","com.hendraanggrian.javapoet.edit"]},{"name":"fun AnnotationSpecHandler(actualList: MutableList<AnnotationSpec>)","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.AnnotationSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/-annotation-spec-handler.html","searchKeys":["AnnotationSpecHandler","fun AnnotationSpecHandler(actualList: MutableList<AnnotationSpec>)","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.AnnotationSpecHandler"]},{"name":"fun AnnotationSpecHandlerScope(actualList: MutableList<AnnotationSpec>)","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.AnnotationSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler-scope/-annotation-spec-handler-scope.html","searchKeys":["AnnotationSpecHandlerScope","fun AnnotationSpecHandlerScope(actualList: MutableList<AnnotationSpec>)","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.AnnotationSpecHandlerScope"]},{"name":"fun Class<*>.parameterizedBy(typeArguments: Collection<Type>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun Class<*>.parameterizedBy(typeArguments: Collection<Type>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun Class<*>.parameterizedBy(vararg typeArguments: KClass<*> = emptyArray()): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun Class<*>.parameterizedBy(vararg typeArguments: KClass<*> = emptyArray()): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun Class<*>.parameterizedBy(vararg typeArguments: TypeName = emptyArray()): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun Class<*>.parameterizedBy(vararg typeArguments: TypeName = emptyArray()): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun ClassName.parameterizedBy(typeArguments: Collection<TypeName>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun ClassName.parameterizedBy(typeArguments: Collection<TypeName>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun ClassName.parameterizedBy(vararg typeArguments: KClass<*> = emptyArray()): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun ClassName.parameterizedBy(vararg typeArguments: KClass<*> = emptyArray()): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun ClassName.parameterizedBy(vararg typeArguments: Type = emptyArray()): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun ClassName.parameterizedBy(vararg typeArguments: Type = emptyArray()): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun CodeBlock.Builder.edit(configuration: CodeBlockBuilder.() -> Unit): CodeBlock.Builder","description":"com.hendraanggrian.javapoet.edit","location":"javapoet-ktx/com.hendraanggrian.javapoet/edit.html","searchKeys":["edit","fun CodeBlock.Builder.edit(configuration: CodeBlockBuilder.() -> Unit): CodeBlock.Builder","com.hendraanggrian.javapoet.edit"]},{"name":"fun CodeBlockHandler()","description":"com.hendraanggrian.javapoet.dsl.CodeBlockHandler.CodeBlockHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-code-block-handler/-code-block-handler.html","searchKeys":["CodeBlockHandler","fun CodeBlockHandler()","com.hendraanggrian.javapoet.dsl.CodeBlockHandler.CodeBlockHandler"]},{"name":"fun FieldSpec.Builder.edit(configuration: FieldSpecBuilder.() -> Unit): FieldSpec.Builder","description":"com.hendraanggrian.javapoet.edit","location":"javapoet-ktx/com.hendraanggrian.javapoet/edit.html","searchKeys":["edit","fun FieldSpec.Builder.edit(configuration: FieldSpecBuilder.() -> Unit): FieldSpec.Builder","com.hendraanggrian.javapoet.edit"]},{"name":"fun FieldSpecHandler(actualList: MutableList<FieldSpec>)","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.FieldSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/-field-spec-handler.html","searchKeys":["FieldSpecHandler","fun FieldSpecHandler(actualList: MutableList<FieldSpec>)","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.FieldSpecHandler"]},{"name":"fun FieldSpecHandlerScope(actualList: MutableList<FieldSpec>)","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.FieldSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/-field-spec-handler-scope.html","searchKeys":["FieldSpecHandlerScope","fun FieldSpecHandlerScope(actualList: MutableList<FieldSpec>)","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.FieldSpecHandlerScope"]},{"name":"fun Iterable<CodeBlock>.join(separator: String): CodeBlock","description":"com.hendraanggrian.javapoet.join","location":"javapoet-ktx/com.hendraanggrian.javapoet/join.html","searchKeys":["join","fun Iterable<CodeBlock>.join(separator: String): CodeBlock","com.hendraanggrian.javapoet.join"]},{"name":"fun JavadocHandler()","description":"com.hendraanggrian.javapoet.dsl.JavadocHandler.JavadocHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler/-javadoc-handler.html","searchKeys":["JavadocHandler","fun JavadocHandler()","com.hendraanggrian.javapoet.dsl.JavadocHandler.JavadocHandler"]},{"name":"fun JavadocHandlerScope(handler: JavadocHandler)","description":"com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.JavadocHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler-scope/-javadoc-handler-scope.html","searchKeys":["JavadocHandlerScope","fun JavadocHandlerScope(handler: JavadocHandler)","com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.JavadocHandlerScope"]},{"name":"fun KClass<*>.parameterizedBy(typeArguments: Collection<KClass<*>>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun KClass<*>.parameterizedBy(typeArguments: Collection<KClass<*>>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun KClass<*>.parameterizedBy(vararg typeArguments: Type = emptyArray()): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun KClass<*>.parameterizedBy(vararg typeArguments: Type = emptyArray()): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun KClass<*>.parameterizedBy(vararg typeArguments: TypeName = emptyArray()): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","fun KClass<*>.parameterizedBy(vararg typeArguments: TypeName = emptyArray()): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"fun MethodSpec.Builder.edit(configuration: MethodSpecBuilder.() -> Unit): MethodSpec.Builder","description":"com.hendraanggrian.javapoet.edit","location":"javapoet-ktx/com.hendraanggrian.javapoet/edit.html","searchKeys":["edit","fun MethodSpec.Builder.edit(configuration: MethodSpecBuilder.() -> Unit): MethodSpec.Builder","com.hendraanggrian.javapoet.edit"]},{"name":"fun MethodSpecHandler(actualList: MutableList<MethodSpec>)","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandler.MethodSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler/-method-spec-handler.html","searchKeys":["MethodSpecHandler","fun MethodSpecHandler(actualList: MutableList<MethodSpec>)","com.hendraanggrian.javapoet.dsl.MethodSpecHandler.MethodSpecHandler"]},{"name":"fun MethodSpecHandlerScope(actualList: MutableList<MethodSpec>)","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope.MethodSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler-scope/-method-spec-handler-scope.html","searchKeys":["MethodSpecHandlerScope","fun MethodSpecHandlerScope(actualList: MutableList<MethodSpec>)","com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope.MethodSpecHandlerScope"]},{"name":"fun ParameterSpec.Builder.edit(configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec.Builder","description":"com.hendraanggrian.javapoet.edit","location":"javapoet-ktx/com.hendraanggrian.javapoet/edit.html","searchKeys":["edit","fun ParameterSpec.Builder.edit(configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec.Builder","com.hendraanggrian.javapoet.edit"]},{"name":"fun ParameterSpecHandler(actualList: MutableList<ParameterSpec>)","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.ParameterSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/-parameter-spec-handler.html","searchKeys":["ParameterSpecHandler","fun ParameterSpecHandler(actualList: MutableList<ParameterSpec>)","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.ParameterSpecHandler"]},{"name":"fun ParameterSpecHandlerScope(actualList: MutableList<ParameterSpec>)","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.ParameterSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/-parameter-spec-handler-scope.html","searchKeys":["ParameterSpecHandlerScope","fun ParameterSpecHandlerScope(actualList: MutableList<ParameterSpec>)","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.ParameterSpecHandlerScope"]},{"name":"fun SpecDslMarker()","description":"com.hendraanggrian.javapoet.SpecDslMarker.SpecDslMarker","location":"javapoet-ktx/com.hendraanggrian.javapoet/-spec-dsl-marker/-spec-dsl-marker.html","searchKeys":["SpecDslMarker","fun SpecDslMarker()","com.hendraanggrian.javapoet.SpecDslMarker.SpecDslMarker"]},{"name":"fun String.arrayOf(simpleName: String, vararg simpleNames: String): ArrayTypeName","description":"com.hendraanggrian.javapoet.arrayOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/array-of.html","searchKeys":["arrayOf","fun String.arrayOf(simpleName: String, vararg simpleNames: String): ArrayTypeName","com.hendraanggrian.javapoet.arrayOf"]},{"name":"fun TypeNameHandler(actualList: MutableList<TypeName>)","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandler.TypeNameHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler/-type-name-handler.html","searchKeys":["TypeNameHandler","fun TypeNameHandler(actualList: MutableList<TypeName>)","com.hendraanggrian.javapoet.dsl.TypeNameHandler.TypeNameHandler"]},{"name":"fun TypeNameHandlerScope(actualList: MutableList<TypeName>)","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandlerScope.TypeNameHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler-scope/-type-name-handler-scope.html","searchKeys":["TypeNameHandlerScope","fun TypeNameHandlerScope(actualList: MutableList<TypeName>)","com.hendraanggrian.javapoet.dsl.TypeNameHandlerScope.TypeNameHandlerScope"]},{"name":"fun TypeSpec.Builder.edit(configuration: TypeSpecBuilder.() -> Unit): TypeSpec.Builder","description":"com.hendraanggrian.javapoet.edit","location":"javapoet-ktx/com.hendraanggrian.javapoet/edit.html","searchKeys":["edit","fun TypeSpec.Builder.edit(configuration: TypeSpecBuilder.() -> Unit): TypeSpec.Builder","com.hendraanggrian.javapoet.edit"]},{"name":"fun TypeSpecHandler(actualList: MutableList<TypeSpec>)","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.TypeSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/-type-spec-handler.html","searchKeys":["TypeSpecHandler","fun TypeSpecHandler(actualList: MutableList<TypeSpec>)","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.TypeSpecHandler"]},{"name":"fun TypeSpecHandlerScope(actualList: TypeSpecHandler)","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.TypeSpecHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/-type-spec-handler-scope.html","searchKeys":["TypeSpecHandlerScope","fun TypeSpecHandlerScope(actualList: TypeSpecHandler)","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.TypeSpecHandlerScope"]},{"name":"fun TypeVariableNameHandler(actualList: MutableList<TypeVariableName>)","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.TypeVariableNameHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler/-type-variable-name-handler.html","searchKeys":["TypeVariableNameHandler","fun TypeVariableNameHandler(actualList: MutableList<TypeVariableName>)","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.TypeVariableNameHandler"]},{"name":"fun TypeVariableNameHandlerScope(actualList: MutableList<TypeVariableName>)","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.TypeVariableNameHandlerScope","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler-scope/-type-variable-name-handler-scope.html","searchKeys":["TypeVariableNameHandlerScope","fun TypeVariableNameHandlerScope(actualList: MutableList<TypeVariableName>)","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.TypeVariableNameHandlerScope"]},{"name":"fun VariableElement.asParameterSpec(): ParameterSpec","description":"com.hendraanggrian.javapoet.asParameterSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-parameter-spec.html","searchKeys":["asParameterSpec","fun VariableElement.asParameterSpec(): ParameterSpec","com.hendraanggrian.javapoet.asParameterSpec"]},{"name":"fun add(name: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler/add.html","searchKeys":["add","fun add(name: String): Boolean","com.hendraanggrian.javapoet.dsl.MethodSpecHandler.add"]},{"name":"fun add(name: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler/add.html","searchKeys":["add","fun add(name: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add"]},{"name":"fun add(name: String, configuration: MethodSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler/add.html","searchKeys":["add","fun add(name: String, configuration: MethodSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.MethodSpecHandler.add"]},{"name":"fun add(name: String, vararg bounds: KClass<*>): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler/add.html","searchKeys":["add","fun add(name: String, vararg bounds: KClass<*>): Boolean","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add"]},{"name":"fun add(name: String, vararg bounds: Type): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler/add.html","searchKeys":["add","fun add(name: String, vararg bounds: Type): Boolean","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add"]},{"name":"fun add(name: String, vararg bounds: TypeName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler/add.html","searchKeys":["add","fun add(name: String, vararg bounds: TypeName): Boolean","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.add"]},{"name":"fun add(type: Class<*>): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","fun add(type: Class<*>): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"fun add(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","fun add(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"fun add(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","fun add(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"fun add(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","fun add(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"fun add(type: KClass<*>): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","fun add(type: KClass<*>): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"fun add(type: KClass<*>): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler/add.html","searchKeys":["add","fun add(type: KClass<*>): Boolean","com.hendraanggrian.javapoet.dsl.TypeNameHandler.add"]},{"name":"fun add(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","fun add(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","fun add(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"fun add(type: Type): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler/add.html","searchKeys":["add","fun add(type: Type): Boolean","com.hendraanggrian.javapoet.dsl.TypeNameHandler.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","fun add(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","fun add(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"fun addAnnotation(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation"]},{"name":"fun addAnnotation(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation"]},{"name":"fun addAnnotation(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation"]},{"name":"fun addAnnotation(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-annotation.html","searchKeys":["addAnnotation","fun addAnnotation(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnnotation"]},{"name":"fun addAnonymous(code: CodeBlock): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(code: CodeBlock): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous"]},{"name":"fun addAnonymous(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous"]},{"name":"fun addAnonymous(format: String, vararg args: Any): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(format: String, vararg args: Any): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous"]},{"name":"fun addAnonymous(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-anonymous.html","searchKeys":["addAnonymous","fun addAnonymous(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addAnonymous"]},{"name":"fun addClass(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-class.html","searchKeys":["addClass","fun addClass(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass"]},{"name":"fun addClass(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-class.html","searchKeys":["addClass","fun addClass(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass"]},{"name":"fun addClass(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-class.html","searchKeys":["addClass","fun addClass(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass"]},{"name":"fun addClass(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-class.html","searchKeys":["addClass","fun addClass(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addClass"]},{"name":"fun addComment(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addComment","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/add-comment.html","searchKeys":["addComment","fun addComment(format: String, vararg args: Any)","com.hendraanggrian.javapoet.JavaFileBuilder.addComment"]},{"name":"fun addComment(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addComment","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-comment.html","searchKeys":["addComment","fun addComment(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.addComment"]},{"name":"fun addConstructor(): Boolean","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandler.addConstructor","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler/add-constructor.html","searchKeys":["addConstructor","fun addConstructor(): Boolean","com.hendraanggrian.javapoet.dsl.MethodSpecHandler.addConstructor"]},{"name":"fun addConstructor(configuration: MethodSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandler.addConstructor","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler/add-constructor.html","searchKeys":["addConstructor","fun addConstructor(configuration: MethodSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.MethodSpecHandler.addConstructor"]},{"name":"fun addEnum(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-enum.html","searchKeys":["addEnum","fun addEnum(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum"]},{"name":"fun addEnum(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-enum.html","searchKeys":["addEnum","fun addEnum(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum"]},{"name":"fun addEnum(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-enum.html","searchKeys":["addEnum","fun addEnum(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum"]},{"name":"fun addEnum(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-enum.html","searchKeys":["addEnum","fun addEnum(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addEnum"]},{"name":"fun addEnumConstant(name: String)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addEnumConstant","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-enum-constant.html","searchKeys":["addEnumConstant","fun addEnumConstant(name: String)","com.hendraanggrian.javapoet.TypeSpecBuilder.addEnumConstant"]},{"name":"fun addEnumConstant(name: String, spec: TypeSpec)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addEnumConstant","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-enum-constant.html","searchKeys":["addEnumConstant","fun addEnumConstant(name: String, spec: TypeSpec)","com.hendraanggrian.javapoet.TypeSpecBuilder.addEnumConstant"]},{"name":"fun addException(type: KClass<*>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addException","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-exception.html","searchKeys":["addException","fun addException(type: KClass<*>)","com.hendraanggrian.javapoet.MethodSpecBuilder.addException"]},{"name":"fun addException(type: Type)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addException","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-exception.html","searchKeys":["addException","fun addException(type: Type)","com.hendraanggrian.javapoet.MethodSpecBuilder.addException"]},{"name":"fun addException(type: TypeName)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addException","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-exception.html","searchKeys":["addException","fun addException(type: TypeName)","com.hendraanggrian.javapoet.MethodSpecBuilder.addException"]},{"name":"fun addExceptions(types: Iterable<TypeName>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addExceptions","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-exceptions.html","searchKeys":["addExceptions","fun addExceptions(types: Iterable<TypeName>)","com.hendraanggrian.javapoet.MethodSpecBuilder.addExceptions"]},{"name":"fun addInitializerBlock(code: CodeBlock)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-initializer-block.html","searchKeys":["addInitializerBlock","fun addInitializerBlock(code: CodeBlock)","com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock"]},{"name":"fun addInitializerBlock(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-initializer-block.html","searchKeys":["addInitializerBlock","fun addInitializerBlock(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.addInitializerBlock"]},{"name":"fun addInterface(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-interface.html","searchKeys":["addInterface","fun addInterface(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface"]},{"name":"fun addInterface(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-interface.html","searchKeys":["addInterface","fun addInterface(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface"]},{"name":"fun addInterface(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-interface.html","searchKeys":["addInterface","fun addInterface(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface"]},{"name":"fun addInterface(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/add-interface.html","searchKeys":["addInterface","fun addInterface(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandler.addInterface"]},{"name":"fun addMember(name: String, code: CodeBlock)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/add-member.html","searchKeys":["addMember","fun addMember(name: String, code: CodeBlock)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember"]},{"name":"fun addMember(name: String, configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/add-member.html","searchKeys":["addMember","fun addMember(name: String, configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember"]},{"name":"fun addMember(name: String, format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/add-member.html","searchKeys":["addMember","fun addMember(name: String, format: String, vararg args: Any)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.addMember"]},{"name":"fun addModifiers(modifiers: Iterable<Modifier>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addModifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(modifiers: Iterable<Modifier>)","com.hendraanggrian.javapoet.MethodSpecBuilder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.addModifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.FieldSpecBuilder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addModifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.MethodSpecBuilder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.addModifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.ParameterSpecBuilder.addModifiers"]},{"name":"fun addModifiers(vararg modifiers: Modifier)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addModifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-modifiers.html","searchKeys":["addModifiers","fun addModifiers(vararg modifiers: Modifier)","com.hendraanggrian.javapoet.TypeSpecBuilder.addModifiers"]},{"name":"fun addOriginatingElement(originatingElement: Element)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addOriginatingElement","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-originating-element.html","searchKeys":["addOriginatingElement","fun addOriginatingElement(originatingElement: Element)","com.hendraanggrian.javapoet.TypeSpecBuilder.addOriginatingElement"]},{"name":"fun addStaticBlock(code: CodeBlock)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-static-block.html","searchKeys":["addStaticBlock","fun addStaticBlock(code: CodeBlock)","com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock"]},{"name":"fun addStaticBlock(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/add-static-block.html","searchKeys":["addStaticBlock","fun addStaticBlock(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.addStaticBlock"]},{"name":"fun addStaticImport(constant: Enum<*>)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(constant: Enum<*>)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun addStaticImport(type: Class<*>, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(type: Class<*>, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun addStaticImport(type: ClassName, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(type: ClassName, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun addStaticImport(type: KClass<*>, vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","fun addStaticImport(type: KClass<*>, vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"fun alwaysQualify(vararg simpleNames: String)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualify","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/always-qualify.html","searchKeys":["alwaysQualify","fun alwaysQualify(vararg simpleNames: String)","com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualify"]},{"name":"fun annotation(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/annotation.html","searchKeys":["annotation","fun annotation(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation"]},{"name":"fun annotation(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/annotation.html","searchKeys":["annotation","fun annotation(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation"]},{"name":"fun annotation(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/annotation.html","searchKeys":["annotation","fun annotation(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation"]},{"name":"fun annotation(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/annotation.html","searchKeys":["annotation","fun annotation(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.annotation"]},{"name":"fun annotationSpecOf(type: Class<*>): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotationSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/annotation-spec-of.html","searchKeys":["annotationSpecOf","fun annotationSpecOf(type: Class<*>): AnnotationSpec","com.hendraanggrian.javapoet.annotationSpecOf"]},{"name":"fun annotationSpecOf(type: ClassName): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotationSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/annotation-spec-of.html","searchKeys":["annotationSpecOf","fun annotationSpecOf(type: ClassName): AnnotationSpec","com.hendraanggrian.javapoet.annotationSpecOf"]},{"name":"fun annotationSpecOf(type: KClass<*>): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotationSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/annotation-spec-of.html","searchKeys":["annotationSpecOf","fun annotationSpecOf(type: KClass<*>): AnnotationSpec","com.hendraanggrian.javapoet.annotationSpecOf"]},{"name":"fun annotationTypeSpecOf(type: ClassName): TypeSpec","description":"com.hendraanggrian.javapoet.annotationTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/annotation-type-spec-of.html","searchKeys":["annotationTypeSpecOf","fun annotationTypeSpecOf(type: ClassName): TypeSpec","com.hendraanggrian.javapoet.annotationTypeSpecOf"]},{"name":"fun annotationTypeSpecOf(type: String): TypeSpec","description":"com.hendraanggrian.javapoet.annotationTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/annotation-type-spec-of.html","searchKeys":["annotationTypeSpecOf","fun annotationTypeSpecOf(type: String): TypeSpec","com.hendraanggrian.javapoet.annotationTypeSpecOf"]},{"name":"fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.FieldSpecBuilder.annotations"]},{"name":"fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.annotations"]},{"name":"fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations"]},{"name":"fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/annotations.html","searchKeys":["annotations","fun annotations(configuration: AnnotationSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.annotations"]},{"name":"fun anonymous(code: CodeBlock): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/anonymous.html","searchKeys":["anonymous","fun anonymous(code: CodeBlock): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous"]},{"name":"fun anonymous(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/anonymous.html","searchKeys":["anonymous","fun anonymous(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous"]},{"name":"fun anonymous(format: String, vararg args: Any): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/anonymous.html","searchKeys":["anonymous","fun anonymous(format: String, vararg args: Any): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous"]},{"name":"fun anonymous(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/anonymous.html","searchKeys":["anonymous","fun anonymous(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.anonymous"]},{"name":"fun anonymousTypeSpecOf(code: CodeBlock): TypeSpec","description":"com.hendraanggrian.javapoet.anonymousTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/anonymous-type-spec-of.html","searchKeys":["anonymousTypeSpecOf","fun anonymousTypeSpecOf(code: CodeBlock): TypeSpec","com.hendraanggrian.javapoet.anonymousTypeSpecOf"]},{"name":"fun anonymousTypeSpecOf(format: String, vararg args: Any): TypeSpec","description":"com.hendraanggrian.javapoet.anonymousTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/anonymous-type-spec-of.html","searchKeys":["anonymousTypeSpecOf","fun anonymousTypeSpecOf(format: String, vararg args: Any): TypeSpec","com.hendraanggrian.javapoet.anonymousTypeSpecOf"]},{"name":"fun appendFlow(flow: String, vararg args: Any, configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-code-block-handler/append-flow.html","searchKeys":["appendFlow","fun appendFlow(flow: String, vararg args: Any, configuration: () -> Unit)","com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendFlow"]},{"name":"fun appendFlow(startFlow: String, startArgs: Array<Any>, endFlow: String, endArgs: Array<Any>, configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-code-block-handler/append-flow.html","searchKeys":["appendFlow","fun appendFlow(startFlow: String, startArgs: Array<Any>, endFlow: String, endArgs: Array<Any>, configuration: () -> Unit)","com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendFlow"]},{"name":"fun avoidClashesWithNestedClasses(type: Class<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(type: Class<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun avoidClashesWithNestedClasses(type: KClass<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(type: KClass<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun avoidClashesWithNestedClasses(typeElement: TypeElement)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","fun avoidClashesWithNestedClasses(typeElement: TypeElement)","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"fun beginFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.beginFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/begin-flow.html","searchKeys":["beginFlow","fun beginFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.beginFlow"]},{"name":"fun beginFlow(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.beginFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/begin-flow.html","searchKeys":["beginFlow","fun beginFlow(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.beginFlow"]},{"name":"fun build(): AnnotationSpec","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.build","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/build.html","searchKeys":["build","fun build(): AnnotationSpec","com.hendraanggrian.javapoet.AnnotationSpecBuilder.build"]},{"name":"fun build(): CodeBlock","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.build","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/build.html","searchKeys":["build","fun build(): CodeBlock","com.hendraanggrian.javapoet.CodeBlockBuilder.build"]},{"name":"fun build(): FieldSpec","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.build","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/build.html","searchKeys":["build","fun build(): FieldSpec","com.hendraanggrian.javapoet.FieldSpecBuilder.build"]},{"name":"fun build(): JavaFile","description":"com.hendraanggrian.javapoet.JavaFileBuilder.build","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/build.html","searchKeys":["build","fun build(): JavaFile","com.hendraanggrian.javapoet.JavaFileBuilder.build"]},{"name":"fun build(): MethodSpec","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.build","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/build.html","searchKeys":["build","fun build(): MethodSpec","com.hendraanggrian.javapoet.MethodSpecBuilder.build"]},{"name":"fun build(): ParameterSpec","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.build","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/build.html","searchKeys":["build","fun build(): ParameterSpec","com.hendraanggrian.javapoet.ParameterSpecBuilder.build"]},{"name":"fun build(): TypeSpec","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.build","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/build.html","searchKeys":["build","fun build(): TypeSpec","com.hendraanggrian.javapoet.TypeSpecBuilder.build"]},{"name":"fun buildAnnotationSpec(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","fun buildAnnotationSpec(type: Class<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"fun buildAnnotationSpec(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","fun buildAnnotationSpec(type: ClassName, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"fun buildAnnotationSpec(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","fun buildAnnotationSpec(type: KClass<*>, configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"fun buildAnnotationTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnnotationTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-annotation-type-spec.html","searchKeys":["buildAnnotationTypeSpec","fun buildAnnotationTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnnotationTypeSpec"]},{"name":"fun buildAnnotationTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnnotationTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-annotation-type-spec.html","searchKeys":["buildAnnotationTypeSpec","fun buildAnnotationTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnnotationTypeSpec"]},{"name":"fun buildAnonymousTypeSpec(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnonymousTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-anonymous-type-spec.html","searchKeys":["buildAnonymousTypeSpec","fun buildAnonymousTypeSpec(code: CodeBlock, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnonymousTypeSpec"]},{"name":"fun buildAnonymousTypeSpec(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildAnonymousTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-anonymous-type-spec.html","searchKeys":["buildAnonymousTypeSpec","fun buildAnonymousTypeSpec(format: String, vararg args: Any, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildAnonymousTypeSpec"]},{"name":"fun buildClassTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildClassTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-class-type-spec.html","searchKeys":["buildClassTypeSpec","fun buildClassTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildClassTypeSpec"]},{"name":"fun buildClassTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildClassTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-class-type-spec.html","searchKeys":["buildClassTypeSpec","fun buildClassTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildClassTypeSpec"]},{"name":"fun buildCodeBlock(configuration: CodeBlockBuilder.() -> Unit): CodeBlock","description":"com.hendraanggrian.javapoet.buildCodeBlock","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-code-block.html","searchKeys":["buildCodeBlock","fun buildCodeBlock(configuration: CodeBlockBuilder.() -> Unit): CodeBlock","com.hendraanggrian.javapoet.buildCodeBlock"]},{"name":"fun buildConstructorMethodSpec(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.buildConstructorMethodSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-constructor-method-spec.html","searchKeys":["buildConstructorMethodSpec","fun buildConstructorMethodSpec(configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.buildConstructorMethodSpec"]},{"name":"fun buildEnumTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildEnumTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-enum-type-spec.html","searchKeys":["buildEnumTypeSpec","fun buildEnumTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildEnumTypeSpec"]},{"name":"fun buildEnumTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildEnumTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-enum-type-spec.html","searchKeys":["buildEnumTypeSpec","fun buildEnumTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildEnumTypeSpec"]},{"name":"fun buildFieldSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","fun buildFieldSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"fun buildFieldSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","fun buildFieldSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"fun buildFieldSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","fun buildFieldSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"fun buildInterfaceTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildInterfaceTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-interface-type-spec.html","searchKeys":["buildInterfaceTypeSpec","fun buildInterfaceTypeSpec(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildInterfaceTypeSpec"]},{"name":"fun buildInterfaceTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","description":"com.hendraanggrian.javapoet.buildInterfaceTypeSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-interface-type-spec.html","searchKeys":["buildInterfaceTypeSpec","fun buildInterfaceTypeSpec(type: String, configuration: TypeSpecBuilder.() -> Unit): TypeSpec","com.hendraanggrian.javapoet.buildInterfaceTypeSpec"]},{"name":"fun buildJavaFile(packageName: String, configuration: JavaFileBuilder.() -> Unit): JavaFile","description":"com.hendraanggrian.javapoet.buildJavaFile","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-java-file.html","searchKeys":["buildJavaFile","fun buildJavaFile(packageName: String, configuration: JavaFileBuilder.() -> Unit): JavaFile","com.hendraanggrian.javapoet.buildJavaFile"]},{"name":"fun buildMethodSpec(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","description":"com.hendraanggrian.javapoet.buildMethodSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-method-spec.html","searchKeys":["buildMethodSpec","fun buildMethodSpec(name: String, configuration: MethodSpecBuilder.() -> Unit): MethodSpec","com.hendraanggrian.javapoet.buildMethodSpec"]},{"name":"fun buildParameterSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","fun buildParameterSpec(type: KClass<*>, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"fun buildParameterSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","fun buildParameterSpec(type: Type, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"fun buildParameterSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","fun buildParameterSpec(type: TypeName, name: String, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"fun class(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/class.html","searchKeys":["class","fun class(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class"]},{"name":"fun class(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/class.html","searchKeys":["class","fun class(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class"]},{"name":"fun class(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/class.html","searchKeys":["class","fun class(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class"]},{"name":"fun class(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/class.html","searchKeys":["class","fun class(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.class"]},{"name":"fun classTypeSpecOf(type: ClassName): TypeSpec","description":"com.hendraanggrian.javapoet.classTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/class-type-spec-of.html","searchKeys":["classTypeSpecOf","fun classTypeSpecOf(type: ClassName): TypeSpec","com.hendraanggrian.javapoet.classTypeSpecOf"]},{"name":"fun classTypeSpecOf(type: String): TypeSpec","description":"com.hendraanggrian.javapoet.classTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/class-type-spec-of.html","searchKeys":["classTypeSpecOf","fun classTypeSpecOf(type: String): TypeSpec","com.hendraanggrian.javapoet.classTypeSpecOf"]},{"name":"fun clear()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.clear","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/clear.html","searchKeys":["clear","fun clear()","com.hendraanggrian.javapoet.CodeBlockBuilder.clear"]},{"name":"fun codeBlockOf(format: String, vararg args: Any): CodeBlock","description":"com.hendraanggrian.javapoet.codeBlockOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/code-block-of.html","searchKeys":["codeBlockOf","fun codeBlockOf(format: String, vararg args: Any): CodeBlock","com.hendraanggrian.javapoet.codeBlockOf"]},{"name":"fun constructor(configuration: MethodSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope.constructor","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler-scope/constructor.html","searchKeys":["constructor","fun constructor(configuration: MethodSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope.constructor"]},{"name":"fun defaultValue(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/default-value.html","searchKeys":["defaultValue","fun defaultValue(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue"]},{"name":"fun defaultValue(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/default-value.html","searchKeys":["defaultValue","fun defaultValue(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue"]},{"name":"fun emptyConstructorMethodSpec(): MethodSpec","description":"com.hendraanggrian.javapoet.emptyConstructorMethodSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/empty-constructor-method-spec.html","searchKeys":["emptyConstructorMethodSpec","fun emptyConstructorMethodSpec(): MethodSpec","com.hendraanggrian.javapoet.emptyConstructorMethodSpec"]},{"name":"fun endFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/end-flow.html","searchKeys":["endFlow","fun endFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.endFlow"]},{"name":"fun endFlow(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.endFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/end-flow.html","searchKeys":["endFlow","fun endFlow(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.endFlow"]},{"name":"fun enum(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/enum.html","searchKeys":["enum","fun enum(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum"]},{"name":"fun enum(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/enum.html","searchKeys":["enum","fun enum(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum"]},{"name":"fun enum(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/enum.html","searchKeys":["enum","fun enum(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum"]},{"name":"fun enum(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/enum.html","searchKeys":["enum","fun enum(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.enum"]},{"name":"fun enumTypeSpecOf(type: ClassName): TypeSpec","description":"com.hendraanggrian.javapoet.enumTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/enum-type-spec-of.html","searchKeys":["enumTypeSpecOf","fun enumTypeSpecOf(type: ClassName): TypeSpec","com.hendraanggrian.javapoet.enumTypeSpecOf"]},{"name":"fun enumTypeSpecOf(type: String): TypeSpec","description":"com.hendraanggrian.javapoet.enumTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/enum-type-spec-of.html","searchKeys":["enumTypeSpecOf","fun enumTypeSpecOf(type: String): TypeSpec","com.hendraanggrian.javapoet.enumTypeSpecOf"]},{"name":"fun fieldSpecOf(type: KClass<*>, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.fieldSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/field-spec-of.html","searchKeys":["fieldSpecOf","fun fieldSpecOf(type: KClass<*>, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.fieldSpecOf"]},{"name":"fun fieldSpecOf(type: Type, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.fieldSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/field-spec-of.html","searchKeys":["fieldSpecOf","fun fieldSpecOf(type: Type, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.fieldSpecOf"]},{"name":"fun fieldSpecOf(type: TypeName, name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.fieldSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/field-spec-of.html","searchKeys":["fieldSpecOf","fun fieldSpecOf(type: TypeName, name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.fieldSpecOf"]},{"name":"fun fields(configuration: FieldSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.fields","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/fields.html","searchKeys":["fields","fun fields(configuration: FieldSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.fields"]},{"name":"fun indent()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.indent","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/indent.html","searchKeys":["indent","fun indent()","com.hendraanggrian.javapoet.CodeBlockBuilder.indent"]},{"name":"fun indent(configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.indent","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/indent.html","searchKeys":["indent","fun indent(configuration: () -> Unit)","com.hendraanggrian.javapoet.CodeBlockBuilder.indent"]},{"name":"fun indent(level: Int, configuration: () -> Unit)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.indent","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/indent.html","searchKeys":["indent","fun indent(level: Int, configuration: () -> Unit)","com.hendraanggrian.javapoet.CodeBlockBuilder.indent"]},{"name":"fun initializer(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.initializer","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/initializer.html","searchKeys":["initializer","fun initializer(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.FieldSpecBuilder.initializer"]},{"name":"fun initializer(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.initializer","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/initializer.html","searchKeys":["initializer","fun initializer(format: String, vararg args: Any)","com.hendraanggrian.javapoet.FieldSpecBuilder.initializer"]},{"name":"fun interface(type: ClassName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/interface.html","searchKeys":["interface","fun interface(type: ClassName): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface"]},{"name":"fun interface(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/interface.html","searchKeys":["interface","fun interface(type: ClassName, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface"]},{"name":"fun interface(type: String): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/interface.html","searchKeys":["interface","fun interface(type: String): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface"]},{"name":"fun interface(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler-scope/interface.html","searchKeys":["interface","fun interface(type: String, configuration: TypeSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.TypeSpecHandlerScope.interface"]},{"name":"fun interfaceTypeSpecOf(type: ClassName): TypeSpec","description":"com.hendraanggrian.javapoet.interfaceTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/interface-type-spec-of.html","searchKeys":["interfaceTypeSpecOf","fun interfaceTypeSpecOf(type: ClassName): TypeSpec","com.hendraanggrian.javapoet.interfaceTypeSpecOf"]},{"name":"fun interfaceTypeSpecOf(type: String): TypeSpec","description":"com.hendraanggrian.javapoet.interfaceTypeSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/interface-type-spec-of.html","searchKeys":["interfaceTypeSpecOf","fun interfaceTypeSpecOf(type: String): TypeSpec","com.hendraanggrian.javapoet.interfaceTypeSpecOf"]},{"name":"fun isEmpty(): Boolean","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.isEmpty","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/is-empty.html","searchKeys":["isEmpty","fun isEmpty(): Boolean","com.hendraanggrian.javapoet.CodeBlockBuilder.isEmpty"]},{"name":"fun isNotEmpty(): Boolean","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.isNotEmpty","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/is-not-empty.html","searchKeys":["isNotEmpty","fun isNotEmpty(): Boolean","com.hendraanggrian.javapoet.CodeBlockBuilder.isNotEmpty"]},{"name":"fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc"]},{"name":"fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc"]},{"name":"fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc"]},{"name":"fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/javadoc.html","searchKeys":["javadoc","fun javadoc(configuration: JavadocHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc"]},{"name":"fun methodSpecOf(name: String): MethodSpec","description":"com.hendraanggrian.javapoet.methodSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/method-spec-of.html","searchKeys":["methodSpecOf","fun methodSpecOf(name: String): MethodSpec","com.hendraanggrian.javapoet.methodSpecOf"]},{"name":"fun methods(configuration: MethodSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.methods","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/methods.html","searchKeys":["methods","fun methods(configuration: MethodSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.methods"]},{"name":"fun nextFlow(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nextFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/next-flow.html","searchKeys":["nextFlow","fun nextFlow(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.nextFlow"]},{"name":"fun nextFlow(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nextFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/next-flow.html","searchKeys":["nextFlow","fun nextFlow(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.nextFlow"]},{"name":"fun parameterSpecOf(type: KClass<*>, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.parameterSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameter-spec-of.html","searchKeys":["parameterSpecOf","fun parameterSpecOf(type: KClass<*>, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.parameterSpecOf"]},{"name":"fun parameterSpecOf(type: Type, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.parameterSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameter-spec-of.html","searchKeys":["parameterSpecOf","fun parameterSpecOf(type: Type, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.parameterSpecOf"]},{"name":"fun parameterSpecOf(type: TypeName, name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.parameterSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameter-spec-of.html","searchKeys":["parameterSpecOf","fun parameterSpecOf(type: TypeName, name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.parameterSpecOf"]},{"name":"fun parameters(configuration: ParameterSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.parameters","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/parameters.html","searchKeys":["parameters","fun parameters(configuration: ParameterSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.parameters"]},{"name":"fun returns(type: KClass<*>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","fun returns(type: KClass<*>)","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"fun returns(type: Type)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","fun returns(type: Type)","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"fun superclass(type: KClass<*>)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","fun superclass(type: KClass<*>)","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"fun superclass(type: Type)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","fun superclass(type: Type)","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"fun superinterfaces(configuration: TypeNameHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/superinterfaces.html","searchKeys":["superinterfaces","fun superinterfaces(configuration: TypeNameHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces"]},{"name":"fun typeVariables(configuration: TypeVariableNameHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/type-variables.html","searchKeys":["typeVariables","fun typeVariables(configuration: TypeVariableNameHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables"]},{"name":"fun typeVariables(configuration: TypeVariableNameHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/type-variables.html","searchKeys":["typeVariables","fun typeVariables(configuration: TypeVariableNameHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables"]},{"name":"fun types(configuration: TypeSpecHandlerScope.() -> Unit)","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.types","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/types.html","searchKeys":["types","fun types(configuration: TypeSpecHandlerScope.() -> Unit)","com.hendraanggrian.javapoet.TypeSpecBuilder.types"]},{"name":"fun unindent()","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.unindent","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/unindent.html","searchKeys":["unindent","fun unindent()","com.hendraanggrian.javapoet.CodeBlockBuilder.unindent"]},{"name":"inline fun <T> add(): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","inline fun <T> add(): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"inline fun <T> add(): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler/add.html","searchKeys":["add","inline fun <T> add(): Boolean","com.hendraanggrian.javapoet.dsl.TypeNameHandler.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.add"]},{"name":"inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/add.html","searchKeys":["add","inline fun <T> add(name: String, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.add"]},{"name":"inline fun <T> add(noinline configuration: AnnotationSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/add.html","searchKeys":["add","inline fun <T> add(noinline configuration: AnnotationSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.add"]},{"name":"inline fun <T> addException()","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.addException","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/add-exception.html","searchKeys":["addException","inline fun <T> addException()","com.hendraanggrian.javapoet.MethodSpecBuilder.addException"]},{"name":"inline fun <T> addStaticImport(vararg names: String)","description":"com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/add-static-import.html","searchKeys":["addStaticImport","inline fun <T> addStaticImport(vararg names: String)","com.hendraanggrian.javapoet.JavaFileBuilder.addStaticImport"]},{"name":"inline fun <T> annotationSpecOf(): AnnotationSpec","description":"com.hendraanggrian.javapoet.annotationSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/annotation-spec-of.html","searchKeys":["annotationSpecOf","inline fun <T> annotationSpecOf(): AnnotationSpec","com.hendraanggrian.javapoet.annotationSpecOf"]},{"name":"inline fun <T> avoidClashesWithNestedClasses()","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/avoid-clashes-with-nested-classes.html","searchKeys":["avoidClashesWithNestedClasses","inline fun <T> avoidClashesWithNestedClasses()","com.hendraanggrian.javapoet.TypeSpecBuilder.avoidClashesWithNestedClasses"]},{"name":"inline fun <T> buildAnnotationSpec(noinline configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","description":"com.hendraanggrian.javapoet.buildAnnotationSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-annotation-spec.html","searchKeys":["buildAnnotationSpec","inline fun <T> buildAnnotationSpec(noinline configuration: AnnotationSpecBuilder.() -> Unit): AnnotationSpec","com.hendraanggrian.javapoet.buildAnnotationSpec"]},{"name":"inline fun <T> buildFieldSpec(name: String, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","description":"com.hendraanggrian.javapoet.buildFieldSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-field-spec.html","searchKeys":["buildFieldSpec","inline fun <T> buildFieldSpec(name: String, vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): FieldSpec","com.hendraanggrian.javapoet.buildFieldSpec"]},{"name":"inline fun <T> buildParameterSpec(name: String, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","description":"com.hendraanggrian.javapoet.buildParameterSpec","location":"javapoet-ktx/com.hendraanggrian.javapoet/build-parameter-spec.html","searchKeys":["buildParameterSpec","inline fun <T> buildParameterSpec(name: String, vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): ParameterSpec","com.hendraanggrian.javapoet.buildParameterSpec"]},{"name":"inline fun <T> fieldSpecOf(name: String, vararg modifiers: Modifier): FieldSpec","description":"com.hendraanggrian.javapoet.fieldSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/field-spec-of.html","searchKeys":["fieldSpecOf","inline fun <T> fieldSpecOf(name: String, vararg modifiers: Modifier): FieldSpec","com.hendraanggrian.javapoet.fieldSpecOf"]},{"name":"inline fun <T> parameterSpecOf(name: String, vararg modifiers: Modifier): ParameterSpec","description":"com.hendraanggrian.javapoet.parameterSpecOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameter-spec-of.html","searchKeys":["parameterSpecOf","inline fun <T> parameterSpecOf(name: String, vararg modifiers: Modifier): ParameterSpec","com.hendraanggrian.javapoet.parameterSpecOf"]},{"name":"inline fun <T> returns()","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.returns","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/returns.html","searchKeys":["returns","inline fun <T> returns()","com.hendraanggrian.javapoet.MethodSpecBuilder.returns"]},{"name":"inline fun <T> superclass()","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superclass","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/superclass.html","searchKeys":["superclass","inline fun <T> superclass()","com.hendraanggrian.javapoet.TypeSpecBuilder.superclass"]},{"name":"inline fun <T> typeNameOf(): TypeName","description":"com.hendraanggrian.javapoet.typeNameOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/type-name-of.html","searchKeys":["typeNameOf","inline fun <T> typeNameOf(): TypeName","com.hendraanggrian.javapoet.typeNameOf"]},{"name":"inline fun ArrayType.asArrayTypeName(): ArrayTypeName","description":"com.hendraanggrian.javapoet.asArrayTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-array-type-name.html","searchKeys":["asArrayTypeName","inline fun ArrayType.asArrayTypeName(): ArrayTypeName","com.hendraanggrian.javapoet.asArrayTypeName"]},{"name":"inline fun Class<*>.asClassName(): ClassName","description":"com.hendraanggrian.javapoet.asClassName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-class-name.html","searchKeys":["asClassName","inline fun Class<*>.asClassName(): ClassName","com.hendraanggrian.javapoet.asClassName"]},{"name":"inline fun Class<*>.parameterizedBy(vararg typeArguments: Type): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","inline fun Class<*>.parameterizedBy(vararg typeArguments: Type): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"inline fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","inline fun ClassName.parameterizedBy(vararg typeArguments: TypeName): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"inline fun GenericArrayType.asArrayTypeName(): ArrayTypeName","description":"com.hendraanggrian.javapoet.asArrayTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-array-type-name.html","searchKeys":["asArrayTypeName","inline fun GenericArrayType.asArrayTypeName(): ArrayTypeName","com.hendraanggrian.javapoet.asArrayTypeName"]},{"name":"inline fun KClass<*>.arrayOf(): ArrayTypeName","description":"com.hendraanggrian.javapoet.arrayOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/array-of.html","searchKeys":["arrayOf","inline fun KClass<*>.arrayOf(): ArrayTypeName","com.hendraanggrian.javapoet.arrayOf"]},{"name":"inline fun KClass<*>.asClassName(): ClassName","description":"com.hendraanggrian.javapoet.asClassName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-class-name.html","searchKeys":["asClassName","inline fun KClass<*>.asClassName(): ClassName","com.hendraanggrian.javapoet.asClassName"]},{"name":"inline fun KClass<*>.asTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-type-name.html","searchKeys":["asTypeName","inline fun KClass<*>.asTypeName(): TypeName","com.hendraanggrian.javapoet.asTypeName"]},{"name":"inline fun KClass<*>.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.parameterizedBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/parameterized-by.html","searchKeys":["parameterizedBy","inline fun KClass<*>.parameterizedBy(vararg typeArguments: KClass<*>): ParameterizedTypeName","com.hendraanggrian.javapoet.parameterizedBy"]},{"name":"inline fun KClass<*>.wildcardSubtypeOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardSubtypeOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/wildcard-subtype-of.html","searchKeys":["wildcardSubtypeOf","inline fun KClass<*>.wildcardSubtypeOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardSubtypeOf"]},{"name":"inline fun KClass<*>.wildcardSupertypeOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardSupertypeOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/wildcard-supertype-of.html","searchKeys":["wildcardSupertypeOf","inline fun KClass<*>.wildcardSupertypeOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardSupertypeOf"]},{"name":"inline fun ParameterizedType.asParameterizedTypeName(): ParameterizedTypeName","description":"com.hendraanggrian.javapoet.asParameterizedTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-parameterized-type-name.html","searchKeys":["asParameterizedTypeName","inline fun ParameterizedType.asParameterizedTypeName(): ParameterizedTypeName","com.hendraanggrian.javapoet.asParameterizedTypeName"]},{"name":"inline fun String.classOf(simpleName: String, vararg simpleNames: String): ClassName","description":"com.hendraanggrian.javapoet.classOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/class-of.html","searchKeys":["classOf","inline fun String.classOf(simpleName: String, vararg simpleNames: String): ClassName","com.hendraanggrian.javapoet.classOf"]},{"name":"inline fun String.typeVarBy(vararg bounds: KClass<*>): TypeVariableName","description":"com.hendraanggrian.javapoet.typeVarBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/type-var-by.html","searchKeys":["typeVarBy","inline fun String.typeVarBy(vararg bounds: KClass<*>): TypeVariableName","com.hendraanggrian.javapoet.typeVarBy"]},{"name":"inline fun String.typeVarBy(vararg bounds: Type): TypeVariableName","description":"com.hendraanggrian.javapoet.typeVarBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/type-var-by.html","searchKeys":["typeVarBy","inline fun String.typeVarBy(vararg bounds: Type): TypeVariableName","com.hendraanggrian.javapoet.typeVarBy"]},{"name":"inline fun String.typeVarBy(vararg bounds: TypeName): TypeVariableName","description":"com.hendraanggrian.javapoet.typeVarBy","location":"javapoet-ktx/com.hendraanggrian.javapoet/type-var-by.html","searchKeys":["typeVarBy","inline fun String.typeVarBy(vararg bounds: TypeName): TypeVariableName","com.hendraanggrian.javapoet.typeVarBy"]},{"name":"inline fun String.typeVarOf(): TypeVariableName","description":"com.hendraanggrian.javapoet.typeVarOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/type-var-of.html","searchKeys":["typeVarOf","inline fun String.typeVarOf(): TypeVariableName","com.hendraanggrian.javapoet.typeVarOf"]},{"name":"inline fun Type.arrayOf(): ArrayTypeName","description":"com.hendraanggrian.javapoet.arrayOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/array-of.html","searchKeys":["arrayOf","inline fun Type.arrayOf(): ArrayTypeName","com.hendraanggrian.javapoet.arrayOf"]},{"name":"inline fun Type.asTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-type-name.html","searchKeys":["asTypeName","inline fun Type.asTypeName(): TypeName","com.hendraanggrian.javapoet.asTypeName"]},{"name":"inline fun Type.wildcardSubtypeOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardSubtypeOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/wildcard-subtype-of.html","searchKeys":["wildcardSubtypeOf","inline fun Type.wildcardSubtypeOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardSubtypeOf"]},{"name":"inline fun Type.wildcardSupertypeOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardSupertypeOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/wildcard-supertype-of.html","searchKeys":["wildcardSupertypeOf","inline fun Type.wildcardSupertypeOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardSupertypeOf"]},{"name":"inline fun TypeElement.asClassName(): ClassName","description":"com.hendraanggrian.javapoet.asClassName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-class-name.html","searchKeys":["asClassName","inline fun TypeElement.asClassName(): ClassName","com.hendraanggrian.javapoet.asClassName"]},{"name":"inline fun TypeMirror.asTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-type-name.html","searchKeys":["asTypeName","inline fun TypeMirror.asTypeName(): TypeName","com.hendraanggrian.javapoet.asTypeName"]},{"name":"inline fun TypeName.arrayOf(): ArrayTypeName","description":"com.hendraanggrian.javapoet.arrayOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/array-of.html","searchKeys":["arrayOf","inline fun TypeName.arrayOf(): ArrayTypeName","com.hendraanggrian.javapoet.arrayOf"]},{"name":"inline fun TypeName.wildcardSubtypeOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardSubtypeOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/wildcard-subtype-of.html","searchKeys":["wildcardSubtypeOf","inline fun TypeName.wildcardSubtypeOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardSubtypeOf"]},{"name":"inline fun TypeName.wildcardSupertypeOf(): WildcardTypeName","description":"com.hendraanggrian.javapoet.wildcardSupertypeOf","location":"javapoet-ktx/com.hendraanggrian.javapoet/wildcard-supertype-of.html","searchKeys":["wildcardSupertypeOf","inline fun TypeName.wildcardSupertypeOf(): WildcardTypeName","com.hendraanggrian.javapoet.wildcardSupertypeOf"]},{"name":"inline fun TypeParameterElement.asTypeVariableName(): TypeVariableName","description":"com.hendraanggrian.javapoet.asTypeVariableName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","inline fun TypeParameterElement.asTypeVariableName(): TypeVariableName","com.hendraanggrian.javapoet.asTypeVariableName"]},{"name":"inline fun TypeVariable.asTypeVariableName(): TypeVariableName","description":"com.hendraanggrian.javapoet.asTypeVariableName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","inline fun TypeVariable.asTypeVariableName(): TypeVariableName","com.hendraanggrian.javapoet.asTypeVariableName"]},{"name":"inline fun TypeVariable<*>.asTypeVariableName(): TypeVariableName","description":"com.hendraanggrian.javapoet.asTypeVariableName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-type-variable-name.html","searchKeys":["asTypeVariableName","inline fun TypeVariable<*>.asTypeVariableName(): TypeVariableName","com.hendraanggrian.javapoet.asTypeVariableName"]},{"name":"inline fun WildcardType.asWildcardTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asWildcardTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-wildcard-type-name.html","searchKeys":["asWildcardTypeName","inline fun WildcardType.asWildcardTypeName(): TypeName","com.hendraanggrian.javapoet.asWildcardTypeName"]},{"name":"inline fun WildcardType.asWildcardTypeName(): TypeName","description":"com.hendraanggrian.javapoet.asWildcardTypeName","location":"javapoet-ktx/com.hendraanggrian.javapoet/as-wildcard-type-name.html","searchKeys":["asWildcardTypeName","inline fun WildcardType.asWildcardTypeName(): TypeName","com.hendraanggrian.javapoet.asWildcardTypeName"]},{"name":"inline operator fun <T> String.invoke(vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","inline operator fun <T> String.invoke(vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"inline operator fun <T> String.invoke(vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","inline operator fun <T> String.invoke(vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"inline operator fun <T> String.invoke(vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","inline operator fun <T> String.invoke(vararg modifiers: Modifier, noinline configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"inline operator fun <T> String.invoke(vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","inline operator fun <T> String.invoke(vararg modifiers: Modifier, noinline configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"inline operator fun plusAssign(name: String)","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(name: String)","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler.plusAssign"]},{"name":"inline operator fun plusAssign(type: Class<*>)","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: Class<*>)","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.plusAssign"]},{"name":"inline operator fun plusAssign(type: ClassName)","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: ClassName)","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.plusAssign"]},{"name":"inline operator fun plusAssign(type: KClass<*>)","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: KClass<*>)","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler.plusAssign"]},{"name":"inline operator fun plusAssign(type: KClass<*>)","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: KClass<*>)","com.hendraanggrian.javapoet.dsl.TypeNameHandler.plusAssign"]},{"name":"inline operator fun plusAssign(type: Type)","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler/plus-assign.html","searchKeys":["plusAssign","inline operator fun plusAssign(type: Type)","com.hendraanggrian.javapoet.dsl.TypeNameHandler.plusAssign"]},{"name":"inline operator fun set(name: String, type: KClass<*>)","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.set","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/set.html","searchKeys":["set","inline operator fun set(name: String, type: KClass<*>)","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.set"]},{"name":"inline operator fun set(name: String, type: KClass<*>)","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.set","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/set.html","searchKeys":["set","inline operator fun set(name: String, type: KClass<*>)","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.set"]},{"name":"inline operator fun set(name: String, type: Type)","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.set","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/set.html","searchKeys":["set","inline operator fun set(name: String, type: Type)","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.set"]},{"name":"inline operator fun set(name: String, type: Type)","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.set","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/set.html","searchKeys":["set","inline operator fun set(name: String, type: Type)","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.set"]},{"name":"inline operator fun set(name: String, type: TypeName)","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler.set","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/set.html","searchKeys":["set","inline operator fun set(name: String, type: TypeName)","com.hendraanggrian.javapoet.dsl.FieldSpecHandler.set"]},{"name":"inline operator fun set(name: String, type: TypeName)","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.set","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/set.html","searchKeys":["set","inline operator fun set(name: String, type: TypeName)","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler.set"]},{"name":"open class AnnotationSpecHandler(actualList: MutableList<AnnotationSpec>) : MutableList<AnnotationSpec> ","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler/index.html","searchKeys":["AnnotationSpecHandler","open class AnnotationSpecHandler(actualList: MutableList<AnnotationSpec>) : MutableList<AnnotationSpec> ","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandler"]},{"name":"open class FieldSpecHandler(actualList: MutableList<FieldSpec>) : MutableList<FieldSpec> ","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler/index.html","searchKeys":["FieldSpecHandler","open class FieldSpecHandler(actualList: MutableList<FieldSpec>) : MutableList<FieldSpec> ","com.hendraanggrian.javapoet.dsl.FieldSpecHandler"]},{"name":"open class MethodSpecHandler(actualList: MutableList<MethodSpec>) : MutableList<MethodSpec> ","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler/index.html","searchKeys":["MethodSpecHandler","open class MethodSpecHandler(actualList: MutableList<MethodSpec>) : MutableList<MethodSpec> ","com.hendraanggrian.javapoet.dsl.MethodSpecHandler"]},{"name":"open class ParameterSpecHandler(actualList: MutableList<ParameterSpec>) : MutableList<ParameterSpec> ","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler/index.html","searchKeys":["ParameterSpecHandler","open class ParameterSpecHandler(actualList: MutableList<ParameterSpec>) : MutableList<ParameterSpec> ","com.hendraanggrian.javapoet.dsl.ParameterSpecHandler"]},{"name":"open class TypeNameHandler(actualList: MutableList<TypeName>) : MutableList<TypeName> ","description":"com.hendraanggrian.javapoet.dsl.TypeNameHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-name-handler/index.html","searchKeys":["TypeNameHandler","open class TypeNameHandler(actualList: MutableList<TypeName>) : MutableList<TypeName> ","com.hendraanggrian.javapoet.dsl.TypeNameHandler"]},{"name":"open class TypeSpecHandler(actualList: MutableList<TypeSpec>) : MutableList<TypeSpec> ","description":"com.hendraanggrian.javapoet.dsl.TypeSpecHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-spec-handler/index.html","searchKeys":["TypeSpecHandler","open class TypeSpecHandler(actualList: MutableList<TypeSpec>) : MutableList<TypeSpec> ","com.hendraanggrian.javapoet.dsl.TypeSpecHandler"]},{"name":"open class TypeVariableNameHandler(actualList: MutableList<TypeVariableName>) : MutableList<TypeVariableName> ","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler/index.html","searchKeys":["TypeVariableNameHandler","open class TypeVariableNameHandler(actualList: MutableList<TypeVariableName>) : MutableList<TypeVariableName> ","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandler"]},{"name":"open override fun append(code: CodeBlock)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.append","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/append.html","searchKeys":["append","open override fun append(code: CodeBlock)","com.hendraanggrian.javapoet.CodeBlockBuilder.append"]},{"name":"open override fun append(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.append","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/append.html","searchKeys":["append","open override fun append(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.append"]},{"name":"open override fun append(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.append","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/append.html","searchKeys":["append","open override fun append(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.append"]},{"name":"open override fun append(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.append","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/append.html","searchKeys":["append","open override fun append(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.append"]},{"name":"open override fun appendLine()","description":"com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-code-block-handler/append-line.html","searchKeys":["appendLine","open override fun appendLine()","com.hendraanggrian.javapoet.dsl.CodeBlockHandler.appendLine"]},{"name":"open override fun appendLine()","description":"com.hendraanggrian.javapoet.dsl.JavadocHandler.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler/append-line.html","searchKeys":["appendLine","open override fun appendLine()","com.hendraanggrian.javapoet.dsl.JavadocHandler.appendLine"]},{"name":"open override fun appendLine()","description":"com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler-scope/append-line.html","searchKeys":["appendLine","open override fun appendLine()","com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.appendLine"]},{"name":"open override fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine"]},{"name":"open override fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine"]},{"name":"open override fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.dsl.JavadocHandler.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler/append-line.html","searchKeys":["appendLine","open override fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.dsl.JavadocHandler.appendLine"]},{"name":"open override fun appendLine(code: CodeBlock)","description":"com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler-scope/append-line.html","searchKeys":["appendLine","open override fun appendLine(code: CodeBlock)","com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.appendLine"]},{"name":"open override fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendLine"]},{"name":"open override fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/append-line.html","searchKeys":["appendLine","open override fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendLine"]},{"name":"open override fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.dsl.JavadocHandler.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler/append-line.html","searchKeys":["appendLine","open override fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.dsl.JavadocHandler.appendLine"]},{"name":"open override fun appendLine(format: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.appendLine","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler-scope/append-line.html","searchKeys":["appendLine","open override fun appendLine(format: String, vararg args: Any)","com.hendraanggrian.javapoet.dsl.JavadocHandlerScope.appendLine"]},{"name":"open override fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.appendNamed","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/append-named.html","searchKeys":["appendNamed","open override fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.CodeBlockBuilder.appendNamed"]},{"name":"open override fun appendNamed(format: String, args: Map<String, *>)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.appendNamed","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/append-named.html","searchKeys":["appendNamed","open override fun appendNamed(format: String, args: Map<String, *>)","com.hendraanggrian.javapoet.MethodSpecBuilder.appendNamed"]},{"name":"open override fun nextFlow(flow: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.nextFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/next-flow.html","searchKeys":["nextFlow","open override fun nextFlow(flow: String, vararg args: Any)","com.hendraanggrian.javapoet.CodeBlockBuilder.nextFlow"]},{"name":"open override fun nextFlow(flow: String, vararg args: Any)","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nextFlow","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/next-flow.html","searchKeys":["nextFlow","open override fun nextFlow(flow: String, vararg args: Any)","com.hendraanggrian.javapoet.MethodSpecBuilder.nextFlow"]},{"name":"operator fun Class<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun Class<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.invoke"]},{"name":"operator fun ClassName.invoke(configuration: AnnotationSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun ClassName.invoke(configuration: AnnotationSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.invoke"]},{"name":"operator fun KClass<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-annotation-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun KClass<*>.invoke(configuration: AnnotationSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.AnnotationSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(configuration: CodeBlockBuilder.() -> Unit)","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/invoke.html","searchKeys":["invoke","operator fun String.invoke(configuration: CodeBlockBuilder.() -> Unit)","com.hendraanggrian.javapoet.AnnotationSpecBuilder.invoke"]},{"name":"operator fun String.invoke(configuration: MethodSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-method-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(configuration: MethodSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.MethodSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: KClass<*>, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: Type, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: Type, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: Type, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: Type, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: Type, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: Type, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: Type, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: Type, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: TypeName, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: TypeName, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: TypeName, vararg modifiers: Modifier): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: TypeName, vararg modifiers: Modifier): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-field-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: FieldSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.FieldSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","description":"com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-parameter-spec-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(type: TypeName, vararg modifiers: Modifier, configuration: ParameterSpecBuilder.() -> Unit): Boolean","com.hendraanggrian.javapoet.dsl.ParameterSpecHandlerScope.invoke"]},{"name":"operator fun String.invoke(vararg bounds: KClass<*>): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(vararg bounds: KClass<*>): Boolean","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.invoke"]},{"name":"operator fun String.invoke(vararg bounds: Type): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(vararg bounds: Type): Boolean","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.invoke"]},{"name":"operator fun String.invoke(vararg bounds: TypeName): Boolean","description":"com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.invoke","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-type-variable-name-handler-scope/invoke.html","searchKeys":["invoke","operator fun String.invoke(vararg bounds: TypeName): Boolean","com.hendraanggrian.javapoet.dsl.TypeVariableNameHandlerScope.invoke"]},{"name":"operator fun plusAssign(code: CodeBlock)","description":"com.hendraanggrian.javapoet.dsl.JavadocHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(code: CodeBlock)","com.hendraanggrian.javapoet.dsl.JavadocHandler.plusAssign"]},{"name":"operator fun plusAssign(value: String)","description":"com.hendraanggrian.javapoet.dsl.JavadocHandler.plusAssign","location":"javapoet-ktx/com.hendraanggrian.javapoet.dsl/-javadoc-handler/plus-assign.html","searchKeys":["plusAssign","operator fun plusAssign(value: String)","com.hendraanggrian.javapoet.dsl.JavadocHandler.plusAssign"]},{"name":"val ABSTRACT: Modifier","description":"com.hendraanggrian.javapoet.ABSTRACT","location":"javapoet-ktx/com.hendraanggrian.javapoet/-a-b-s-t-r-a-c-t.html","searchKeys":["ABSTRACT","val ABSTRACT: Modifier","com.hendraanggrian.javapoet.ABSTRACT"]},{"name":"val BOOLEAN: TypeName","description":"com.hendraanggrian.javapoet.BOOLEAN","location":"javapoet-ktx/com.hendraanggrian.javapoet/-b-o-o-l-e-a-n.html","searchKeys":["BOOLEAN","val BOOLEAN: TypeName","com.hendraanggrian.javapoet.BOOLEAN"]},{"name":"val BYTE: TypeName","description":"com.hendraanggrian.javapoet.BYTE","location":"javapoet-ktx/com.hendraanggrian.javapoet/-b-y-t-e.html","searchKeys":["BYTE","val BYTE: TypeName","com.hendraanggrian.javapoet.BYTE"]},{"name":"val CHAR: TypeName","description":"com.hendraanggrian.javapoet.CHAR","location":"javapoet-ktx/com.hendraanggrian.javapoet/-c-h-a-r.html","searchKeys":["CHAR","val CHAR: TypeName","com.hendraanggrian.javapoet.CHAR"]},{"name":"val DEFAULT: Modifier","description":"com.hendraanggrian.javapoet.DEFAULT","location":"javapoet-ktx/com.hendraanggrian.javapoet/-d-e-f-a-u-l-t.html","searchKeys":["DEFAULT","val DEFAULT: Modifier","com.hendraanggrian.javapoet.DEFAULT"]},{"name":"val DOUBLE: TypeName","description":"com.hendraanggrian.javapoet.DOUBLE","location":"javapoet-ktx/com.hendraanggrian.javapoet/-d-o-u-b-l-e.html","searchKeys":["DOUBLE","val DOUBLE: TypeName","com.hendraanggrian.javapoet.DOUBLE"]},{"name":"val FINAL: Modifier","description":"com.hendraanggrian.javapoet.FINAL","location":"javapoet-ktx/com.hendraanggrian.javapoet/-f-i-n-a-l.html","searchKeys":["FINAL","val FINAL: Modifier","com.hendraanggrian.javapoet.FINAL"]},{"name":"val FLOAT: TypeName","description":"com.hendraanggrian.javapoet.FLOAT","location":"javapoet-ktx/com.hendraanggrian.javapoet/-f-l-o-a-t.html","searchKeys":["FLOAT","val FLOAT: TypeName","com.hendraanggrian.javapoet.FLOAT"]},{"name":"val INT: TypeName","description":"com.hendraanggrian.javapoet.INT","location":"javapoet-ktx/com.hendraanggrian.javapoet/-i-n-t.html","searchKeys":["INT","val INT: TypeName","com.hendraanggrian.javapoet.INT"]},{"name":"val LONG: TypeName","description":"com.hendraanggrian.javapoet.LONG","location":"javapoet-ktx/com.hendraanggrian.javapoet/-l-o-n-g.html","searchKeys":["LONG","val LONG: TypeName","com.hendraanggrian.javapoet.LONG"]},{"name":"val NATIVE: Modifier","description":"com.hendraanggrian.javapoet.NATIVE","location":"javapoet-ktx/com.hendraanggrian.javapoet/-n-a-t-i-v-e.html","searchKeys":["NATIVE","val NATIVE: Modifier","com.hendraanggrian.javapoet.NATIVE"]},{"name":"val OBJECT: TypeName","description":"com.hendraanggrian.javapoet.OBJECT","location":"javapoet-ktx/com.hendraanggrian.javapoet/-o-b-j-e-c-t.html","searchKeys":["OBJECT","val OBJECT: TypeName","com.hendraanggrian.javapoet.OBJECT"]},{"name":"val PRIVATE: Modifier","description":"com.hendraanggrian.javapoet.PRIVATE","location":"javapoet-ktx/com.hendraanggrian.javapoet/-p-r-i-v-a-t-e.html","searchKeys":["PRIVATE","val PRIVATE: Modifier","com.hendraanggrian.javapoet.PRIVATE"]},{"name":"val PROTECTED: Modifier","description":"com.hendraanggrian.javapoet.PROTECTED","location":"javapoet-ktx/com.hendraanggrian.javapoet/-p-r-o-t-e-c-t-e-d.html","searchKeys":["PROTECTED","val PROTECTED: Modifier","com.hendraanggrian.javapoet.PROTECTED"]},{"name":"val PUBLIC: Modifier","description":"com.hendraanggrian.javapoet.PUBLIC","location":"javapoet-ktx/com.hendraanggrian.javapoet/-p-u-b-l-i-c.html","searchKeys":["PUBLIC","val PUBLIC: Modifier","com.hendraanggrian.javapoet.PUBLIC"]},{"name":"val SHORT: TypeName","description":"com.hendraanggrian.javapoet.SHORT","location":"javapoet-ktx/com.hendraanggrian.javapoet/-s-h-o-r-t.html","searchKeys":["SHORT","val SHORT: TypeName","com.hendraanggrian.javapoet.SHORT"]},{"name":"val STATIC: Modifier","description":"com.hendraanggrian.javapoet.STATIC","location":"javapoet-ktx/com.hendraanggrian.javapoet/-s-t-a-t-i-c.html","searchKeys":["STATIC","val STATIC: Modifier","com.hendraanggrian.javapoet.STATIC"]},{"name":"val STRICTFP: Modifier","description":"com.hendraanggrian.javapoet.STRICTFP","location":"javapoet-ktx/com.hendraanggrian.javapoet/-s-t-r-i-c-t-f-p.html","searchKeys":["STRICTFP","val STRICTFP: Modifier","com.hendraanggrian.javapoet.STRICTFP"]},{"name":"val SYNCHRONIZED: Modifier","description":"com.hendraanggrian.javapoet.SYNCHRONIZED","location":"javapoet-ktx/com.hendraanggrian.javapoet/-s-y-n-c-h-r-o-n-i-z-e-d.html","searchKeys":["SYNCHRONIZED","val SYNCHRONIZED: Modifier","com.hendraanggrian.javapoet.SYNCHRONIZED"]},{"name":"val TRANSIENT: Modifier","description":"com.hendraanggrian.javapoet.TRANSIENT","location":"javapoet-ktx/com.hendraanggrian.javapoet/-t-r-a-n-s-i-e-n-t.html","searchKeys":["TRANSIENT","val TRANSIENT: Modifier","com.hendraanggrian.javapoet.TRANSIENT"]},{"name":"val VOID: TypeName","description":"com.hendraanggrian.javapoet.VOID","location":"javapoet-ktx/com.hendraanggrian.javapoet/-v-o-i-d.html","searchKeys":["VOID","val VOID: TypeName","com.hendraanggrian.javapoet.VOID"]},{"name":"val VOLATILE: Modifier","description":"com.hendraanggrian.javapoet.VOLATILE","location":"javapoet-ktx/com.hendraanggrian.javapoet/-v-o-l-a-t-i-l-e.html","searchKeys":["VOLATILE","val VOLATILE: Modifier","com.hendraanggrian.javapoet.VOLATILE"]},{"name":"val alwaysQualifiedNames: MutableSet<String>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualifiedNames","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/always-qualified-names.html","searchKeys":["alwaysQualifiedNames","val alwaysQualifiedNames: MutableSet<String>","com.hendraanggrian.javapoet.TypeSpecBuilder.alwaysQualifiedNames"]},{"name":"val annotations: AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecHandler","com.hendraanggrian.javapoet.FieldSpecBuilder.annotations"]},{"name":"val annotations: AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecHandler","com.hendraanggrian.javapoet.MethodSpecBuilder.annotations"]},{"name":"val annotations: AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecHandler","com.hendraanggrian.javapoet.ParameterSpecBuilder.annotations"]},{"name":"val annotations: AnnotationSpecHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.annotations","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/annotations.html","searchKeys":["annotations","val annotations: AnnotationSpecHandler","com.hendraanggrian.javapoet.TypeSpecBuilder.annotations"]},{"name":"val enumConstants: MutableMap<String, TypeSpec>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/enum-constants.html","searchKeys":["enumConstants","val enumConstants: MutableMap<String, TypeSpec>","com.hendraanggrian.javapoet.TypeSpecBuilder.enumConstants"]},{"name":"val fields: FieldSpecHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.fields","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/fields.html","searchKeys":["fields","val fields: FieldSpecHandler","com.hendraanggrian.javapoet.TypeSpecBuilder.fields"]},{"name":"val javadoc: JavadocHandler","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocHandler","com.hendraanggrian.javapoet.FieldSpecBuilder.javadoc"]},{"name":"val javadoc: JavadocHandler","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocHandler","com.hendraanggrian.javapoet.MethodSpecBuilder.javadoc"]},{"name":"val javadoc: JavadocHandler","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocHandler","com.hendraanggrian.javapoet.ParameterSpecBuilder.javadoc"]},{"name":"val javadoc: JavadocHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/javadoc.html","searchKeys":["javadoc","val javadoc: JavadocHandler","com.hendraanggrian.javapoet.TypeSpecBuilder.javadoc"]},{"name":"val members: Map<String, List<CodeBlock>>","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.members","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/members.html","searchKeys":["members","val members: Map<String, List<CodeBlock>>","com.hendraanggrian.javapoet.AnnotationSpecBuilder.members"]},{"name":"val methods: MethodSpecHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.methods","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/methods.html","searchKeys":["methods","val methods: MethodSpecHandler","com.hendraanggrian.javapoet.TypeSpecBuilder.methods"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.FieldSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.MethodSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.ParameterSpecBuilder.modifiers"]},{"name":"val modifiers: MutableList<Modifier>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/modifiers.html","searchKeys":["modifiers","val modifiers: MutableList<Modifier>","com.hendraanggrian.javapoet.TypeSpecBuilder.modifiers"]},{"name":"val nativeBuilder: AnnotationSpec.Builder","description":"com.hendraanggrian.javapoet.AnnotationSpecBuilder.nativeBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-annotation-spec-builder/native-builder.html","searchKeys":["nativeBuilder","val nativeBuilder: AnnotationSpec.Builder","com.hendraanggrian.javapoet.AnnotationSpecBuilder.nativeBuilder"]},{"name":"val nativeBuilder: CodeBlock.Builder","description":"com.hendraanggrian.javapoet.CodeBlockBuilder.nativeBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-code-block-builder/native-builder.html","searchKeys":["nativeBuilder","val nativeBuilder: CodeBlock.Builder","com.hendraanggrian.javapoet.CodeBlockBuilder.nativeBuilder"]},{"name":"val nativeBuilder: FieldSpec.Builder","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.nativeBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/native-builder.html","searchKeys":["nativeBuilder","val nativeBuilder: FieldSpec.Builder","com.hendraanggrian.javapoet.FieldSpecBuilder.nativeBuilder"]},{"name":"val nativeBuilder: MethodSpec.Builder","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.nativeBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/native-builder.html","searchKeys":["nativeBuilder","val nativeBuilder: MethodSpec.Builder","com.hendraanggrian.javapoet.MethodSpecBuilder.nativeBuilder"]},{"name":"val nativeBuilder: ParameterSpec.Builder","description":"com.hendraanggrian.javapoet.ParameterSpecBuilder.nativeBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-parameter-spec-builder/native-builder.html","searchKeys":["nativeBuilder","val nativeBuilder: ParameterSpec.Builder","com.hendraanggrian.javapoet.ParameterSpecBuilder.nativeBuilder"]},{"name":"val nativeBuilder: TypeSpec.Builder","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.nativeBuilder","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/native-builder.html","searchKeys":["nativeBuilder","val nativeBuilder: TypeSpec.Builder","com.hendraanggrian.javapoet.TypeSpecBuilder.nativeBuilder"]},{"name":"val originatingElements: MutableList<Element>","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElements","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/originating-elements.html","searchKeys":["originatingElements","val originatingElements: MutableList<Element>","com.hendraanggrian.javapoet.TypeSpecBuilder.originatingElements"]},{"name":"val parameters: ParameterSpecHandler","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.parameters","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/parameters.html","searchKeys":["parameters","val parameters: ParameterSpecHandler","com.hendraanggrian.javapoet.MethodSpecBuilder.parameters"]},{"name":"val superinterfaces: TypeNameHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/superinterfaces.html","searchKeys":["superinterfaces","val superinterfaces: TypeNameHandler","com.hendraanggrian.javapoet.TypeSpecBuilder.superinterfaces"]},{"name":"val typeVariables: TypeVariableNameHandler","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: TypeVariableNameHandler","com.hendraanggrian.javapoet.MethodSpecBuilder.typeVariables"]},{"name":"val typeVariables: TypeVariableNameHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/type-variables.html","searchKeys":["typeVariables","val typeVariables: TypeVariableNameHandler","com.hendraanggrian.javapoet.TypeSpecBuilder.typeVariables"]},{"name":"val types: TypeSpecHandler","description":"com.hendraanggrian.javapoet.TypeSpecBuilder.types","location":"javapoet-ktx/com.hendraanggrian.javapoet/-type-spec-builder/types.html","searchKeys":["types","val types: TypeSpecHandler","com.hendraanggrian.javapoet.TypeSpecBuilder.types"]},{"name":"var comment: String","description":"com.hendraanggrian.javapoet.JavaFileBuilder.comment","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/comment.html","searchKeys":["comment","var comment: String","com.hendraanggrian.javapoet.JavaFileBuilder.comment"]},{"name":"var defaultValue: CodeBlock","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/default-value.html","searchKeys":["defaultValue","var defaultValue: CodeBlock","com.hendraanggrian.javapoet.MethodSpecBuilder.defaultValue"]},{"name":"var indent: String","description":"com.hendraanggrian.javapoet.JavaFileBuilder.indent","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/indent.html","searchKeys":["indent","var indent: String","com.hendraanggrian.javapoet.JavaFileBuilder.indent"]},{"name":"var indentSize: Int","description":"com.hendraanggrian.javapoet.JavaFileBuilder.indentSize","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/indent-size.html","searchKeys":["indentSize","var indentSize: Int","com.hendraanggrian.javapoet.JavaFileBuilder.indentSize"]},{"name":"var initializer: CodeBlock","description":"com.hendraanggrian.javapoet.FieldSpecBuilder.initializer","location":"javapoet-ktx/com.hendraanggrian.javapoet/-field-spec-builder/initializer.html","searchKeys":["initializer","var initializer: CodeBlock","com.hendraanggrian.javapoet.FieldSpecBuilder.initializer"]},{"name":"var isVarargs: Boolean","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.isVarargs","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/is-varargs.html","searchKeys":["isVarargs","var isVarargs: Boolean","com.hendraanggrian.javapoet.MethodSpecBuilder.isVarargs"]},{"name":"var name: String","description":"com.hendraanggrian.javapoet.MethodSpecBuilder.name","location":"javapoet-ktx/com.hendraanggrian.javapoet/-method-spec-builder/name.html","searchKeys":["name","var name: String","com.hendraanggrian.javapoet.MethodSpecBuilder.name"]},{"name":"var skipJavaLangImports: Boolean","description":"com.hendraanggrian.javapoet.JavaFileBuilder.skipJavaLangImports","location":"javapoet-ktx/com.hendraanggrian.javapoet/-java-file-builder/skip-java-lang-imports.html","searchKeys":["skipJavaLangImports","var skipJavaLangImports: Boolean","com.hendraanggrian.javapoet.JavaFileBuilder.skipJavaLangImports"]}]
